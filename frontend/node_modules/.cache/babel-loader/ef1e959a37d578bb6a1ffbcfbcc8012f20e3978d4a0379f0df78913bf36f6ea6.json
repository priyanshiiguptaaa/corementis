{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rkgup\\\\OneDrive\\\\Desktop\\\\corementis\\\\frontend\\\\src\\\\components\\\\student\\\\ChatbotButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComments, faPaperPlane, faTimes, faRobot, faUser, faTrash, faMicrophone, faSpinner, faCamera } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotButton = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [initialized, setInitialized] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [speechSupported, setSpeechSupported] = useState(false);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [isPlayingAudio, setIsPlayingAudio] = useState(false);\n  const [currentAudioMessage, setCurrentAudioMessage] = useState(null);\n  const messagesEndRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const streamRef = useRef(null);\n\n  // Generate a user ID or get from localStorage\n  const getUserId = () => {\n    let userId = localStorage.getItem('corementis_user_id');\n    if (!userId) {\n      userId = 'user_' + Math.random().toString(36).substring(2, 15);\n      localStorage.setItem('corementis_user_id', userId);\n    }\n    return userId;\n  };\n\n  // Initialize speech recognition\n  useEffect(() => {\n    // Initialize Web Speech API\n    if (window.SpeechRecognition || window.webkitSpeechRecognition) {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      recognitionRef.current = new SpeechRecognition();\n      recognitionRef.current.continuous = false;\n      recognitionRef.current.interimResults = false;\n      recognitionRef.current.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setInputMessage(transcript);\n        sendMessage(transcript);\n      };\n      recognitionRef.current.onerror = event => {\n        console.error('Speech recognition error', event.error);\n        setError(`Speech recognition error: ${event.error}`);\n        setIsListening(false);\n      };\n      recognitionRef.current.onend = () => {\n        setIsListening(false);\n      };\n      setSpeechSupported(true);\n    }\n\n    // Check camera capabilities\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      console.log('Camera API is supported');\n    } else {\n      console.error('Camera API is not supported in this browser');\n      setError('Camera is not supported in your browser');\n    }\n  }, []);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Initialize chatbot when first opened\n  useEffect(() => {\n    if (isOpen && !initialized) {\n      initializeChatbot();\n    }\n  }, [isOpen, initialized]);\n  const initializeChatbot = async () => {\n    try {\n      setIsLoading(true);\n      console.log('Initializing chatbot...');\n      const response = await fetch('http://localhost:5001/api/chatbot/initialize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          course_context: 'Computer Vision and Machine Learning'\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Server responded with status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        setInitialized(true);\n        // If there's existing conversation, fetch it\n        if (data.conversation_length > 1) {\n          fetchHistory();\n        } else {\n          // Add welcome message\n          setMessages([{\n            role: 'assistant',\n            content: 'Hello! I\\'m your CoreMentis AI assistant. How can I help you with your studies today?'\n          }]);\n        }\n      } else {\n        setError('Failed to initialize chatbot: ' + data.message);\n      }\n    } catch (err) {\n      setError('Error connecting to chatbot service: ' + err.message);\n      console.error('Error initializing chatbot:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchHistory = async () => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/chatbot/history?user_id=${getUserId()}`);\n      const data = await response.json();\n      if (data.success) {\n        setMessages(data.history);\n      }\n    } catch (err) {\n      console.error('Error fetching chat history:', err);\n    }\n  };\n  const toggleListening = () => {\n    if (!speechSupported) {\n      setError('Speech recognition is not supported in your browser.');\n      return;\n    }\n    if (isListening) {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    } else {\n      setError(null);\n      recognitionRef.current.start();\n      setIsListening(true);\n    }\n  };\n  const toggleCamera = async () => {\n    console.log('Toggle camera called, current state:', isCameraActive);\n    if (isCameraActive) {\n      // Stop the camera\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n        streamRef.current = null;\n      }\n      setIsCameraActive(false);\n      setCapturedImage(null);\n      console.log('Camera deactivated');\n    } else {\n      try {\n        // First set camera active to render the video element\n        setIsCameraActive(true);\n\n        // Wait for the video element to be rendered\n        setTimeout(async () => {\n          try {\n            // Start the camera\n            setError(null);\n            console.log('Requesting camera access...');\n            const stream = await navigator.mediaDevices.getUserMedia({\n              video: {\n                width: {\n                  ideal: 1280\n                },\n                height: {\n                  ideal: 720\n                }\n              }\n            });\n            console.log('Camera access granted, setting up video stream');\n            streamRef.current = stream;\n            if (videoRef.current) {\n              console.log('Video ref exists, setting srcObject');\n              videoRef.current.srcObject = stream;\n              videoRef.current.onloadedmetadata = () => {\n                console.log('Video metadata loaded, dimensions:', videoRef.current.videoWidth, 'x', videoRef.current.videoHeight);\n              };\n            } else {\n              console.error('Video ref does not exist');\n              setError('Video element not found');\n              setIsCameraActive(false);\n            }\n          } catch (err) {\n            setError('Error accessing camera: ' + err.message);\n            console.error('Error accessing camera:', err);\n            setIsCameraActive(false);\n          }\n        }, 500); // Wait 500ms for the video element to be rendered\n      } catch (err) {\n        setError('Error setting up camera: ' + err.message);\n        console.error('Error setting up camera:', err);\n        setIsCameraActive(false);\n      }\n    }\n  };\n  const captureImage = () => {\n    if (!isCameraActive || !videoRef.current || !canvasRef.current) {\n      console.error('Cannot capture image: camera not active or refs not available');\n      return;\n    }\n    try {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      console.log('Video dimensions:', video.videoWidth, video.videoHeight);\n\n      // Set canvas dimensions to match video\n      canvas.width = video.videoWidth || 640;\n      canvas.height = video.videoHeight || 480;\n      if (video.videoWidth === 0 || video.videoHeight === 0) {\n        console.warn('Video dimensions are zero, using fallback dimensions');\n      }\n\n      // Draw the current video frame to the canvas\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // Get the image as a data URL\n      const imageDataUrl = canvas.toDataURL('image/jpeg', 0.9);\n      console.log('Image captured, data URL length:', imageDataUrl.length);\n      setCapturedImage(imageDataUrl);\n\n      // Stop the camera\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n        streamRef.current = null;\n      }\n      setIsCameraActive(false);\n    } catch (err) {\n      console.error('Error capturing image:', err);\n      setError('Error capturing image: ' + err.message);\n    }\n  };\n  const processImage = async () => {\n    if (!capturedImage) return;\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      // Send the image to the backend for OCR\n      const response = await fetch('http://localhost:5001/api/chatbot/image-to-text', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          image: capturedImage\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        // Set the extracted text in the input field\n        setInputMessage(data.text);\n\n        // Auto-send the extracted text\n        sendMessage(data.text);\n      } else {\n        setError('Failed to extract text from image: ' + data.message);\n      }\n    } catch (err) {\n      setError('Error processing image: ' + err.message);\n      console.error('Error processing image:', err);\n    } finally {\n      setIsLoading(false);\n      setCapturedImage(null);\n    }\n  };\n  const sendMessage = async voiceInput => {\n    const messageToSend = voiceInput || inputMessage.trim();\n    if (!messageToSend) return;\n    if (!voiceInput) {\n      setInputMessage('');\n    }\n\n    // Add user message to UI immediately\n    setMessages(prev => [...prev, {\n      role: 'user',\n      content: messageToSend\n    }]);\n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5001/api/chatbot/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          message: messageToSend\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        // Add the response to messages with audio capability\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: data.response,\n          hasAudio: true,\n          // Flag to indicate this message can be converted to speech\n          audioData: null // Will store audio data once generated\n        }]);\n      } else {\n        setError('Failed to get response: ' + data.message);\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: 'Sorry, I encountered an error. Please try again later.'\n        }]);\n      }\n    } catch (err) {\n      setError('Error sending message: ' + err.message);\n      console.error('Error sending message:', err);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again later.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const clearConversation = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/chatbot/clear', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          course_context: 'Computer Vision and Machine Learning'\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setMessages([{\n          role: 'assistant',\n          content: 'Conversation history cleared. How can I help you today?'\n        }]);\n      } else {\n        setError('Failed to clear conversation: ' + data.message);\n      }\n    } catch (err) {\n      setError('Error clearing conversation: ' + err.message);\n      console.error('Error clearing conversation:', err);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-6 right-6 z-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsOpen(!isOpen),\n      className: \"bg-intel-blue hover:bg-intel-dark-blue text-white rounded-full w-14 h-14 flex items-center justify-center shadow-lg transition-all duration-300 hover:scale-110\",\n      \"aria-label\": \"Open AI Assistant\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faComments,\n        size: \"lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-20 right-0 w-80 sm:w-96 bg-white rounded-lg shadow-xl overflow-hidden flex flex-col border border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-intel-blue text-white p-4 flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faRobot,\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium\",\n            children: \"CoreMentis AI Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearConversation,\n            className: \"text-white hover:text-gray-200 transition-colors\",\n            title: \"Clear conversation\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTrash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsOpen(false),\n            className: \"text-white hover:text-gray-200 transition-colors\",\n            title: \"Close chatbot\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 overflow-y-auto max-h-96 bg-gray-50\",\n        children: messages.length === 0 && !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-gray-500 py-8\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faRobot,\n            size: \"2x\",\n            className: \"mb-2 text-intel-blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Start a conversation with the AI assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `max-w-3/4 rounded-lg p-3 ${msg.role === 'user' ? 'bg-intel-blue text-white rounded-br-none' : 'bg-gray-200 text-gray-800 rounded-bl-none'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: msg.role === 'user' ? faUser : faRobot,\n                  className: \"mr-2\",\n                  size: \"xs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs font-semibold\",\n                  children: msg.role === 'user' ? 'You' : 'AI Assistant'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"whitespace-pre-wrap text-sm\",\n                children: msg.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 19\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-start\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-200 text-gray-800 rounded-lg rounded-bl-none p-3 max-w-3/4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-2 h-2 bg-gray-600 rounded-full animate-bounce\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-2 h-2 bg-gray-600 rounded-full animate-bounce\",\n                  style: {\n                    animationDelay: '0.2s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-2 h-2 bg-gray-600 rounded-full animate-bounce\",\n                  style: {\n                    animationDelay: '0.4s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 text-red-800 p-2 text-xs\",\n        children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setError(null),\n          className: \"ml-2 text-red-800 hover:text-red-900\",\n          children: \"Dismiss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 13\n      }, this), isCameraActive && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative border-t border-gray-200 p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-black rounded-lg\",\n          style: {\n            minHeight: '200px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            playsInline: true,\n            muted: true,\n            className: \"w-full h-full rounded-lg\",\n            style: {\n              maxHeight: '200px',\n              objectFit: 'contain'\n            },\n            onLoadedData: () => console.log('Video loaded and ready')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"absolute top-4 right-4 p-2 bg-blue-600 text-white rounded-full hover:bg-blue-700 focus:outline-none\",\n          onClick: captureImage,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCamera\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 13\n      }, this), capturedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative border-t border-gray-200 p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: capturedImage,\n          alt: \"Captured\",\n          className: \"w-full rounded-lg\",\n          style: {\n            maxHeight: '200px',\n            objectFit: 'contain'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mt-2 space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600 focus:outline-none\",\n            onClick: () => setCapturedImage(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 focus:outline-none\",\n            onClick: processImage,\n            disabled: isLoading,\n            children: isLoading ? 'Processing...' : 'Extract Text'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"hidden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-t border-gray-200 p-3 bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Ask me anything...\",\n            className: \"flex-1 border border-gray-300 rounded-l-lg p-2 focus:outline-none focus:ring-2 focus:ring-intel-blue focus:border-transparent resize-none max-h-20\",\n            rows: \"1\",\n            disabled: isListening\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 15\n          }, this), speechSupported && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleListening,\n            disabled: isLoading,\n            className: `p-2 ${isListening ? 'bg-red-500 hover:bg-red-600' : 'bg-green-500 hover:bg-green-600'} text-white`,\n            title: isListening ? 'Stop listening' : 'Start voice input',\n            children: isListening ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSpinner,\n              spin: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faMicrophone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleCamera,\n            disabled: isLoading,\n            className: `p-2 ${isCameraActive ? 'bg-red-500 hover:bg-red-600' : 'bg-blue-500 hover:bg-blue-600'} text-white`,\n            title: isCameraActive ? 'Stop camera' : 'Capture image',\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCamera\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendMessage(),\n            disabled: isLoading || !inputMessage.trim(),\n            className: `bg-intel-blue text-white p-2 rounded-r-lg h-full ${!inputMessage.trim() || isLoading ? 'opacity-50 cursor-not-allowed' : 'hover:bg-intel-dark-blue'}`,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPaperPlane\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500 mt-1 text-center\",\n          children: speechSupported ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Type or \", isListening ? 'speaking...' : 'click the microphone to speak', \" \\u2022 Powered by Groq LLM API\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Powered by Groq LLM API\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 386,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotButton, \"VAFSmJJCols9yGBhhQu5hIL5yjc=\");\n_c = ChatbotButton;\nexport default ChatbotButton;\nvar _c;\n$RefreshReg$(_c, \"ChatbotButton\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FontAwesomeIcon","faComments","faPaperPlane","faTimes","faRobot","faUser","faTrash","faMicrophone","faSpinner","faCamera","jsxDEV","_jsxDEV","ChatbotButton","_s","isOpen","setIsOpen","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","error","setError","initialized","setInitialized","isListening","setIsListening","speechSupported","setSpeechSupported","isCameraActive","setIsCameraActive","capturedImage","setCapturedImage","isPlayingAudio","setIsPlayingAudio","currentAudioMessage","setCurrentAudioMessage","messagesEndRef","recognitionRef","videoRef","canvasRef","streamRef","getUserId","userId","localStorage","getItem","Math","random","toString","substring","setItem","window","SpeechRecognition","webkitSpeechRecognition","current","continuous","interimResults","onresult","event","transcript","results","sendMessage","onerror","console","onend","navigator","mediaDevices","getUserMedia","log","scrollToBottom","_messagesEndRef$curre","scrollIntoView","behavior","initializeChatbot","response","fetch","method","headers","body","JSON","stringify","user_id","course_context","ok","Error","status","data","json","success","conversation_length","fetchHistory","role","content","message","err","history","toggleListening","stop","start","toggleCamera","getTracks","forEach","track","setTimeout","stream","video","width","ideal","height","srcObject","onloadedmetadata","videoWidth","videoHeight","captureImage","canvas","context","getContext","warn","drawImage","imageDataUrl","toDataURL","length","processImage","image","text","voiceInput","messageToSend","trim","prev","hasAudio","audioData","clearConversation","handleKeyPress","e","key","shiftKey","preventDefault","className","children","onClick","icon","size","fileName","_jsxFileName","lineNumber","columnNumber","title","map","msg","index","style","animationDelay","ref","minHeight","autoPlay","playsInline","muted","maxHeight","objectFit","onLoadedData","src","alt","disabled","value","onChange","target","onKeyPress","placeholder","rows","spin","_c","$RefreshReg$"],"sources":["C:/Users/rkgup/OneDrive/Desktop/corementis/frontend/src/components/student/ChatbotButton.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComments, faPaperPlane, faTimes, faRobot, faUser, faTrash, faMicrophone, faSpinner, faCamera } from '@fortawesome/free-solid-svg-icons';\n\nconst ChatbotButton = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [initialized, setInitialized] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [speechSupported, setSpeechSupported] = useState(false);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [isPlayingAudio, setIsPlayingAudio] = useState(false);\n  const [currentAudioMessage, setCurrentAudioMessage] = useState(null);\n  \n  const messagesEndRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const streamRef = useRef(null);\n  \n  // Generate a user ID or get from localStorage\n  const getUserId = () => {\n    let userId = localStorage.getItem('corementis_user_id');\n    if (!userId) {\n      userId = 'user_' + Math.random().toString(36).substring(2, 15);\n      localStorage.setItem('corementis_user_id', userId);\n    }\n    return userId;\n  };\n  \n  // Initialize speech recognition\n  useEffect(() => {\n    // Initialize Web Speech API\n    if (window.SpeechRecognition || window.webkitSpeechRecognition) {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      recognitionRef.current = new SpeechRecognition();\n      recognitionRef.current.continuous = false;\n      recognitionRef.current.interimResults = false;\n      \n      recognitionRef.current.onresult = (event) => {\n        const transcript = event.results[0][0].transcript;\n        setInputMessage(transcript);\n        sendMessage(transcript);\n      };\n      \n      recognitionRef.current.onerror = (event) => {\n        console.error('Speech recognition error', event.error);\n        setError(`Speech recognition error: ${event.error}`);\n        setIsListening(false);\n      };\n      \n      recognitionRef.current.onend = () => {\n        setIsListening(false);\n      };\n      \n      setSpeechSupported(true);\n    }\n    \n    // Check camera capabilities\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      console.log('Camera API is supported');\n    } else {\n      console.error('Camera API is not supported in this browser');\n      setError('Camera is not supported in your browser');\n    }\n  }, []);\n  \n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n  \n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  \n  // Initialize chatbot when first opened\n  useEffect(() => {\n    if (isOpen && !initialized) {\n      initializeChatbot();\n    }\n  }, [isOpen, initialized]);\n  \n  const initializeChatbot = async () => {\n    try {\n      setIsLoading(true);\n      console.log('Initializing chatbot...');\n      const response = await fetch('http://localhost:5001/api/chatbot/initialize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          course_context: 'Computer Vision and Machine Learning'\n        }),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Server responded with status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setInitialized(true);\n        // If there's existing conversation, fetch it\n        if (data.conversation_length > 1) {\n          fetchHistory();\n        } else {\n          // Add welcome message\n          setMessages([\n            {\n              role: 'assistant',\n              content: 'Hello! I\\'m your CoreMentis AI assistant. How can I help you with your studies today?'\n            }\n          ]);\n        }\n      } else {\n        setError('Failed to initialize chatbot: ' + data.message);\n      }\n    } catch (err) {\n      setError('Error connecting to chatbot service: ' + err.message);\n      console.error('Error initializing chatbot:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const fetchHistory = async () => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/chatbot/history?user_id=${getUserId()}`);\n      const data = await response.json();\n      \n      if (data.success) {\n        setMessages(data.history);\n      }\n    } catch (err) {\n      console.error('Error fetching chat history:', err);\n    }\n  };\n  \n  const toggleListening = () => {\n    if (!speechSupported) {\n      setError('Speech recognition is not supported in your browser.');\n      return;\n    }\n    \n    if (isListening) {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    } else {\n      setError(null);\n      recognitionRef.current.start();\n      setIsListening(true);\n    }\n  };\n  \n  const toggleCamera = async () => {\n    console.log('Toggle camera called, current state:', isCameraActive);\n    \n    if (isCameraActive) {\n      // Stop the camera\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n        streamRef.current = null;\n      }\n      setIsCameraActive(false);\n      setCapturedImage(null);\n      console.log('Camera deactivated');\n    } else {\n      try {\n        // First set camera active to render the video element\n        setIsCameraActive(true);\n        \n        // Wait for the video element to be rendered\n        setTimeout(async () => {\n          try {\n            // Start the camera\n            setError(null);\n            console.log('Requesting camera access...');\n            const stream = await navigator.mediaDevices.getUserMedia({ \n              video: { \n                width: { ideal: 1280 },\n                height: { ideal: 720 }\n              } \n            });\n            \n            console.log('Camera access granted, setting up video stream');\n            streamRef.current = stream;\n            \n            if (videoRef.current) {\n              console.log('Video ref exists, setting srcObject');\n              videoRef.current.srcObject = stream;\n              videoRef.current.onloadedmetadata = () => {\n                console.log('Video metadata loaded, dimensions:', \n                  videoRef.current.videoWidth, 'x', videoRef.current.videoHeight);\n              };\n            } else {\n              console.error('Video ref does not exist');\n              setError('Video element not found');\n              setIsCameraActive(false);\n            }\n          } catch (err) {\n            setError('Error accessing camera: ' + err.message);\n            console.error('Error accessing camera:', err);\n            setIsCameraActive(false);\n          }\n        }, 500); // Wait 500ms for the video element to be rendered\n      } catch (err) {\n        setError('Error setting up camera: ' + err.message);\n        console.error('Error setting up camera:', err);\n        setIsCameraActive(false);\n      }\n    }\n  };\n  \n  const captureImage = () => {\n    if (!isCameraActive || !videoRef.current || !canvasRef.current) {\n      console.error('Cannot capture image: camera not active or refs not available');\n      return;\n    }\n    \n    try {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      \n      console.log('Video dimensions:', video.videoWidth, video.videoHeight);\n      \n      // Set canvas dimensions to match video\n      canvas.width = video.videoWidth || 640;\n      canvas.height = video.videoHeight || 480;\n      \n      if (video.videoWidth === 0 || video.videoHeight === 0) {\n        console.warn('Video dimensions are zero, using fallback dimensions');\n      }\n      \n      // Draw the current video frame to the canvas\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n      \n      // Get the image as a data URL\n      const imageDataUrl = canvas.toDataURL('image/jpeg', 0.9);\n      console.log('Image captured, data URL length:', imageDataUrl.length);\n      setCapturedImage(imageDataUrl);\n      \n      // Stop the camera\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n        streamRef.current = null;\n      }\n      setIsCameraActive(false);\n    } catch (err) {\n      console.error('Error capturing image:', err);\n      setError('Error capturing image: ' + err.message);\n    }\n  };\n  \n  const processImage = async () => {\n    if (!capturedImage) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Send the image to the backend for OCR\n      const response = await fetch('http://localhost:5001/api/chatbot/image-to-text', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          image: capturedImage\n        }),\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        // Set the extracted text in the input field\n        setInputMessage(data.text);\n        \n        // Auto-send the extracted text\n        sendMessage(data.text);\n      } else {\n        setError('Failed to extract text from image: ' + data.message);\n      }\n    } catch (err) {\n      setError('Error processing image: ' + err.message);\n      console.error('Error processing image:', err);\n    } finally {\n      setIsLoading(false);\n      setCapturedImage(null);\n    }\n  };\n  \n  const sendMessage = async (voiceInput) => {\n    const messageToSend = voiceInput || inputMessage.trim();\n    if (!messageToSend) return;\n    \n    if (!voiceInput) {\n      setInputMessage('');\n    }\n    \n    // Add user message to UI immediately\n    setMessages(prev => [...prev, { role: 'user', content: messageToSend }]);\n    \n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5001/api/chatbot/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          message: messageToSend\n        }),\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        // Add the response to messages with audio capability\n        setMessages(prev => [...prev, { \n          role: 'assistant', \n          content: data.response,\n          hasAudio: true, // Flag to indicate this message can be converted to speech\n          audioData: null // Will store audio data once generated\n        }]);\n      } else {\n        setError('Failed to get response: ' + data.message);\n        setMessages(prev => [...prev, { role: 'assistant', content: 'Sorry, I encountered an error. Please try again later.' }]);\n      }\n    } catch (err) {\n      setError('Error sending message: ' + err.message);\n      console.error('Error sending message:', err);\n      setMessages(prev => [...prev, { role: 'assistant', content: 'Sorry, I encountered an error. Please try again later.' }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const clearConversation = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/chatbot/clear', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          course_context: 'Computer Vision and Machine Learning'\n        }),\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setMessages([\n          {\n            role: 'assistant',\n            content: 'Conversation history cleared. How can I help you today?'\n          }\n        ]);\n      } else {\n        setError('Failed to clear conversation: ' + data.message);\n      }\n    } catch (err) {\n      setError('Error clearing conversation: ' + err.message);\n      console.error('Error clearing conversation:', err);\n    }\n  };\n  \n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  \n  return (\n    <div className=\"fixed bottom-6 right-6 z-50\">\n      {/* Chatbot Button */}\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"bg-intel-blue hover:bg-intel-dark-blue text-white rounded-full w-14 h-14 flex items-center justify-center shadow-lg transition-all duration-300 hover:scale-110\"\n        aria-label=\"Open AI Assistant\"\n      >\n        <FontAwesomeIcon icon={faComments} size=\"lg\" />\n      </button>\n      \n      {/* Chatbot Panel */}\n      {isOpen && (\n        <div className=\"absolute bottom-20 right-0 w-80 sm:w-96 bg-white rounded-lg shadow-xl overflow-hidden flex flex-col border border-gray-200\">\n          {/* Header */}\n          <div className=\"bg-intel-blue text-white p-4 flex justify-between items-center\">\n            <div className=\"flex items-center\">\n              <FontAwesomeIcon icon={faRobot} className=\"mr-2\" />\n              <h3 className=\"font-medium\">CoreMentis AI Assistant</h3>\n            </div>\n            <div className=\"flex space-x-2\">\n              <button \n                onClick={clearConversation}\n                className=\"text-white hover:text-gray-200 transition-colors\"\n                title=\"Clear conversation\"\n              >\n                <FontAwesomeIcon icon={faTrash} />\n              </button>\n              <button \n                onClick={() => setIsOpen(false)}\n                className=\"text-white hover:text-gray-200 transition-colors\"\n                title=\"Close chatbot\"\n              >\n                <FontAwesomeIcon icon={faTimes} />\n              </button>\n            </div>\n          </div>\n          \n          {/* Messages Container */}\n          <div className=\"flex-1 p-4 overflow-y-auto max-h-96 bg-gray-50\">\n            {messages.length === 0 && !isLoading ? (\n              <div className=\"text-center text-gray-500 py-8\">\n                <FontAwesomeIcon icon={faRobot} size=\"2x\" className=\"mb-2 text-intel-blue\" />\n                <p>Start a conversation with the AI assistant</p>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {messages.map((msg, index) => (\n                  <div \n                    key={index} \n                    className={`flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`}\n                  >\n                    <div \n                      className={`max-w-3/4 rounded-lg p-3 ${msg.role === 'user' \n                        ? 'bg-intel-blue text-white rounded-br-none' \n                        : 'bg-gray-200 text-gray-800 rounded-bl-none'}`}\n                    >\n                      <div className=\"flex items-center mb-1\">\n                        <FontAwesomeIcon \n                          icon={msg.role === 'user' ? faUser : faRobot} \n                          className=\"mr-2\" \n                          size=\"xs\"\n                        />\n                        <span className=\"text-xs font-semibold\">\n                          {msg.role === 'user' ? 'You' : 'AI Assistant'}\n                        </span>\n                      </div>\n                      <p className=\"whitespace-pre-wrap text-sm\">{msg.content}</p>\n                    </div>\n                  </div>\n                ))}\n                {isLoading && (\n                  <div className=\"flex justify-start\">\n                    <div className=\"bg-gray-200 text-gray-800 rounded-lg rounded-bl-none p-3 max-w-3/4\">\n                      <div className=\"flex items-center space-x-1\">\n                        <div className=\"w-2 h-2 bg-gray-600 rounded-full animate-bounce\"></div>\n                        <div className=\"w-2 h-2 bg-gray-600 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                        <div className=\"w-2 h-2 bg-gray-600 rounded-full animate-bounce\" style={{ animationDelay: '0.4s' }}></div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                <div ref={messagesEndRef} />\n              </div>\n            )}\n          </div>\n          \n          {/* Error Message */}\n          {error && (\n            <div className=\"bg-red-100 text-red-800 p-2 text-xs\">\n              {error}\n              <button \n                onClick={() => setError(null)} \n                className=\"ml-2 text-red-800 hover:text-red-900\"\n              >\n                Dismiss\n              </button>\n            </div>\n          )}\n          \n          {/* Camera view */}\n          {isCameraActive && (\n            <div className=\"relative border-t border-gray-200 p-2\">\n              <div className=\"bg-black rounded-lg\" style={{ minHeight: '200px' }}>\n                <video\n                  ref={videoRef}\n                  autoPlay\n                  playsInline\n                  muted\n                  className=\"w-full h-full rounded-lg\"\n                  style={{ maxHeight: '200px', objectFit: 'contain' }}\n                  onLoadedData={() => console.log('Video loaded and ready')}\n                />\n              </div>\n              <button\n                className=\"absolute top-4 right-4 p-2 bg-blue-600 text-white rounded-full hover:bg-blue-700 focus:outline-none\"\n                onClick={captureImage}\n              >\n                <FontAwesomeIcon icon={faCamera} />\n              </button>\n            </div>\n          )}\n          \n          {/* Captured image */}\n          {capturedImage && (\n            <div className=\"relative border-t border-gray-200 p-2\">\n              <img\n                src={capturedImage}\n                alt=\"Captured\"\n                className=\"w-full rounded-lg\"\n                style={{ maxHeight: '200px', objectFit: 'contain' }}\n              />\n              <div className=\"flex justify-center mt-2 space-x-2\">\n                <button\n                  className=\"px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600 focus:outline-none\"\n                  onClick={() => setCapturedImage(null)}\n                >\n                  Cancel\n                </button>\n                <button\n                  className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 focus:outline-none\"\n                  onClick={processImage}\n                  disabled={isLoading}\n                >\n                  {isLoading ? 'Processing...' : 'Extract Text'}\n                </button>\n              </div>\n            </div>\n          )}\n          \n          {/* Hidden canvas for image capture */}\n          <canvas ref={canvasRef} className=\"hidden\" />\n          \n          {/* Input Area */}\n          <div className=\"border-t border-gray-200 p-3 bg-white\">\n            <div className=\"flex items-center\">\n              <textarea\n                value={inputMessage}\n                onChange={(e) => setInputMessage(e.target.value)}\n                onKeyPress={handleKeyPress}\n                placeholder=\"Ask me anything...\"\n                className=\"flex-1 border border-gray-300 rounded-l-lg p-2 focus:outline-none focus:ring-2 focus:ring-intel-blue focus:border-transparent resize-none max-h-20\"\n                rows=\"1\"\n                disabled={isListening}\n              />\n              {speechSupported && (\n                <button\n                  onClick={toggleListening}\n                  disabled={isLoading}\n                  className={`p-2 ${isListening ? 'bg-red-500 hover:bg-red-600' : 'bg-green-500 hover:bg-green-600'} text-white`}\n                  title={isListening ? 'Stop listening' : 'Start voice input'}\n                >\n                  {isListening ? (\n                    <FontAwesomeIcon icon={faSpinner} spin />\n                  ) : (\n                    <FontAwesomeIcon icon={faMicrophone} />\n                  )}\n                </button>\n              )}\n              <button\n                onClick={toggleCamera}\n                disabled={isLoading}\n                className={`p-2 ${isCameraActive ? 'bg-red-500 hover:bg-red-600' : 'bg-blue-500 hover:bg-blue-600'} text-white`}\n                title={isCameraActive ? 'Stop camera' : 'Capture image'}\n              >\n                <FontAwesomeIcon icon={faCamera} />\n              </button>\n              <button\n                onClick={() => sendMessage()}\n                disabled={isLoading || !inputMessage.trim()}\n                className={`bg-intel-blue text-white p-2 rounded-r-lg h-full ${(!inputMessage.trim() || isLoading) ? 'opacity-50 cursor-not-allowed' : 'hover:bg-intel-dark-blue'}`}\n              >\n                <FontAwesomeIcon icon={faPaperPlane} />\n              </button>\n            </div>\n            <div className=\"text-xs text-gray-500 mt-1 text-center\">\n              {speechSupported ? (\n                <span>Type or {isListening ? 'speaking...' : 'click the microphone to speak'} • Powered by Groq LLM API</span>\n              ) : (\n                <span>Powered by Groq LLM API</span>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatbotButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}