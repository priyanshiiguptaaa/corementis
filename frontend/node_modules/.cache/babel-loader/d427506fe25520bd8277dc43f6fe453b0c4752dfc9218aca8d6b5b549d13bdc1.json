{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rkgup\\\\OneDrive\\\\Desktop\\\\corementis\\\\frontend\\\\src\\\\components\\\\student\\\\ChatbotButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComments, faRobot, faTimes, faUser, faMicrophone, faCamera, faSpinner, faTrash, faVolumeXmark, faPaperPlane, faStop, faImage } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatbotButton = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [initialized, setInitialized] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [speechSupported, setSpeechSupported] = useState(false);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [isPlayingAudio, setIsPlayingAudio] = useState(false);\n  const [currentAudioMessage, setCurrentAudioMessage] = useState(null);\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const messagesEndRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const streamRef = useRef(null);\n\n  // Generate a user ID or get from localStorage\n  const getUserId = () => {\n    let userId = localStorage.getItem('corementis_user_id');\n    if (!userId) {\n      userId = 'user_' + Math.random().toString(36).substring(2, 15);\n      localStorage.setItem('corementis_user_id', userId);\n    }\n    return userId;\n  };\n\n  // Initialize speech recognition\n  useEffect(() => {\n    // Initialize Web Speech API\n    if (window.SpeechRecognition || window.webkitSpeechRecognition) {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      recognitionRef.current = new SpeechRecognition();\n      recognitionRef.current.continuous = false;\n      recognitionRef.current.interimResults = false;\n      recognitionRef.current.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setInputMessage(transcript);\n        sendMessage(transcript);\n      };\n      recognitionRef.current.onerror = event => {\n        console.error('Speech recognition error', event.error);\n        setError(`Speech recognition error: ${event.error}`);\n        setIsListening(false);\n      };\n      recognitionRef.current.onend = () => {\n        setIsListening(false);\n      };\n      setSpeechSupported(true);\n    }\n\n    // Check camera capabilities\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      console.log('Camera API is supported');\n    } else {\n      console.error('Camera API is not supported in this browser');\n      setError('Camera is not supported in your browser');\n    }\n  }, []);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Initialize chatbot when first opened\n  useEffect(() => {\n    if (isOpen && !initialized) {\n      initializeChatbot();\n    }\n  }, [isOpen, initialized]);\n  const initializeChatbot = async () => {\n    try {\n      setIsLoading(true);\n      console.log('Initializing chatbot...');\n      const response = await fetch('http://localhost:5001/api/chatbot/initialize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          course_context: 'Computer Vision and Machine Learning'\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Server responded with status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        setInitialized(true);\n        // If there's existing conversation, fetch it\n        if (data.conversation_length > 1) {\n          fetchHistory();\n        } else {\n          // Add welcome message\n          setMessages([{\n            role: 'assistant',\n            content: 'Hello! I\\'m your CoreMentis AI assistant. How can I help you with your studies today?'\n          }]);\n        }\n      } else {\n        setError('Failed to initialize chatbot: ' + data.message);\n      }\n    } catch (err) {\n      setError('Error connecting to chatbot service: ' + err.message);\n      console.error('Error initializing chatbot:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchHistory = async () => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/chatbot/history?user_id=${getUserId()}`);\n      const data = await response.json();\n      if (data.success) {\n        setMessages(data.history);\n      }\n    } catch (err) {\n      console.error('Error fetching chat history:', err);\n    }\n  };\n  const toggleListening = () => {\n    if (!speechSupported) {\n      setError('Speech recognition is not supported in your browser.');\n      return;\n    }\n    if (isListening) {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    } else {\n      setError(null);\n      recognitionRef.current.start();\n      setIsListening(true);\n    }\n  };\n  const toggleCamera = async () => {\n    console.log('Toggle camera called, current state:', isCameraActive);\n    if (isCameraActive) {\n      // Stop the camera\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n        streamRef.current = null;\n      }\n      setIsCameraActive(false);\n      setCapturedImage(null);\n      console.log('Camera deactivated');\n    } else {\n      try {\n        // First set camera active to render the video element\n        setIsCameraActive(true);\n\n        // Wait for the video element to be rendered\n        setTimeout(async () => {\n          try {\n            // Start the camera\n            setError(null);\n            console.log('Requesting camera access...');\n            const stream = await navigator.mediaDevices.getUserMedia({\n              video: {\n                width: {\n                  ideal: 1280\n                },\n                height: {\n                  ideal: 720\n                }\n              }\n            });\n            console.log('Camera access granted, setting up video stream');\n            streamRef.current = stream;\n            if (videoRef.current) {\n              console.log('Video ref exists, setting srcObject');\n              videoRef.current.srcObject = stream;\n              videoRef.current.onloadedmetadata = () => {\n                console.log('Video metadata loaded, dimensions:', videoRef.current.videoWidth, 'x', videoRef.current.videoHeight);\n              };\n            } else {\n              console.error('Video ref does not exist');\n              setError('Video element not found');\n              setIsCameraActive(false);\n            }\n          } catch (err) {\n            setError('Error accessing camera: ' + err.message);\n            console.error('Error accessing camera:', err);\n            setIsCameraActive(false);\n          }\n        }, 500); // Wait 500ms for the video element to be rendered\n      } catch (err) {\n        setError('Error setting up camera: ' + err.message);\n        console.error('Error setting up camera:', err);\n        setIsCameraActive(false);\n      }\n    }\n  };\n  const captureImage = () => {\n    if (!isCameraActive || !videoRef.current || !canvasRef.current) {\n      console.error('Cannot capture image: camera not active or refs not available');\n      return;\n    }\n    try {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      console.log('Video dimensions:', video.videoWidth, video.videoHeight);\n\n      // Set canvas dimensions to match video\n      canvas.width = video.videoWidth || 640;\n      canvas.height = video.videoHeight || 480;\n      if (video.videoWidth === 0 || video.videoHeight === 0) {\n        console.warn('Video dimensions are zero, using fallback dimensions');\n      }\n\n      // Draw the current video frame to the canvas\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // Get the image as a data URL\n      const imageDataUrl = canvas.toDataURL('image/jpeg', 0.9);\n      console.log('Image captured, data URL length:', imageDataUrl.length);\n      setCapturedImage(imageDataUrl);\n\n      // Stop the camera\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n        streamRef.current = null;\n      }\n      setIsCameraActive(false);\n    } catch (err) {\n      console.error('Error capturing image:', err);\n      setError('Error capturing image: ' + err.message);\n    }\n  };\n  const processImage = async () => {\n    if (!capturedImage) return;\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      // Send the image to the backend for OCR\n      const response = await fetch('http://localhost:5001/api/chatbot/image-to-text', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          image: capturedImage\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        // Set the extracted text in the input field\n        setInputMessage(data.text);\n\n        // Auto-send the extracted text\n        sendMessage(data.text);\n      } else {\n        setError('Failed to extract text from image: ' + data.message);\n      }\n    } catch (err) {\n      setError('Error processing image: ' + err.message);\n      console.error('Error processing image:', err);\n    } finally {\n      setIsLoading(false);\n      setCapturedImage(null);\n    }\n  };\n\n  // Generate image from text prompt\n  const generateImage = async prompt => {\n    if (!prompt) return;\n    try {\n      setIsGeneratingImage(true);\n      setError(null);\n      const response = await fetch('http://localhost:5001/api/chatbot/text-to-image', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: prompt\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        // Add the generated image to messages\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: `Generated image for: \"${prompt}\"`,\n          imageData: `data:image/png;base64,${data.image}`\n        }]);\n      } else {\n        setError('Failed to generate image: ' + data.message);\n      }\n    } catch (err) {\n      setError('Error generating image: ' + err.message);\n      console.error('Error generating image:', err);\n    } finally {\n      setIsGeneratingImage(false);\n    }\n  };\n  const sendMessage = async voiceInput => {\n    const messageToSend = voiceInput || inputMessage.trim();\n    if (!messageToSend) return;\n    if (!voiceInput) {\n      setInputMessage('');\n    }\n\n    // Add user message to UI immediately\n    setMessages(prev => [...prev, {\n      role: 'user',\n      content: messageToSend\n    }]);\n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5001/api/chatbot/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          message: messageToSend\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        // Add the response to messages with audio capability\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: data.response,\n          hasAudio: true,\n          // Flag to indicate this message can be converted to speech\n          audioData: null // Will store audio data once generated\n        }]);\n      } else {\n        setError('Failed to get response: ' + data.message);\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: 'Sorry, I encountered an error. Please try again later.'\n        }]);\n      }\n    } catch (err) {\n      setError('Error sending message: ' + err.message);\n      console.error('Error sending message:', err);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again later.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const clearConversation = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/chatbot/clear', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          course_context: 'Computer Vision and Machine Learning'\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setMessages([{\n          role: 'assistant',\n          content: 'Conversation history cleared. How can I help you today?'\n        }]);\n      } else {\n        setError('Failed to clear conversation: ' + data.message);\n      }\n    } catch (err) {\n      setError('Error clearing conversation: ' + err.message);\n      console.error('Error clearing conversation:', err);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  const convertTextToSpeech = async (text, messageIndex) => {\n    try {\n      setIsPlayingAudio(true);\n      setCurrentAudioMessage(messageIndex);\n      setError(null);\n\n      // Check if we already have audio data for this message\n      if (messages[messageIndex].audioData) {\n        playAudio(messages[messageIndex].audioData);\n        return;\n      }\n\n      // First try to use the browser's built-in speech synthesis\n      if ('speechSynthesis' in window) {\n        console.log('Using browser speech synthesis');\n        speakWithBrowserTTS(text);\n        return;\n      }\n\n      // Fallback to backend TTS if browser TTS is not available\n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      console.log('Using backend TTS service:', `${backendUrl}/api/chatbot/text-to-speech`);\n      const response = await fetch(`${backendUrl}/api/chatbot/text-to-speech`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          text: text\n        }),\n        // Simplify CORS settings\n        mode: 'cors'\n      });\n      if (!response.ok) {\n        // Handle HTTP error status codes (like 503 Service Unavailable)\n        if (response.status === 503) {\n          throw new Error('Text-to-speech service is not available on this server');\n        } else {\n          throw new Error(`Server error: ${response.status}`);\n        }\n      }\n      const data = await response.json();\n      if (data.success) {\n        // Store the audio data in the message\n        const updatedMessages = [...messages];\n        updatedMessages[messageIndex].audioData = data.audio;\n        setMessages(updatedMessages);\n\n        // Play the audio\n        playAudio(data.audio);\n      } else {\n        // Handle application-level errors\n        setError('Failed to convert text to speech: ' + (data.message || 'Unknown error'));\n        setIsPlayingAudio(false);\n        setCurrentAudioMessage(null);\n      }\n    } catch (err) {\n      // Handle network errors and other exceptions\n      setError('Error: ' + (err.message || 'Failed to connect to text-to-speech service'));\n      console.error('Error converting text to speech:', err);\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n\n      // Update the message to indicate TTS is not available\n      const updatedMessages = [...messages];\n      updatedMessages[messageIndex].ttsUnavailable = true;\n      setMessages(updatedMessages);\n    }\n  };\n  const playAudio = audioBase64 => {\n    const audio = new Audio(`data:audio/wav;base64,${audioBase64}`);\n    audio.onended = () => {\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    };\n    audio.onerror = e => {\n      console.error('Error playing audio:', e);\n      setError('Error playing audio');\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    };\n    audio.play().catch(e => {\n      console.error('Error playing audio:', e);\n      setError('Error playing audio: ' + e.message);\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    });\n  };\n\n  // Stop audio playback\n  const stopAudioPlayback = () => {\n    // Cancel any ongoing speech synthesis\n    if ('speechSynthesis' in window) {\n      window.speechSynthesis.cancel();\n    }\n\n    // Reset audio state\n    setIsPlayingAudio(false);\n    setCurrentAudioMessage(null);\n    console.log('Audio playback stopped');\n  };\n\n  // Use browser's built-in speech synthesis\n  const speakWithBrowserTTS = text => {\n    if (!('speechSynthesis' in window)) {\n      setError('Browser speech synthesis not supported');\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n      return;\n    }\n\n    // Cancel any ongoing speech\n    window.speechSynthesis.cancel();\n    const utterance = new SpeechSynthesisUtterance(text);\n\n    // Set properties\n    utterance.lang = 'en-US';\n    utterance.rate = 1.0;\n    utterance.pitch = 1.0;\n    utterance.volume = 1.0;\n\n    // Event handlers\n    utterance.onend = () => {\n      console.log('Browser TTS finished');\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    };\n    utterance.onerror = event => {\n      console.error('Browser TTS error:', event);\n      setError('Error with speech synthesis: ' + event.error);\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    };\n\n    // Start speaking\n    window.speechSynthesis.speak(utterance);\n    console.log('Browser TTS started');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-6 right-6 z-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsOpen(!isOpen),\n      className: \"bg-intel-blue hover:bg-intel-dark-blue text-white rounded-full w-14 h-14 flex items-center justify-center shadow-lg transition-all duration-300 hover:scale-110\",\n      \"aria-label\": \"Open AI Assistant\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faComments,\n        size: \"lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-20 right-0 w-80 sm:w-96 bg-white rounded-lg shadow-xl overflow-hidden flex flex-col border border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-intel-blue text-white p-4 flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faRobot,\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium\",\n            children: \"CoreMentis AI Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearConversation,\n            className: \"text-white hover:text-gray-200 transition-colors\",\n            title: \"Clear conversation\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTrash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsOpen(false),\n            className: \"text-white hover:text-gray-200 transition-colors\",\n            title: \"Close chatbot\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 overflow-y-auto max-h-96 bg-gray-50\",\n        children: messages.length === 0 && !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-gray-500 py-8\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faRobot,\n            size: \"2x\",\n            className: \"mb-2 text-intel-blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Start a conversation with the AI assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `max-w-3/4 rounded-lg p-3 ${msg.role === 'user' ? 'bg-intel-blue text-white rounded-br-none' : 'bg-gray-200 text-gray-800 rounded-bl-none'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: msg.role === 'user' ? faUser : faRobot,\n                  className: \"mr-2\",\n                  size: \"xs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs font-semibold\",\n                  children: msg.role === 'user' ? 'You' : 'AI Assistant'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"whitespace-pre-wrap text-sm\",\n                children: msg.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 23\n              }, this), msg.imageData && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: msg.imageData,\n                  alt: \"Generated from text\",\n                  className: \"rounded-lg max-w-full h-auto\",\n                  style: {\n                    maxHeight: '300px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 25\n              }, this), msg.role === 'assistant' && msg.hasAudio && !msg.ttsUnavailable && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2 flex space-x-2\",\n                children: isPlayingAudio && currentAudioMessage === index ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs px-2 py-1 rounded flex items-center bg-intel-dark-blue text-white\",\n                    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faSpinner,\n                      className: \"mr-1 animate-spin\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 673,\n                      columnNumber: 33\n                    }, this), \"Playing...\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 672,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: stopAudioPlayback,\n                    className: \"text-xs px-2 py-1 rounded flex items-center bg-red-500 hover:bg-red-600 text-white\",\n                    title: \"Stop playback\",\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faStop\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 684,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 679,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => convertTextToSpeech(msg.content, index),\n                  disabled: isPlayingAudio && currentAudioMessage !== index,\n                  className: \"text-xs px-2 py-1 rounded flex items-center bg-gray-100 hover:bg-gray-200 text-gray-700\",\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faMicrophone,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 693,\n                    columnNumber: 31\n                  }, this), \"Listen\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 25\n              }, this), msg.role === 'assistant' && msg.ttsUnavailable && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-gray-500 italic\",\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faVolumeXmark,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 703,\n                    columnNumber: 29\n                  }, this), \"Audio unavailable\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 702,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 19\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-start\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-200 text-gray-800 rounded-lg rounded-bl-none p-3 max-w-3/4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-2 h-2 bg-gray-600 rounded-full animate-bounce\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 715,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-2 h-2 bg-gray-600 rounded-full animate-bounce\",\n                  style: {\n                    animationDelay: '0.2s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 716,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-2 h-2 bg-gray-600 rounded-full animate-bounce\",\n                  style: {\n                    animationDelay: '0.4s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 717,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 text-red-800 p-2 text-xs\",\n        children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setError(null),\n          className: \"ml-2 text-red-800 hover:text-red-900\",\n          children: \"Dismiss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 13\n      }, this), isCameraActive && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative border-t border-gray-200 p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-black rounded-lg\",\n          style: {\n            minHeight: '200px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            playsInline: true,\n            muted: true,\n            className: \"w-full h-full rounded-lg\",\n            style: {\n              maxHeight: '200px',\n              objectFit: 'contain'\n            },\n            onLoadedData: () => console.log('Video loaded and ready')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"absolute top-4 right-4 p-2 bg-blue-600 text-white rounded-full hover:bg-blue-700 focus:outline-none\",\n          onClick: captureImage,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCamera\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 13\n      }, this), capturedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative border-t border-gray-200 p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: capturedImage,\n          alt: \"Captured\",\n          className: \"w-full rounded-lg\",\n          style: {\n            maxHeight: '200px',\n            objectFit: 'contain'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mt-2 space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600 focus:outline-none\",\n            onClick: () => setCapturedImage(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 focus:outline-none\",\n            onClick: processImage,\n            disabled: isLoading,\n            children: isLoading ? 'Processing...' : 'Extract Text'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"hidden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-t border-gray-200 p-3 bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Ask me anything...\",\n            className: \"flex-1 border border-gray-300 rounded-l-lg p-2 focus:outline-none focus:ring-2 focus:ring-intel-blue focus:border-transparent resize-none max-h-20\",\n            rows: \"1\",\n            disabled: isListening\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 15\n          }, this), speechSupported && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleListening,\n            disabled: isLoading,\n            className: `p-2 ${isListening ? 'bg-red-500 hover:bg-red-600' : 'bg-green-500 hover:bg-green-600'} text-white`,\n            title: isListening ? 'Stop listening' : 'Start voice input',\n            children: isListening ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSpinner,\n              spin: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faMicrophone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleCamera,\n            disabled: isLoading,\n            className: `p-2 ${isCameraActive ? 'bg-red-500 hover:bg-red-600' : 'bg-blue-500 hover:bg-blue-600'} text-white`,\n            title: isCameraActive ? 'Stop camera' : 'Capture image',\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCamera\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => generateImage(inputMessage.trim()),\n            disabled: isLoading || isGeneratingImage || !inputMessage.trim(),\n            className: `p-2 ${isGeneratingImage ? 'bg-purple-700' : 'bg-purple-500 hover:bg-purple-600'} text-white ${!inputMessage.trim() || isLoading || isGeneratingImage ? 'opacity-50 cursor-not-allowed' : ''}`,\n            title: \"Generate image from text\",\n            children: isGeneratingImage ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSpinner,\n              spin: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 836,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendMessage(),\n            disabled: isLoading || !inputMessage.trim(),\n            className: `bg-intel-blue text-white p-2 rounded-r-lg h-full ${!inputMessage.trim() || isLoading ? 'opacity-50 cursor-not-allowed' : 'hover:bg-intel-dark-blue'}`,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPaperPlane\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 844,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500 mt-1 text-center\",\n          children: speechSupported ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Type or \", isListening ? 'speaking...' : 'click the microphone to speak', \" \\u2022 Powered by Groq LLM API\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Powered by Groq LLM API\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 587,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotButton, \"c9pWolitey2VU+ZQFQ8ztgqrrLI=\");\n_c = ChatbotButton;\nexport default ChatbotButton;\nvar _c;\n$RefreshReg$(_c, \"ChatbotButton\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FontAwesomeIcon","faComments","faRobot","faTimes","faUser","faMicrophone","faCamera","faSpinner","faTrash","faVolumeXmark","faPaperPlane","faStop","faImage","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatbotButton","_s","isOpen","setIsOpen","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","error","setError","initialized","setInitialized","isListening","setIsListening","speechSupported","setSpeechSupported","isCameraActive","setIsCameraActive","capturedImage","setCapturedImage","isPlayingAudio","setIsPlayingAudio","currentAudioMessage","setCurrentAudioMessage","isGeneratingImage","setIsGeneratingImage","generatedImage","setGeneratedImage","messagesEndRef","recognitionRef","videoRef","canvasRef","streamRef","getUserId","userId","localStorage","getItem","Math","random","toString","substring","setItem","window","SpeechRecognition","webkitSpeechRecognition","current","continuous","interimResults","onresult","event","transcript","results","sendMessage","onerror","console","onend","navigator","mediaDevices","getUserMedia","log","scrollToBottom","_messagesEndRef$curre","scrollIntoView","behavior","initializeChatbot","response","fetch","method","headers","body","JSON","stringify","user_id","course_context","ok","Error","status","data","json","success","conversation_length","fetchHistory","role","content","message","err","history","toggleListening","stop","start","toggleCamera","getTracks","forEach","track","setTimeout","stream","video","width","ideal","height","srcObject","onloadedmetadata","videoWidth","videoHeight","captureImage","canvas","context","getContext","warn","drawImage","imageDataUrl","toDataURL","length","processImage","image","text","generateImage","prompt","prev","imageData","voiceInput","messageToSend","trim","hasAudio","audioData","clearConversation","handleKeyPress","e","key","shiftKey","preventDefault","convertTextToSpeech","messageIndex","playAudio","speakWithBrowserTTS","backendUrl","mode","updatedMessages","audio","ttsUnavailable","audioBase64","Audio","onended","play","catch","stopAudioPlayback","speechSynthesis","cancel","utterance","SpeechSynthesisUtterance","lang","rate","pitch","volume","speak","className","children","onClick","icon","size","fileName","_jsxFileName","lineNumber","columnNumber","title","map","msg","index","src","alt","style","maxHeight","disabled","animationDelay","ref","minHeight","autoPlay","playsInline","muted","objectFit","onLoadedData","value","onChange","target","onKeyPress","placeholder","rows","spin","_c","$RefreshReg$"],"sources":["C:/Users/rkgup/OneDrive/Desktop/corementis/frontend/src/components/student/ChatbotButton.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { \n  faComments, \n  faRobot, \n  faTimes, \n  faUser, \n  faMicrophone, \n  faCamera,\n  faSpinner,\n  faTrash,\n  faVolumeXmark,\n  faPaperPlane,\n  faStop,\n  faImage\n} from '@fortawesome/free-solid-svg-icons';\n\nconst ChatbotButton = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [initialized, setInitialized] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [speechSupported, setSpeechSupported] = useState(false);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [isPlayingAudio, setIsPlayingAudio] = useState(false);\n  const [currentAudioMessage, setCurrentAudioMessage] = useState(null);\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\n  const [generatedImage, setGeneratedImage] = useState(null);\n  \n  const messagesEndRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const streamRef = useRef(null);\n  \n  // Generate a user ID or get from localStorage\n  const getUserId = () => {\n    let userId = localStorage.getItem('corementis_user_id');\n    if (!userId) {\n      userId = 'user_' + Math.random().toString(36).substring(2, 15);\n      localStorage.setItem('corementis_user_id', userId);\n    }\n    return userId;\n  };\n  \n  // Initialize speech recognition\n  useEffect(() => {\n    // Initialize Web Speech API\n    if (window.SpeechRecognition || window.webkitSpeechRecognition) {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      recognitionRef.current = new SpeechRecognition();\n      recognitionRef.current.continuous = false;\n      recognitionRef.current.interimResults = false;\n      \n      recognitionRef.current.onresult = (event) => {\n        const transcript = event.results[0][0].transcript;\n        setInputMessage(transcript);\n        sendMessage(transcript);\n      };\n      \n      recognitionRef.current.onerror = (event) => {\n        console.error('Speech recognition error', event.error);\n        setError(`Speech recognition error: ${event.error}`);\n        setIsListening(false);\n      };\n      \n      recognitionRef.current.onend = () => {\n        setIsListening(false);\n      };\n      \n      setSpeechSupported(true);\n    }\n    \n    // Check camera capabilities\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      console.log('Camera API is supported');\n    } else {\n      console.error('Camera API is not supported in this browser');\n      setError('Camera is not supported in your browser');\n    }\n  }, []);\n  \n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n  \n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  \n  // Initialize chatbot when first opened\n  useEffect(() => {\n    if (isOpen && !initialized) {\n      initializeChatbot();\n    }\n  }, [isOpen, initialized]);\n  \n  const initializeChatbot = async () => {\n    try {\n      setIsLoading(true);\n      console.log('Initializing chatbot...');\n      const response = await fetch('http://localhost:5001/api/chatbot/initialize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          course_context: 'Computer Vision and Machine Learning'\n        }),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Server responded with status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setInitialized(true);\n        // If there's existing conversation, fetch it\n        if (data.conversation_length > 1) {\n          fetchHistory();\n        } else {\n          // Add welcome message\n          setMessages([\n            {\n              role: 'assistant',\n              content: 'Hello! I\\'m your CoreMentis AI assistant. How can I help you with your studies today?'\n            }\n          ]);\n        }\n      } else {\n        setError('Failed to initialize chatbot: ' + data.message);\n      }\n    } catch (err) {\n      setError('Error connecting to chatbot service: ' + err.message);\n      console.error('Error initializing chatbot:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const fetchHistory = async () => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/chatbot/history?user_id=${getUserId()}`);\n      const data = await response.json();\n      \n      if (data.success) {\n        setMessages(data.history);\n      }\n    } catch (err) {\n      console.error('Error fetching chat history:', err);\n    }\n  };\n  \n  const toggleListening = () => {\n    if (!speechSupported) {\n      setError('Speech recognition is not supported in your browser.');\n      return;\n    }\n    \n    if (isListening) {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    } else {\n      setError(null);\n      recognitionRef.current.start();\n      setIsListening(true);\n    }\n  };\n  \n  const toggleCamera = async () => {\n    console.log('Toggle camera called, current state:', isCameraActive);\n    \n    if (isCameraActive) {\n      // Stop the camera\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n        streamRef.current = null;\n      }\n      setIsCameraActive(false);\n      setCapturedImage(null);\n      console.log('Camera deactivated');\n    } else {\n      try {\n        // First set camera active to render the video element\n        setIsCameraActive(true);\n        \n        // Wait for the video element to be rendered\n        setTimeout(async () => {\n          try {\n            // Start the camera\n            setError(null);\n            console.log('Requesting camera access...');\n            const stream = await navigator.mediaDevices.getUserMedia({ \n              video: { \n                width: { ideal: 1280 },\n                height: { ideal: 720 }\n              } \n            });\n            \n            console.log('Camera access granted, setting up video stream');\n            streamRef.current = stream;\n            \n            if (videoRef.current) {\n              console.log('Video ref exists, setting srcObject');\n              videoRef.current.srcObject = stream;\n              videoRef.current.onloadedmetadata = () => {\n                console.log('Video metadata loaded, dimensions:', \n                  videoRef.current.videoWidth, 'x', videoRef.current.videoHeight);\n              };\n            } else {\n              console.error('Video ref does not exist');\n              setError('Video element not found');\n              setIsCameraActive(false);\n            }\n          } catch (err) {\n            setError('Error accessing camera: ' + err.message);\n            console.error('Error accessing camera:', err);\n            setIsCameraActive(false);\n          }\n        }, 500); // Wait 500ms for the video element to be rendered\n      } catch (err) {\n        setError('Error setting up camera: ' + err.message);\n        console.error('Error setting up camera:', err);\n        setIsCameraActive(false);\n      }\n    }\n  };\n  \n  const captureImage = () => {\n    if (!isCameraActive || !videoRef.current || !canvasRef.current) {\n      console.error('Cannot capture image: camera not active or refs not available');\n      return;\n    }\n    \n    try {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      \n      console.log('Video dimensions:', video.videoWidth, video.videoHeight);\n      \n      // Set canvas dimensions to match video\n      canvas.width = video.videoWidth || 640;\n      canvas.height = video.videoHeight || 480;\n      \n      if (video.videoWidth === 0 || video.videoHeight === 0) {\n        console.warn('Video dimensions are zero, using fallback dimensions');\n      }\n      \n      // Draw the current video frame to the canvas\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n      \n      // Get the image as a data URL\n      const imageDataUrl = canvas.toDataURL('image/jpeg', 0.9);\n      console.log('Image captured, data URL length:', imageDataUrl.length);\n      setCapturedImage(imageDataUrl);\n      \n      // Stop the camera\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n        streamRef.current = null;\n      }\n      setIsCameraActive(false);\n    } catch (err) {\n      console.error('Error capturing image:', err);\n      setError('Error capturing image: ' + err.message);\n    }\n  };\n  \n  const processImage = async () => {\n    if (!capturedImage) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Send the image to the backend for OCR\n      const response = await fetch('http://localhost:5001/api/chatbot/image-to-text', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          image: capturedImage\n        }),\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        // Set the extracted text in the input field\n        setInputMessage(data.text);\n        \n        // Auto-send the extracted text\n        sendMessage(data.text);\n      } else {\n        setError('Failed to extract text from image: ' + data.message);\n      }\n    } catch (err) {\n      setError('Error processing image: ' + err.message);\n      console.error('Error processing image:', err);\n    } finally {\n      setIsLoading(false);\n      setCapturedImage(null);\n    }\n  };\n  \n  // Generate image from text prompt\n  const generateImage = async (prompt) => {\n    if (!prompt) return;\n    \n    try {\n      setIsGeneratingImage(true);\n      setError(null);\n      \n      const response = await fetch('http://localhost:5001/api/chatbot/text-to-image', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({ prompt: prompt }),\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        // Add the generated image to messages\n        setMessages(prev => [...prev, { \n          role: 'assistant', \n          content: `Generated image for: \"${prompt}\"`,\n          imageData: `data:image/png;base64,${data.image}`\n        }]);\n      } else {\n        setError('Failed to generate image: ' + data.message);\n      }\n    } catch (err) {\n      setError('Error generating image: ' + err.message);\n      console.error('Error generating image:', err);\n    } finally {\n      setIsGeneratingImage(false);\n    }\n  };\n  \n  const sendMessage = async (voiceInput) => {\n    const messageToSend = voiceInput || inputMessage.trim();\n    if (!messageToSend) return;\n    \n    if (!voiceInput) {\n      setInputMessage('');\n    }\n    \n    // Add user message to UI immediately\n    setMessages(prev => [...prev, { role: 'user', content: messageToSend }]);\n    \n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5001/api/chatbot/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          message: messageToSend\n        }),\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        // Add the response to messages with audio capability\n        setMessages(prev => [...prev, { \n          role: 'assistant', \n          content: data.response,\n          hasAudio: true, // Flag to indicate this message can be converted to speech\n          audioData: null // Will store audio data once generated\n        }]);\n      } else {\n        setError('Failed to get response: ' + data.message);\n        setMessages(prev => [...prev, { role: 'assistant', content: 'Sorry, I encountered an error. Please try again later.' }]);\n      }\n    } catch (err) {\n      setError('Error sending message: ' + err.message);\n      console.error('Error sending message:', err);\n      setMessages(prev => [...prev, { role: 'assistant', content: 'Sorry, I encountered an error. Please try again later.' }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const clearConversation = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/chatbot/clear', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          course_context: 'Computer Vision and Machine Learning'\n        }),\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setMessages([\n          {\n            role: 'assistant',\n            content: 'Conversation history cleared. How can I help you today?'\n          }\n        ]);\n      } else {\n        setError('Failed to clear conversation: ' + data.message);\n      }\n    } catch (err) {\n      setError('Error clearing conversation: ' + err.message);\n      console.error('Error clearing conversation:', err);\n    }\n  };\n  \n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  \n  const convertTextToSpeech = async (text, messageIndex) => {\n    try {\n      setIsPlayingAudio(true);\n      setCurrentAudioMessage(messageIndex);\n      setError(null);\n      \n      // Check if we already have audio data for this message\n      if (messages[messageIndex].audioData) {\n        playAudio(messages[messageIndex].audioData);\n        return;\n      }\n      \n      // First try to use the browser's built-in speech synthesis\n      if ('speechSynthesis' in window) {\n        console.log('Using browser speech synthesis');\n        speakWithBrowserTTS(text);\n        return;\n      }\n      \n      // Fallback to backend TTS if browser TTS is not available\n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      \n      console.log('Using backend TTS service:', `${backendUrl}/api/chatbot/text-to-speech`);\n      \n      const response = await fetch(`${backendUrl}/api/chatbot/text-to-speech`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          text: text\n        }),\n        // Simplify CORS settings\n        mode: 'cors'\n      });\n      \n      if (!response.ok) {\n        // Handle HTTP error status codes (like 503 Service Unavailable)\n        if (response.status === 503) {\n          throw new Error('Text-to-speech service is not available on this server');\n        } else {\n          throw new Error(`Server error: ${response.status}`);\n        }\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        // Store the audio data in the message\n        const updatedMessages = [...messages];\n        updatedMessages[messageIndex].audioData = data.audio;\n        setMessages(updatedMessages);\n        \n        // Play the audio\n        playAudio(data.audio);\n      } else {\n        // Handle application-level errors\n        setError('Failed to convert text to speech: ' + (data.message || 'Unknown error'));\n        setIsPlayingAudio(false);\n        setCurrentAudioMessage(null);\n      }\n    } catch (err) {\n      // Handle network errors and other exceptions\n      setError('Error: ' + (err.message || 'Failed to connect to text-to-speech service'));\n      console.error('Error converting text to speech:', err);\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n      \n      // Update the message to indicate TTS is not available\n      const updatedMessages = [...messages];\n      updatedMessages[messageIndex].ttsUnavailable = true;\n      setMessages(updatedMessages);\n    }\n  };\n  \n  const playAudio = (audioBase64) => {\n    const audio = new Audio(`data:audio/wav;base64,${audioBase64}`);\n    \n    audio.onended = () => {\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    };\n    \n    audio.onerror = (e) => {\n      console.error('Error playing audio:', e);\n      setError('Error playing audio');\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    };\n    \n    audio.play().catch(e => {\n      console.error('Error playing audio:', e);\n      setError('Error playing audio: ' + e.message);\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    });\n  };\n  \n  // Stop audio playback\n  const stopAudioPlayback = () => {\n    // Cancel any ongoing speech synthesis\n    if ('speechSynthesis' in window) {\n      window.speechSynthesis.cancel();\n    }\n    \n    // Reset audio state\n    setIsPlayingAudio(false);\n    setCurrentAudioMessage(null);\n    console.log('Audio playback stopped');\n  };\n  \n  // Use browser's built-in speech synthesis\n  const speakWithBrowserTTS = (text) => {\n    if (!('speechSynthesis' in window)) {\n      setError('Browser speech synthesis not supported');\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n      return;\n    }\n    \n    // Cancel any ongoing speech\n    window.speechSynthesis.cancel();\n    \n    const utterance = new SpeechSynthesisUtterance(text);\n    \n    // Set properties\n    utterance.lang = 'en-US';\n    utterance.rate = 1.0;\n    utterance.pitch = 1.0;\n    utterance.volume = 1.0;\n    \n    // Event handlers\n    utterance.onend = () => {\n      console.log('Browser TTS finished');\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    };\n    \n    utterance.onerror = (event) => {\n      console.error('Browser TTS error:', event);\n      setError('Error with speech synthesis: ' + event.error);\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    };\n    \n    // Start speaking\n    window.speechSynthesis.speak(utterance);\n    console.log('Browser TTS started');\n  };\n  \n  return (\n    <div className=\"fixed bottom-6 right-6 z-50\">\n      {/* Chatbot Button */}\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"bg-intel-blue hover:bg-intel-dark-blue text-white rounded-full w-14 h-14 flex items-center justify-center shadow-lg transition-all duration-300 hover:scale-110\"\n        aria-label=\"Open AI Assistant\"\n      >\n        <FontAwesomeIcon icon={faComments} size=\"lg\" />\n      </button>\n      \n      {/* Chatbot Panel */}\n      {isOpen && (\n        <div className=\"absolute bottom-20 right-0 w-80 sm:w-96 bg-white rounded-lg shadow-xl overflow-hidden flex flex-col border border-gray-200\">\n          {/* Header */}\n          <div className=\"bg-intel-blue text-white p-4 flex justify-between items-center\">\n            <div className=\"flex items-center\">\n              <FontAwesomeIcon icon={faRobot} className=\"mr-2\" />\n              <h3 className=\"font-medium\">CoreMentis AI Assistant</h3>\n            </div>\n            <div className=\"flex space-x-2\">\n              <button \n                onClick={clearConversation}\n                className=\"text-white hover:text-gray-200 transition-colors\"\n                title=\"Clear conversation\"\n              >\n                <FontAwesomeIcon icon={faTrash} />\n              </button>\n              <button \n                onClick={() => setIsOpen(false)}\n                className=\"text-white hover:text-gray-200 transition-colors\"\n                title=\"Close chatbot\"\n              >\n                <FontAwesomeIcon icon={faTimes} />\n              </button>\n            </div>\n          </div>\n          \n          {/* Messages Container */}\n          <div className=\"flex-1 p-4 overflow-y-auto max-h-96 bg-gray-50\">\n            {messages.length === 0 && !isLoading ? (\n              <div className=\"text-center text-gray-500 py-8\">\n                <FontAwesomeIcon icon={faRobot} size=\"2x\" className=\"mb-2 text-intel-blue\" />\n                <p>Start a conversation with the AI assistant</p>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {messages.map((msg, index) => (\n                  <div \n                    key={index} \n                    className={`flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`}\n                  >\n                    <div \n                      className={`max-w-3/4 rounded-lg p-3 ${msg.role === 'user' \n                        ? 'bg-intel-blue text-white rounded-br-none' \n                        : 'bg-gray-200 text-gray-800 rounded-bl-none'}`}\n                    >\n                      <div className=\"flex items-center mb-1\">\n                        <FontAwesomeIcon \n                          icon={msg.role === 'user' ? faUser : faRobot} \n                          className=\"mr-2\" \n                          size=\"xs\"\n                        />\n                        <span className=\"text-xs font-semibold\">\n                          {msg.role === 'user' ? 'You' : 'AI Assistant'}\n                        </span>\n                      </div>\n                      <p className=\"whitespace-pre-wrap text-sm\">{msg.content}</p>\n                      \n                      {/* Display generated image if present */}\n                      {msg.imageData && (\n                        <div className=\"mt-2\">\n                          <img \n                            src={msg.imageData} \n                            alt=\"Generated from text\" \n                            className=\"rounded-lg max-w-full h-auto\"\n                            style={{ maxHeight: '300px' }}\n                          />\n                        </div>\n                      )}\n                      \n                      {/* Audio playback button for assistant messages */}\n                      {msg.role === 'assistant' && msg.hasAudio && !msg.ttsUnavailable && (\n                        <div className=\"mt-2 flex space-x-2\">\n                          {isPlayingAudio && currentAudioMessage === index ? (\n                            <>\n                              <div className=\"text-xs px-2 py-1 rounded flex items-center bg-intel-dark-blue text-white\">\n                                <FontAwesomeIcon \n                                  icon={faSpinner}\n                                  className=\"mr-1 animate-spin\" \n                                />\n                                Playing...\n                              </div>\n                              <button\n                                onClick={stopAudioPlayback}\n                                className=\"text-xs px-2 py-1 rounded flex items-center bg-red-500 hover:bg-red-600 text-white\"\n                                title=\"Stop playback\"\n                              >\n                                <FontAwesomeIcon icon={faStop} />\n                              </button>\n                            </>\n                          ) : (\n                            <button\n                              onClick={() => convertTextToSpeech(msg.content, index)}\n                              disabled={isPlayingAudio && currentAudioMessage !== index}\n                              className=\"text-xs px-2 py-1 rounded flex items-center bg-gray-100 hover:bg-gray-200 text-gray-700\"\n                            >\n                              <FontAwesomeIcon icon={faMicrophone} className=\"mr-1\" />\n                              Listen\n                            </button>\n                          )}\n                        </div>\n                      )}\n                      {/* Message for when TTS is unavailable */}\n                      {msg.role === 'assistant' && msg.ttsUnavailable && (\n                        <div className=\"mt-2\">\n                          <span className=\"text-xs text-gray-500 italic\">\n                            <FontAwesomeIcon icon={faVolumeXmark} className=\"mr-1\" />\n                            Audio unavailable\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                ))}\n                {isLoading && (\n                  <div className=\"flex justify-start\">\n                    <div className=\"bg-gray-200 text-gray-800 rounded-lg rounded-bl-none p-3 max-w-3/4\">\n                      <div className=\"flex items-center space-x-1\">\n                        <div className=\"w-2 h-2 bg-gray-600 rounded-full animate-bounce\"></div>\n                        <div className=\"w-2 h-2 bg-gray-600 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                        <div className=\"w-2 h-2 bg-gray-600 rounded-full animate-bounce\" style={{ animationDelay: '0.4s' }}></div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                <div ref={messagesEndRef} />\n              </div>\n            )}\n          </div>\n          \n          {/* Error Message */}\n          {error && (\n            <div className=\"bg-red-100 text-red-800 p-2 text-xs\">\n              {error}\n              <button \n                onClick={() => setError(null)} \n                className=\"ml-2 text-red-800 hover:text-red-900\"\n              >\n                Dismiss\n              </button>\n            </div>\n          )}\n          \n          {/* Camera view */}\n          {isCameraActive && (\n            <div className=\"relative border-t border-gray-200 p-2\">\n              <div className=\"bg-black rounded-lg\" style={{ minHeight: '200px' }}>\n                <video\n                  ref={videoRef}\n                  autoPlay\n                  playsInline\n                  muted\n                  className=\"w-full h-full rounded-lg\"\n                  style={{ maxHeight: '200px', objectFit: 'contain' }}\n                  onLoadedData={() => console.log('Video loaded and ready')}\n                />\n              </div>\n              <button\n                className=\"absolute top-4 right-4 p-2 bg-blue-600 text-white rounded-full hover:bg-blue-700 focus:outline-none\"\n                onClick={captureImage}\n              >\n                <FontAwesomeIcon icon={faCamera} />\n              </button>\n            </div>\n          )}\n          \n          {/* Captured image */}\n          {capturedImage && (\n            <div className=\"relative border-t border-gray-200 p-2\">\n              <img\n                src={capturedImage}\n                alt=\"Captured\"\n                className=\"w-full rounded-lg\"\n                style={{ maxHeight: '200px', objectFit: 'contain' }}\n              />\n              <div className=\"flex justify-center mt-2 space-x-2\">\n                <button\n                  className=\"px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600 focus:outline-none\"\n                  onClick={() => setCapturedImage(null)}\n                >\n                  Cancel\n                </button>\n                <button\n                  className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 focus:outline-none\"\n                  onClick={processImage}\n                  disabled={isLoading}\n                >\n                  {isLoading ? 'Processing...' : 'Extract Text'}\n                </button>\n              </div>\n            </div>\n          )}\n          \n          {/* Hidden canvas for image capture */}\n          <canvas ref={canvasRef} className=\"hidden\" />\n          \n          {/* Input Area */}\n          <div className=\"border-t border-gray-200 p-3 bg-white\">\n            <div className=\"flex items-center\">\n              <textarea\n                value={inputMessage}\n                onChange={(e) => setInputMessage(e.target.value)}\n                onKeyPress={handleKeyPress}\n                placeholder=\"Ask me anything...\"\n                className=\"flex-1 border border-gray-300 rounded-l-lg p-2 focus:outline-none focus:ring-2 focus:ring-intel-blue focus:border-transparent resize-none max-h-20\"\n                rows=\"1\"\n                disabled={isListening}\n              />\n              {speechSupported && (\n                <button\n                  onClick={toggleListening}\n                  disabled={isLoading}\n                  className={`p-2 ${isListening ? 'bg-red-500 hover:bg-red-600' : 'bg-green-500 hover:bg-green-600'} text-white`}\n                  title={isListening ? 'Stop listening' : 'Start voice input'}\n                >\n                  {isListening ? (\n                    <FontAwesomeIcon icon={faSpinner} spin />\n                  ) : (\n                    <FontAwesomeIcon icon={faMicrophone} />\n                  )}\n                </button>\n              )}\n              <button\n                onClick={toggleCamera}\n                disabled={isLoading}\n                className={`p-2 ${isCameraActive ? 'bg-red-500 hover:bg-red-600' : 'bg-blue-500 hover:bg-blue-600'} text-white`}\n                title={isCameraActive ? 'Stop camera' : 'Capture image'}\n              >\n                <FontAwesomeIcon icon={faCamera} />\n              </button>\n              <button\n                onClick={() => generateImage(inputMessage.trim())}\n                disabled={isLoading || isGeneratingImage || !inputMessage.trim()}\n                className={`p-2 ${isGeneratingImage ? 'bg-purple-700' : 'bg-purple-500 hover:bg-purple-600'} text-white ${(!inputMessage.trim() || isLoading || isGeneratingImage) ? 'opacity-50 cursor-not-allowed' : ''}`}\n                title=\"Generate image from text\"\n              >\n                {isGeneratingImage ? (\n                  <FontAwesomeIcon icon={faSpinner} spin />\n                ) : (\n                  <FontAwesomeIcon icon={faImage} />\n                )}\n              </button>\n              <button\n                onClick={() => sendMessage()}\n                disabled={isLoading || !inputMessage.trim()}\n                className={`bg-intel-blue text-white p-2 rounded-r-lg h-full ${(!inputMessage.trim() || isLoading) ? 'opacity-50 cursor-not-allowed' : 'hover:bg-intel-dark-blue'}`}\n              >\n                <FontAwesomeIcon icon={faPaperPlane} />\n              </button>\n            </div>\n            <div className=\"text-xs text-gray-500 mt-1 text-center\">\n              {speechSupported ? (\n                <span>Type or {isListening ? 'speaking...' : 'click the microphone to speak'} • Powered by Groq LLM API</span>\n              ) : (\n                <span>Powered by Groq LLM API</span>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatbotButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}