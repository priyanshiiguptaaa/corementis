{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rkgup\\\\OneDrive\\\\Desktop\\\\corementis\\\\frontend\\\\src\\\\components\\\\student\\\\ChatbotButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComment, faTimes, faSpinner, faPaperPlane, faImage, faSearch, faProjectDiagram, faMicrophone, faCamera, faUser, faRobot, faVolumeUp, faVolumeMute, faStop, faChartSimple, faComments, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatbotButton = () => {\n  _s();\n  // State variables\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [initialized, setInitialized] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [speechSupported, setSpeechSupported] = useState(false);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [isPlayingAudio, setIsPlayingAudio] = useState(false);\n  const [currentAudioMessage, setCurrentAudioMessage] = useState(null);\n\n  // New state variables for image generation and web scraping\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\n  const [imagePrompt, setImagePrompt] = useState('');\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const [isSearchingContent, setIsSearchingContent] = useState(false);\n  const [searchTopic, setSearchTopic] = useState('');\n  const [searchResults, setSearchResults] = useState(null);\n  const [isGeneratingGraph, setIsGeneratingGraph] = useState(false);\n  const [graphTopic, setGraphTopic] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [loadingMessage, setLoadingMessage] = useState('');\n\n  // Backend URL\n  const backendUrl = 'http://localhost:5001';\n\n  // Refs\n  const inputRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const [generatedGraph, setGeneratedGraph] = useState(null);\n  const [activeTab, setActiveTab] = useState('chat'); // 'chat', 'image', 'search', 'graph'\n\n  // Generate image from text prompt\n  const generateImage = async prompt => {\n    try {\n      setIsGeneratingImage(true);\n      setError(null);\n\n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      console.log('Generating image for prompt:', prompt);\n      const response = await fetch(`${backendUrl}/api/chatbot/text-to-image`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          prompt: prompt,\n          width: 512,\n          height: 512,\n          steps: 10\n        }),\n        mode: 'cors'\n      });\n      if (!response.ok) {\n        if (response.status === 503) {\n          throw new Error('Image generation service is not available on this server');\n        } else {\n          throw new Error(`Server error: ${response.status}`);\n        }\n      }\n      const data = await response.json();\n      if (data.success) {\n        setGeneratedImage(data.image);\n\n        // Add the generated image to the conversation\n        const newMessage = {\n          role: 'assistant',\n          content: `I've generated an image based on your prompt: \"${prompt}\"`,\n          hasImage: true,\n          imageData: data.image\n        };\n        setMessages([...messages, newMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to generate image');\n      }\n    } catch (err) {\n      setError('Error: ' + (err.message || 'Failed to generate image'));\n      console.error('Error generating image:', err);\n    } finally {\n      setIsGeneratingImage(false);\n      setImagePrompt('');\n    }\n  };\n\n  // Search for educational content\n  const searchEducationalContent = async topic => {\n    try {\n      setIsSearchingContent(true);\n      setError(null);\n\n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      console.log('Searching educational content for topic:', topic);\n      const response = await fetch(`${backendUrl}/api/chatbot/search-content`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          topic: topic\n        }),\n        mode: 'cors'\n      });\n      if (!response.ok) {\n        if (response.status === 503) {\n          throw new Error('Content search service is not available on this server');\n        } else {\n          throw new Error(`Server error: ${response.status}`);\n        }\n      }\n      const data = await response.json();\n      if (data.success) {\n        setSearchResults(data);\n\n        // Add the search results to the conversation\n        let content = `Here are some educational resources about \"${topic}\":\\n\\n`;\n        if (data.images && data.images.length > 0) {\n          content += `ðŸ“¸ ${data.images.length} relevant images found\\n`;\n        } else {\n          content += \"No relevant images found\\n\";\n        }\n        if (data.videos && data.videos.length > 0) {\n          content += `ðŸŽ¬ ${data.videos.length} educational videos found:\\n`;\n          data.videos.forEach((video, index) => {\n            content += `${index + 1}. ${video.title}\\n`;\n          });\n        } else {\n          content += \"No educational videos found\";\n        }\n        const newMessage = {\n          role: 'assistant',\n          content: content,\n          hasSearchResults: true,\n          searchData: data\n        };\n        setMessages([...messages, newMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to search educational content');\n      }\n    } catch (err) {\n      setError('Error: ' + (err.message || 'Failed to search educational content'));\n      console.error('Error searching educational content:', err);\n    } finally {\n      setIsSearchingContent(false);\n      setSearchTopic('');\n    }\n  };\n\n  // Generate flowchart graph\n  const generateFlowchartGraph = async topic => {\n    try {\n      setIsGeneratingGraph(true);\n      setError(null);\n\n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      console.log('Generating flowchart for topic:', topic);\n      const response = await fetch(`${backendUrl}/api/chatbot/generate-graph`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          topic: topic\n        }),\n        mode: 'cors'\n      });\n      if (!response.ok) {\n        if (response.status === 503) {\n          throw new Error('Graph generation service is not available on this server');\n        } else {\n          throw new Error(`Server error: ${response.status}`);\n        }\n      }\n      const data = await response.json();\n      if (data.success) {\n        setGeneratedGraph(data.image);\n\n        // Add the generated graph to the conversation\n        const newMessage = {\n          role: 'assistant',\n          content: `I've created a flowchart for \"${topic}\":\\n\\n${data.text || ''}`,\n          hasGraph: true,\n          graphData: data.image\n        };\n        setMessages([...messages, newMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to generate flowchart');\n      }\n    } catch (err) {\n      setError('Error: ' + (err.message || 'Failed to generate flowchart'));\n      console.error('Error generating flowchart:', err);\n    } finally {\n      setIsGeneratingGraph(false);\n      setGraphTopic('');\n    }\n  };\n\n  // This function has been replaced by stopAudio\n\n  // Use browser's built-in speech synthesis\n  const speakWithBrowserTTS = text => {\n    if (!('speechSynthesis' in window)) {\n      console.error('Browser does not support speech synthesis');\n      return false;\n    }\n\n    // Stop any ongoing speech\n    window.speechSynthesis.cancel();\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.onend = () => {\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n      console.log('Speech synthesis finished');\n    };\n    utterance.onerror = event => {\n      console.error('Speech synthesis error:', event);\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    };\n    window.speechSynthesis.speak(utterance);\n    return true;\n  };\n\n  // Play audio using browser's TTS with OpenVINO optimization when available\n  const playAudio = (messageIndex, text) => {\n    if (!window.speechSynthesis) {\n      console.error('Speech synthesis not supported');\n      return;\n    }\n\n    // If already playing this message, stop it\n    if (currentAudioMessage === messageIndex) {\n      stopAudio();\n      return;\n    }\n\n    // Stop any currently playing audio\n    if (isPlayingAudio) {\n      window.speechSynthesis.cancel();\n    }\n\n    // Set the current audio state\n    setIsPlayingAudio(true);\n    setCurrentAudioMessage(messageIndex);\n\n    // Create utterance\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = 'en-US';\n    utterance.rate = 1.0;\n    utterance.pitch = 1.0;\n\n    // Handle utterance events\n    utterance.onend = () => {\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    };\n    utterance.onerror = event => {\n      console.error('TTS error:', event);\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    };\n\n    // Play the audio\n    window.speechSynthesis.speak(utterance);\n  };\n\n  // Stop TTS audio playback\n  const stopAudio = () => {\n    if (window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    }\n  };\n\n  // Function references for backward compatibility\n  const stopAudioPlayback = stopAudio;\n\n  // Get or generate a user ID\n  const getUserId = () => {\n    let userId = localStorage.getItem('chatbot_user_id');\n    if (!userId) {\n      userId = 'user_' + Math.random().toString(36).substring(2, 15);\n      localStorage.setItem('chatbot_user_id', userId);\n    }\n    return userId;\n  };\n\n  // ... (rest of the code remains the same)\n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Initialize speech recognition\n  useEffect(() => {\n    const checkSpeechSupport = () => {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      if (SpeechRecognition) {\n        setSpeechSupported(true);\n      }\n    };\n    checkSpeechSupport();\n    setInitialized(true);\n  }, []);\n\n  // Handle key press in input field\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n\n  // Toggle speech recognition\n  const toggleListening = () => {\n    if (isListening) {\n      stopListening();\n    } else {\n      startListening();\n    }\n  };\n\n  // Start speech recognition\n  const startListening = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      console.error('Speech recognition not supported');\n      return;\n    }\n    try {\n      const recognition = new SpeechRecognition();\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.lang = 'en-US';\n      recognition.onstart = () => {\n        setIsListening(true);\n        console.log('Speech recognition started');\n      };\n      recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setInputMessage(transcript);\n        console.log('Speech recognized:', transcript);\n\n        // Small delay to show the transcript before sending\n        setTimeout(() => {\n          sendMessage(transcript);\n        }, 500);\n      };\n      recognition.onerror = event => {\n        console.error('Speech recognition error:', event.error);\n        setIsListening(false);\n      };\n      recognition.onend = () => {\n        setIsListening(false);\n        console.log('Speech recognition ended');\n      };\n      recognitionRef.current = recognition;\n      recognition.start();\n    } catch (error) {\n      console.error('Error starting speech recognition:', error);\n      setIsListening(false);\n    }\n  };\n\n  // Stop speech recognition\n  const stopListening = () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n      recognitionRef.current = null;\n    }\n    setIsListening(false);\n  };\n\n  // Toggle camera\n  const toggleCamera = () => {\n    if (isCameraActive) {\n      stopCamera();\n    } else {\n      startCamera();\n    }\n  };\n\n  // Start camera\n  const startCamera = async () => {\n    try {\n      const constraints = {\n        video: {\n          facingMode: 'environment',\n          width: {\n            ideal: 1280\n          },\n          height: {\n            ideal: 720\n          }\n        }\n      };\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        setIsCameraActive(true);\n        console.log('Camera started');\n      }\n    } catch (err) {\n      console.error('Error starting camera:', err);\n      setError('Could not access camera: ' + err.message);\n    }\n  };\n\n  // Stop camera\n  const stopCamera = () => {\n    if (videoRef.current && videoRef.current.srcObject) {\n      const tracks = videoRef.current.srcObject.getTracks();\n      tracks.forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n    setIsCameraActive(false);\n    setCapturedImage(null);\n    console.log('Camera stopped');\n  };\n\n  // Capture image from camera\n  const captureImage = () => {\n    if (!videoRef.current || !canvasRef.current) return;\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n\n    // Set canvas dimensions to match video\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    // Draw the current video frame to the canvas\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    // Convert canvas to data URL\n    const imageDataUrl = canvas.toDataURL('image/jpeg');\n    setCapturedImage(imageDataUrl);\n\n    // Stop the camera after capturing\n    stopCamera();\n    console.log('Image captured');\n  };\n\n  // Process captured image with OCR using OpenVINO optimization when available\n  const processImage = async () => {\n    if (!capturedImage) return;\n    try {\n      setIsLoading(true);\n      setLoadingMessage('Processing image with OCR (OpenVINO optimized)...');\n\n      // Convert base64 image to blob for sending to backend\n      const base64Data = capturedImage.split(',')[1];\n      const response = await fetch(`${backendUrl}/api/chatbot/image-to-text`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          image: base64Data,\n          useOpenVINO: true // Request OpenVINO optimization if available\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`OCR request failed with status: ${response.status}`);\n      }\n      const data = await response.json();\n\n      // Add the extracted text to the input field\n      setInputMessage(data.text);\n\n      // Add performance metrics to messages if available\n      if (data.performanceMetrics) {\n        const {\n          processingTimeMs,\n          accelerator\n        } = data.performanceMetrics;\n        const processingTime = (processingTimeMs / 1000).toFixed(2);\n        const performanceMessage = `Image processed in ${processingTime}s using ${accelerator || 'CPU'}`;\n        setMessages([...messages, {\n          role: 'assistant',\n          content: `Text extracted from image: \"${data.text}\"\n\\n${performanceMessage}`,\n          hasPerformanceMetrics: true\n        }]);\n      }\n\n      // Close camera and clear captured image\n      setCapturedImage(null);\n      setIsCameraActive(false);\n\n      // Focus on the input field\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    } catch (error) {\n      console.error('Error processing image:', error);\n      setErrorMessage('Failed to process image. Please try again.');\n\n      // Try again without OpenVINO if there was an error\n      try {\n        setLoadingMessage('Retrying with standard OCR...');\n        const base64Data = capturedImage.split(',')[1];\n        const response = await fetch(`${backendUrl}/api/chatbot/image-to-text`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            image: base64Data,\n            useOpenVINO: false // Fallback to standard implementation\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`OCR request failed with status: ${response.status}`);\n        }\n        const data = await response.json();\n        setInputMessage(data.text);\n        setCapturedImage(null);\n        setIsCameraActive(false);\n      } catch (fallbackError) {\n        console.error('Fallback OCR also failed:', fallbackError);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Send message to chatbot\n  const sendMessage = async (text = null) => {\n    const messageText = text || inputMessage;\n    if (!messageText.trim() || isLoading) return;\n    const userMessage = {\n      role: 'user',\n      content: messageText\n    };\n    setMessages([...messages, userMessage]);\n    setInputMessage('');\n    await sendChatbotRequest(messageText);\n  };\n\n  // Send request to chatbot API\n  const sendChatbotRequest = async messageText => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      // Add typing indicator\n      setMessages(prevMessages => [...prevMessages, {\n        role: 'assistant',\n        isTyping: true\n      }]);\n\n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      const response = await fetch(`${backendUrl}/api/chatbot/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          message: messageText\n        }),\n        mode: 'cors'\n      });\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n      const data = await response.json();\n\n      // Remove typing indicator\n      setMessages(prevMessages => prevMessages.filter(msg => !msg.isTyping));\n      if (data.success) {\n        const botMessage = {\n          role: 'assistant',\n          content: data.response,\n          hasAudio: true,\n          ttsUnavailable: data.tts_unavailable || false\n        };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to get response from chatbot');\n      }\n    } catch (err) {\n      // Remove typing indicator in case of error\n      setMessages(prevMessages => prevMessages.filter(msg => !msg.isTyping));\n      setError('Error: ' + err.message);\n      console.error('Error sending message to chatbot:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Clear conversation\n  const clearConversation = () => {\n    setMessages([]);\n    setError(null);\n    setCapturedImage(null);\n    setGeneratedImage(null);\n    setSearchResults(null);\n    setGeneratedGraph(null);\n    stopAudioPlayback();\n  };\n\n  // Return JSX\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-4 right-4 flex flex-col items-end z-50\",\n    children: [isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-lg mb-2 w-80 md:w-96 flex flex-col\",\n      style: {\n        height: '500px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center p-3 border-b border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faRobot,\n            className: \"text-intel-blue mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium\",\n            children: \"AI Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setMessages([]),\n            className: \"text-gray-500 hover:text-gray-700\",\n            title: \"Clear conversation\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTrash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsOpen(false),\n            className: \"text-gray-500 hover:text-gray-700\",\n            title: \"Close\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex border-b border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `flex-1 py-2 px-4 text-sm font-medium ${activeTab === 'chat' ? 'text-intel-blue border-b-2 border-intel-blue' : 'text-gray-500 hover:text-gray-700'}`,\n          onClick: () => setActiveTab('chat'),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faComments,\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 15\n          }, this), \"Chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `flex-1 py-2 px-4 text-sm font-medium ${activeTab === 'image' ? 'text-intel-blue border-b-2 border-intel-blue' : 'text-gray-500 hover:text-gray-700'}`,\n          onClick: () => setActiveTab('image'),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faImage,\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 15\n          }, this), \"Image\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `flex-1 py-2 px-4 text-sm font-medium ${activeTab === 'search' ? 'text-intel-blue border-b-2 border-intel-blue' : 'text-gray-500 hover:text-gray-700'}`,\n          onClick: () => setActiveTab('search'),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSearch,\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 15\n          }, this), \"Search\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `flex-1 py-2 px-4 text-sm font-medium ${activeTab === 'graph' ? 'text-intel-blue border-b-2 border-intel-blue' : 'text-gray-500 hover:text-gray-700'}`,\n          onClick: () => setActiveTab('graph'),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faChartSimple,\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 15\n          }, this), \"Graph\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 11\n      }, this), activeTab === 'chat' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 overflow-y-auto max-h-96 bg-gray-50\",\n        children: messages.length === 0 && !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-gray-500 py-8\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faRobot,\n            size: \"2x\",\n            className: \"mb-2 text-intel-blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Start a conversation with the AI assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${msg.role === 'user' ? 'bg-intel-blue text-white rounded-lg rounded-br-none' : 'bg-gray-200 text-gray-800 rounded-lg rounded-bl-none'} p-3 max-w-3/4 break-words`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: msg.role === 'user' ? faUser : faRobot,\n                  className: `mr-1 ${msg.role === 'user' ? 'text-white' : 'text-intel-blue'}`,\n                  size: \"xs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs font-medium\",\n                  children: msg.role === 'user' ? 'You' : 'AI Assistant'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 773,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"whitespace-pre-wrap\",\n                children: msg.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 25\n              }, this), msg.hasImage && msg.imageData && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `data:image/png;base64,${msg.imageData}`,\n                  alt: \"Generated image\",\n                  className: \"rounded-lg max-w-full h-auto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 786,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 27\n              }, this), msg.hasSearchResults && msg.searchData && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: [msg.searchData.images && msg.searchData.images.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"text-sm font-medium mb-1\",\n                    children: \"Images:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 800,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"grid grid-cols-2 gap-1\",\n                    children: msg.searchData.images.slice(0, 4).map((image, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"aspect-square overflow-hidden rounded\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: image.url,\n                        alt: image.alt || 'Search result',\n                        className: \"w-full h-full object-cover\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 804,\n                        columnNumber: 39\n                      }, this)\n                    }, idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 803,\n                      columnNumber: 37\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 801,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 799,\n                  columnNumber: 31\n                }, this), msg.searchData.videos && msg.searchData.videos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"text-sm font-medium mb-1\",\n                    children: \"Videos:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 818,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"space-y-1\",\n                    children: msg.searchData.videos.slice(0, 3).map((video, idx) => /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: video.url,\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      className: \"flex items-center p-1 bg-white bg-opacity-50 rounded hover:bg-opacity-70\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"w-16 h-9 bg-gray-300 rounded overflow-hidden flex-shrink-0 mr-2\",\n                        children: video.thumbnail && /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: video.thumbnail,\n                          alt: video.title,\n                          className: \"w-full h-full object-cover\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 830,\n                          columnNumber: 43\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 828,\n                        columnNumber: 39\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-xs overflow-hidden\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"font-medium truncate\",\n                          children: video.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 838,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-gray-600 truncate\",\n                          children: video.channel || 'Educational video'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 839,\n                          columnNumber: 41\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 837,\n                        columnNumber: 39\n                      }, this)]\n                    }, idx, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 821,\n                      columnNumber: 37\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 819,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 817,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 796,\n                columnNumber: 27\n              }, this), msg.hasGraph && msg.graphData && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `data:image/png;base64,${msg.graphData}`,\n                  alt: \"Flowchart graph\",\n                  className: \"rounded-lg max-w-full h-auto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 852,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 27\n              }, this), msg.role === 'assistant' && msg.hasAudio && !msg.ttsUnavailable && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => playAudio(index, msg.content),\n                  className: `text-xs ${isPlayingAudio && currentAudioMessage === index ? 'text-red-600 hover:text-red-700' : 'text-gray-600 hover:text-gray-700'}`,\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: isPlayingAudio && currentAudioMessage === index ? faVolumeMute : faVolumeUp,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 867,\n                    columnNumber: 31\n                  }, this), isPlayingAudio && currentAudioMessage === index ? 'Stop audio' : 'Listen']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 863,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 862,\n                columnNumber: 27\n              }, this), msg.role === 'assistant' && msg.ttsUnavailable && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-gray-500 italic\",\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faVolumeMute,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 880,\n                    columnNumber: 31\n                  }, this), \"Audio unavailable\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 879,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 878,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 23\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 21\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-start\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-200 text-gray-800 rounded-lg rounded-bl-none p-3 max-w-3/4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-2 h-2 bg-gray-600 rounded-full animate-bounce\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 892,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-2 h-2 bg-gray-600 rounded-full animate-bounce\",\n                  style: {\n                    animationDelay: '0.2s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 893,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-2 h-2 bg-gray-600 rounded-full animate-bounce\",\n                  style: {\n                    animationDelay: '0.4s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 894,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 891,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 890,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 text-red-800 p-2 text-xs\",\n        children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setError(null),\n          className: \"ml-2 text-red-800 hover:text-red-900\",\n          children: \"Dismiss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 13\n      }, this), isCameraActive && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative border-t border-gray-200 p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-black rounded-lg\",\n          style: {\n            minHeight: '200px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            playsInline: true,\n            muted: true,\n            className: \"w-full h-full rounded-lg\",\n            style: {\n              maxHeight: '200px',\n              objectFit: 'contain'\n            },\n            onLoadedData: () => console.log('Video loaded and ready')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 922,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute bottom-4 left-0 right-0 flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: captureImage,\n            className: \"bg-intel-blue hover:bg-blue-700 text-white p-2 rounded-full shadow\",\n            title: \"Capture image\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCamera\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 938,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 13\n      }, this), capturedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-t border-gray-200 p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-black rounded-lg overflow-hidden\",\n          style: {\n            minHeight: '200px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: capturedImage,\n            alt: \"Captured\",\n            className: \"w-full h-full object-contain\",\n            style: {\n              maxHeight: '200px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mt-2 space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCapturedImage(null),\n            className: \"bg-gray-500 hover:bg-gray-600 text-white px-3 py-1 rounded\",\n            children: \"Retake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 957,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: processImage,\n            className: \"bg-intel-blue hover:bg-blue-700 text-white px-3 py-1 rounded\",\n            disabled: isLoading,\n            children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faSpinner,\n                spin: true,\n                className: \"mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 970,\n                columnNumber: 23\n              }, this), \"Processing...\"]\n            }, void 0, true) : 'Process Image'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 963,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-t border-gray-200 p-2\",\n        children: [activeTab === 'chat' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              ref: inputRef,\n              value: inputMessage,\n              onChange: e => setInputMessage(e.target.value),\n              placeholder: \"Type your message...\",\n              className: \"w-full border border-gray-300 rounded-lg py-2 px-3 focus:outline-none focus:ring-2 focus:ring-intel-blue focus:border-transparent resize-none\",\n              style: {\n                minHeight: '44px',\n                maxHeight: '120px'\n              },\n              rows: \"1\",\n              onKeyDown: e => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  sendMessage();\n                }\n              },\n              disabled: isLoading || isListening\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 986,\n              columnNumber: 19\n            }, this), speechSupported && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleListening,\n              className: `absolute right-2 bottom-2 p-1 rounded-full ${isListening ? 'text-red-500 bg-gray-100' : 'text-gray-500 hover:text-intel-blue'}`,\n              title: isListening ? 'Stop listening' : 'Start voice input',\n              disabled: isLoading,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: isListening ? faStop : faMicrophone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1011,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1005,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 985,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleCamera,\n            className: `ml-2 p-2 rounded-full ${isCameraActive ? 'bg-intel-blue text-white' : 'text-gray-500 hover:bg-gray-300 text-gray-700'}`,\n            disabled: isLoading,\n            title: isCameraActive ? 'Close camera' : 'Open camera',\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCamera\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1023,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendMessage(),\n            className: \"ml-2 bg-intel-blue hover:bg-blue-700 text-white p-2 rounded-full disabled:opacity-50 disabled:cursor-not-allowed\",\n            disabled: !inputMessage.trim() || isLoading,\n            title: \"Send message\",\n            children: isLoading ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSpinner,\n              spin: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1034,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPaperPlane\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1036,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1027,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 984,\n          columnNumber: 15\n        }, this), activeTab === 'image' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: imagePrompt,\n              onChange: e => setImagePrompt(e.target.value),\n              placeholder: \"Describe the image you want to generate...\",\n              className: \"flex-1 border border-gray-300 rounded-lg p-2 mr-2 focus:outline-none focus:ring-2 focus:ring-intel-blue\",\n              disabled: isGeneratingImage,\n              onKeyDown: e => {\n                if (e.key === 'Enter') {\n                  e.preventDefault();\n                  generateImage(imagePrompt);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1045,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => generateImage(imagePrompt),\n              className: \"bg-intel-blue hover:bg-blue-700 text-white p-2 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed\",\n              disabled: !imagePrompt.trim() || isGeneratingImage,\n              children: isGeneratingImage ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faSpinner,\n                spin: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1065,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Generate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1067,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1059,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1044,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500\",\n            children: \"Generate images from text descriptions using AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1071,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1043,\n          columnNumber: 15\n        }, this), activeTab === 'search' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: searchTopic,\n              onChange: e => setSearchTopic(e.target.value),\n              placeholder: \"Enter a topic to search for educational content...\",\n              className: \"flex-1 border border-gray-300 rounded-lg p-2 mr-2 focus:outline-none focus:ring-2 focus:ring-intel-blue\",\n              disabled: isSearchingContent,\n              onKeyDown: e => {\n                if (e.key === 'Enter') {\n                  e.preventDefault();\n                  searchEducationalContent(searchTopic);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1078,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => searchEducationalContent(searchTopic),\n              className: \"bg-intel-blue hover:bg-blue-700 text-white p-2 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed\",\n              disabled: !searchTopic.trim() || isSearchingContent,\n              children: isSearchingContent ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faSpinner,\n                spin: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1098,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1100,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1092,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1077,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500\",\n            children: \"Find educational images and videos on any topic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1104,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1076,\n          columnNumber: 15\n        }, this), activeTab === 'graph' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: graphTopic,\n              onChange: e => setGraphTopic(e.target.value),\n              placeholder: \"Enter a topic for flowchart generation...\",\n              className: \"flex-1 border border-gray-300 rounded-lg p-2 mr-2 focus:outline-none focus:ring-2 focus:ring-intel-blue\",\n              disabled: isGeneratingGraph,\n              onKeyDown: e => {\n                if (e.key === 'Enter') {\n                  e.preventDefault();\n                  generateFlowchartGraph(graphTopic);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => generateFlowchartGraph(graphTopic),\n              className: \"bg-intel-blue hover:bg-blue-700 text-white p-2 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed\",\n              disabled: !graphTopic.trim() || isGeneratingGraph,\n              children: isGeneratingGraph ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faSpinner,\n                spin: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1131,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Generate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1133,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1125,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500\",\n            children: \"Create educational flowcharts and diagrams\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1137,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1109,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 982,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsOpen(!isOpen),\n      className: \"bg-intel-blue hover:bg-blue-700 text-white rounded-full p-3 shadow-lg flex items-center justify-center\",\n      \"aria-label\": \"Open AI Assistant\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faRobot,\n        size: \"lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 694,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotButton, \"X9opkN+N7tyZ/clyd5rkMpNwLbY=\");\n_c = ChatbotButton;\nexport default ChatbotButton;\nvar _c;\n$RefreshReg$(_c, \"ChatbotButton\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","FontAwesomeIcon","faComment","faTimes","faSpinner","faPaperPlane","faImage","faSearch","faProjectDiagram","faMicrophone","faCamera","faUser","faRobot","faVolumeUp","faVolumeMute","faStop","faChartSimple","faComments","faTrash","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatbotButton","_s","isOpen","setIsOpen","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","error","setError","initialized","setInitialized","isListening","setIsListening","speechSupported","setSpeechSupported","isCameraActive","setIsCameraActive","capturedImage","setCapturedImage","isPlayingAudio","setIsPlayingAudio","currentAudioMessage","setCurrentAudioMessage","isGeneratingImage","setIsGeneratingImage","imagePrompt","setImagePrompt","generatedImage","setGeneratedImage","isSearchingContent","setIsSearchingContent","searchTopic","setSearchTopic","searchResults","setSearchResults","isGeneratingGraph","setIsGeneratingGraph","graphTopic","setGraphTopic","errorMessage","setErrorMessage","loadingMessage","setLoadingMessage","backendUrl","inputRef","videoRef","canvasRef","messagesEndRef","recognitionRef","generatedGraph","setGeneratedGraph","activeTab","setActiveTab","generateImage","prompt","console","log","response","fetch","method","headers","body","JSON","stringify","user_id","getUserId","width","height","steps","mode","ok","status","Error","data","json","success","image","newMessage","role","content","hasImage","imageData","message","err","searchEducationalContent","topic","images","length","videos","forEach","video","index","title","hasSearchResults","searchData","generateFlowchartGraph","text","hasGraph","graphData","speakWithBrowserTTS","window","speechSynthesis","cancel","utterance","SpeechSynthesisUtterance","onend","onerror","event","speak","playAudio","messageIndex","stopAudio","lang","rate","pitch","stopAudioPlayback","userId","localStorage","getItem","Math","random","toString","substring","setItem","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","checkSpeechSupport","SpeechRecognition","webkitSpeechRecognition","handleKeyPress","e","key","shiftKey","preventDefault","sendMessage","toggleListening","stopListening","startListening","recognition","continuous","interimResults","onstart","onresult","transcript","results","setTimeout","start","stop","toggleCamera","stopCamera","startCamera","constraints","facingMode","ideal","stream","navigator","mediaDevices","getUserMedia","srcObject","tracks","getTracks","track","captureImage","canvas","videoWidth","videoHeight","ctx","getContext","drawImage","imageDataUrl","toDataURL","processImage","base64Data","split","useOpenVINO","performanceMetrics","processingTimeMs","accelerator","processingTime","toFixed","performanceMessage","hasPerformanceMetrics","focus","fallbackError","messageText","trim","userMessage","sendChatbotRequest","prevMessages","isTyping","filter","msg","botMessage","hasAudio","ttsUnavailable","tts_unavailable","clearConversation","className","children","style","icon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","map","src","alt","slice","idx","url","href","target","rel","thumbnail","channel","animationDelay","ref","minHeight","autoPlay","playsInline","muted","maxHeight","objectFit","onLoadedData","disabled","spin","value","onChange","placeholder","rows","onKeyDown","type","_c","$RefreshReg$"],"sources":["C:/Users/rkgup/OneDrive/Desktop/corementis/frontend/src/components/student/ChatbotButton.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { \n  faComment, \n  faTimes, \n  faSpinner, \n  faPaperPlane, \n  faImage, \n  faSearch, \n  faProjectDiagram, \n  faMicrophone, \n  faCamera, \n  faUser, \n  faRobot, \n  faVolumeUp, \n  faVolumeMute, \n  faStop, \n  faChartSimple, \n  faComments, \n  faTrash\n} from '@fortawesome/free-solid-svg-icons';\n\nconst ChatbotButton = () => {\n  // State variables\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [initialized, setInitialized] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [speechSupported, setSpeechSupported] = useState(false);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [isPlayingAudio, setIsPlayingAudio] = useState(false);\n  const [currentAudioMessage, setCurrentAudioMessage] = useState(null);\n  \n  // New state variables for image generation and web scraping\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\n  const [imagePrompt, setImagePrompt] = useState('');\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const [isSearchingContent, setIsSearchingContent] = useState(false);\n  const [searchTopic, setSearchTopic] = useState('');\n  const [searchResults, setSearchResults] = useState(null);\n  const [isGeneratingGraph, setIsGeneratingGraph] = useState(false);\n  const [graphTopic, setGraphTopic] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [loadingMessage, setLoadingMessage] = useState('');\n  \n  // Backend URL\n  const backendUrl = 'http://localhost:5001';\n  \n  // Refs\n  const inputRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const [generatedGraph, setGeneratedGraph] = useState(null);\n  const [activeTab, setActiveTab] = useState('chat'); // 'chat', 'image', 'search', 'graph'\n\n  // Generate image from text prompt\n  const generateImage = async (prompt) => {\n    try {\n      setIsGeneratingImage(true);\n      setError(null);\n      \n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      \n      console.log('Generating image for prompt:', prompt);\n      \n      const response = await fetch(`${backendUrl}/api/chatbot/text-to-image`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          prompt: prompt,\n          width: 512,\n          height: 512,\n          steps: 10\n        }),\n        mode: 'cors'\n      });\n      \n      if (!response.ok) {\n        if (response.status === 503) {\n          throw new Error('Image generation service is not available on this server');\n        } else {\n          throw new Error(`Server error: ${response.status}`);\n        }\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setGeneratedImage(data.image);\n        \n        // Add the generated image to the conversation\n        const newMessage = {\n          role: 'assistant',\n          content: `I've generated an image based on your prompt: \"${prompt}\"`,\n          hasImage: true,\n          imageData: data.image\n        };\n        \n        setMessages([...messages, newMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to generate image');\n      }\n    } catch (err) {\n      setError('Error: ' + (err.message || 'Failed to generate image'));\n      console.error('Error generating image:', err);\n    } finally {\n      setIsGeneratingImage(false);\n      setImagePrompt('');\n    }\n  };\n  \n  // Search for educational content\n  const searchEducationalContent = async (topic) => {\n    try {\n      setIsSearchingContent(true);\n      setError(null);\n      \n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      \n      console.log('Searching educational content for topic:', topic);\n      \n      const response = await fetch(`${backendUrl}/api/chatbot/search-content`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          topic: topic\n        }),\n        mode: 'cors'\n      });\n      \n      if (!response.ok) {\n        if (response.status === 503) {\n          throw new Error('Content search service is not available on this server');\n        } else {\n          throw new Error(`Server error: ${response.status}`);\n        }\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setSearchResults(data);\n        \n        // Add the search results to the conversation\n        let content = `Here are some educational resources about \"${topic}\":\\n\\n`;\n        \n        if (data.images && data.images.length > 0) {\n          content += `ðŸ“¸ ${data.images.length} relevant images found\\n`;\n        } else {\n          content += \"No relevant images found\\n\";\n        }\n        \n        if (data.videos && data.videos.length > 0) {\n          content += `ðŸŽ¬ ${data.videos.length} educational videos found:\\n`;\n          data.videos.forEach((video, index) => {\n            content += `${index + 1}. ${video.title}\\n`;\n          });\n        } else {\n          content += \"No educational videos found\";\n        }\n        \n        const newMessage = {\n          role: 'assistant',\n          content: content,\n          hasSearchResults: true,\n          searchData: data\n        };\n        \n        setMessages([...messages, newMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to search educational content');\n      }\n    } catch (err) {\n      setError('Error: ' + (err.message || 'Failed to search educational content'));\n      console.error('Error searching educational content:', err);\n    } finally {\n      setIsSearchingContent(false);\n      setSearchTopic('');\n    }\n  };\n  \n  // Generate flowchart graph\n  const generateFlowchartGraph = async (topic) => {\n    try {\n      setIsGeneratingGraph(true);\n      setError(null);\n      \n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      \n      console.log('Generating flowchart for topic:', topic);\n      \n      const response = await fetch(`${backendUrl}/api/chatbot/generate-graph`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          topic: topic\n        }),\n        mode: 'cors'\n      });\n      \n      if (!response.ok) {\n        if (response.status === 503) {\n          throw new Error('Graph generation service is not available on this server');\n        } else {\n          throw new Error(`Server error: ${response.status}`);\n        }\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setGeneratedGraph(data.image);\n        \n        // Add the generated graph to the conversation\n        const newMessage = {\n          role: 'assistant',\n          content: `I've created a flowchart for \"${topic}\":\\n\\n${data.text || ''}`,\n          hasGraph: true,\n          graphData: data.image\n        };\n        \n        setMessages([...messages, newMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to generate flowchart');\n      }\n    } catch (err) {\n      setError('Error: ' + (err.message || 'Failed to generate flowchart'));\n      console.error('Error generating flowchart:', err);\n    } finally {\n      setIsGeneratingGraph(false);\n      setGraphTopic('');\n    }\n  };\n\n  // This function has been replaced by stopAudio\n  \n  // Use browser's built-in speech synthesis\n  const speakWithBrowserTTS = (text) => {\n    if (!('speechSynthesis' in window)) {\n      console.error('Browser does not support speech synthesis');\n      return false;\n    }\n    \n    // Stop any ongoing speech\n    window.speechSynthesis.cancel();\n    \n    const utterance = new SpeechSynthesisUtterance(text);\n    \n    utterance.onend = () => {\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n      console.log('Speech synthesis finished');\n    };\n    \n    utterance.onerror = (event) => {\n      console.error('Speech synthesis error:', event);\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    };\n    \n    window.speechSynthesis.speak(utterance);\n    return true;\n  };\n\n  // Play audio using browser's TTS with OpenVINO optimization when available\n  const playAudio = (messageIndex, text) => {\n    if (!window.speechSynthesis) {\n      console.error('Speech synthesis not supported');\n      return;\n    }\n    \n    // If already playing this message, stop it\n    if (currentAudioMessage === messageIndex) {\n      stopAudio();\n      return;\n    }\n    \n    // Stop any currently playing audio\n    if (isPlayingAudio) {\n      window.speechSynthesis.cancel();\n    }\n    \n    // Set the current audio state\n    setIsPlayingAudio(true);\n    setCurrentAudioMessage(messageIndex);\n    \n    // Create utterance\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = 'en-US';\n    utterance.rate = 1.0;\n    utterance.pitch = 1.0;\n    \n    // Handle utterance events\n    utterance.onend = () => {\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    };\n    \n    utterance.onerror = (event) => {\n      console.error('TTS error:', event);\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    };\n    \n    // Play the audio\n    window.speechSynthesis.speak(utterance);\n  };\n  \n  // Stop TTS audio playback\n  const stopAudio = () => {\n    if (window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    }\n  };\n\n  // Function references for backward compatibility\n  const stopAudioPlayback = stopAudio;\n\n  // Get or generate a user ID\n  const getUserId = () => {\n    let userId = localStorage.getItem('chatbot_user_id');\n    if (!userId) {\n      userId = 'user_' + Math.random().toString(36).substring(2, 15);\n      localStorage.setItem('chatbot_user_id', userId);\n    }\n    return userId;\n  };\n\n  // ... (rest of the code remains the same)\n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Initialize speech recognition\n  useEffect(() => {\n    const checkSpeechSupport = () => {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      if (SpeechRecognition) {\n        setSpeechSupported(true);\n      }\n    };\n    \n    checkSpeechSupport();\n    setInitialized(true);\n  }, []);\n\n  // Handle key press in input field\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n\n  // Toggle speech recognition\n  const toggleListening = () => {\n    if (isListening) {\n      stopListening();\n    } else {\n      startListening();\n    }\n  };\n\n  // Start speech recognition\n  const startListening = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      console.error('Speech recognition not supported');\n      return;\n    }\n    \n    try {\n      const recognition = new SpeechRecognition();\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.lang = 'en-US';\n      \n      recognition.onstart = () => {\n        setIsListening(true);\n        console.log('Speech recognition started');\n      };\n      \n      recognition.onresult = (event) => {\n        const transcript = event.results[0][0].transcript;\n        setInputMessage(transcript);\n        console.log('Speech recognized:', transcript);\n        \n        // Small delay to show the transcript before sending\n        setTimeout(() => {\n          sendMessage(transcript);\n        }, 500);\n      };\n      \n      recognition.onerror = (event) => {\n        console.error('Speech recognition error:', event.error);\n        setIsListening(false);\n      };\n      \n      recognition.onend = () => {\n        setIsListening(false);\n        console.log('Speech recognition ended');\n      };\n      \n      recognitionRef.current = recognition;\n      recognition.start();\n    } catch (error) {\n      console.error('Error starting speech recognition:', error);\n      setIsListening(false);\n    }\n  };\n\n  // Stop speech recognition\n  const stopListening = () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n      recognitionRef.current = null;\n    }\n    setIsListening(false);\n  };\n\n  // Toggle camera\n  const toggleCamera = () => {\n    if (isCameraActive) {\n      stopCamera();\n    } else {\n      startCamera();\n    }\n  };\n\n  // Start camera\n  const startCamera = async () => {\n    try {\n      const constraints = {\n        video: {\n          facingMode: 'environment',\n          width: { ideal: 1280 },\n          height: { ideal: 720 }\n        }\n      };\n      \n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      \n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        setIsCameraActive(true);\n        console.log('Camera started');\n      }\n    } catch (err) {\n      console.error('Error starting camera:', err);\n      setError('Could not access camera: ' + err.message);\n    }\n  };\n\n  // Stop camera\n  const stopCamera = () => {\n    if (videoRef.current && videoRef.current.srcObject) {\n      const tracks = videoRef.current.srcObject.getTracks();\n      tracks.forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n    setIsCameraActive(false);\n    setCapturedImage(null);\n    console.log('Camera stopped');\n  };\n\n  // Capture image from camera\n  const captureImage = () => {\n    if (!videoRef.current || !canvasRef.current) return;\n    \n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    \n    // Set canvas dimensions to match video\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    \n    // Draw the current video frame to the canvas\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n    \n    // Convert canvas to data URL\n    const imageDataUrl = canvas.toDataURL('image/jpeg');\n    setCapturedImage(imageDataUrl);\n    \n    // Stop the camera after capturing\n    stopCamera();\n    \n    console.log('Image captured');\n  };\n\n  // Process captured image with OCR using OpenVINO optimization when available\n  const processImage = async () => {\n    if (!capturedImage) return;\n    \n    try {\n      setIsLoading(true);\n      setLoadingMessage('Processing image with OCR (OpenVINO optimized)...');\n      \n      // Convert base64 image to blob for sending to backend\n      const base64Data = capturedImage.split(',')[1];\n      \n      const response = await fetch(`${backendUrl}/api/chatbot/image-to-text`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          image: base64Data,\n          useOpenVINO: true // Request OpenVINO optimization if available\n        }),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`OCR request failed with status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      // Add the extracted text to the input field\n      setInputMessage(data.text);\n      \n      // Add performance metrics to messages if available\n      if (data.performanceMetrics) {\n        const { processingTimeMs, accelerator } = data.performanceMetrics;\n        const processingTime = (processingTimeMs / 1000).toFixed(2);\n        const performanceMessage = `Image processed in ${processingTime}s using ${accelerator || 'CPU'}`;\n        \n        setMessages([\n          ...messages,\n          {\n            role: 'assistant',\n            content: `Text extracted from image: \"${data.text}\"\n\\n${performanceMessage}`,\n            hasPerformanceMetrics: true\n          }\n        ]);\n      }\n      \n      // Close camera and clear captured image\n      setCapturedImage(null);\n      setIsCameraActive(false);\n      \n      // Focus on the input field\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    } catch (error) {\n      console.error('Error processing image:', error);\n      setErrorMessage('Failed to process image. Please try again.');\n      \n      // Try again without OpenVINO if there was an error\n      try {\n        setLoadingMessage('Retrying with standard OCR...');\n        const base64Data = capturedImage.split(',')[1];\n        \n        const response = await fetch(`${backendUrl}/api/chatbot/image-to-text`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ \n            image: base64Data,\n            useOpenVINO: false // Fallback to standard implementation\n          }),\n        });\n        \n        if (!response.ok) {\n          throw new Error(`OCR request failed with status: ${response.status}`);\n        }\n        \n        const data = await response.json();\n        setInputMessage(data.text);\n        setCapturedImage(null);\n        setIsCameraActive(false);\n      } catch (fallbackError) {\n        console.error('Fallback OCR also failed:', fallbackError);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Send message to chatbot\n  const sendMessage = async (text = null) => {\n    const messageText = text || inputMessage;\n    if (!messageText.trim() || isLoading) return;\n    \n    const userMessage = {\n      role: 'user',\n      content: messageText\n    };\n    \n    setMessages([...messages, userMessage]);\n    setInputMessage('');\n    \n    await sendChatbotRequest(messageText);\n  };\n\n  // Send request to chatbot API\n  const sendChatbotRequest = async (messageText) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Add typing indicator\n      setMessages(prevMessages => [...prevMessages, { role: 'assistant', isTyping: true }]);\n      \n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      \n      const response = await fetch(`${backendUrl}/api/chatbot/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          message: messageText\n        }),\n        mode: 'cors'\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      // Remove typing indicator\n      setMessages(prevMessages => prevMessages.filter(msg => !msg.isTyping));\n      \n      if (data.success) {\n        const botMessage = {\n          role: 'assistant',\n          content: data.response,\n          hasAudio: true,\n          ttsUnavailable: data.tts_unavailable || false\n        };\n        \n        setMessages(prevMessages => [...prevMessages, botMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to get response from chatbot');\n      }\n    } catch (err) {\n      // Remove typing indicator in case of error\n      setMessages(prevMessages => prevMessages.filter(msg => !msg.isTyping));\n      \n      setError('Error: ' + err.message);\n      console.error('Error sending message to chatbot:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Clear conversation\n  const clearConversation = () => {\n    setMessages([]);\n    setError(null);\n    setCapturedImage(null);\n    setGeneratedImage(null);\n    setSearchResults(null);\n    setGeneratedGraph(null);\n    stopAudioPlayback();\n  };\n  \n  // Return JSX\n  return (\n    <div className=\"fixed bottom-4 right-4 flex flex-col items-end z-50\">\n      {isOpen && (\n        <div className=\"bg-white rounded-lg shadow-lg mb-2 w-80 md:w-96 flex flex-col\" style={{ height: '500px' }}>\n          {/* Header */}\n          <div className=\"flex justify-between items-center p-3 border-b border-gray-200\">\n            <div className=\"flex items-center\">\n              <FontAwesomeIcon icon={faRobot} className=\"text-intel-blue mr-2\" />\n              <h3 className=\"font-medium\">AI Assistant</h3>\n            </div>\n            <div className=\"flex space-x-2\">\n              <button \n                onClick={() => setMessages([])} \n                className=\"text-gray-500 hover:text-gray-700\"\n                title=\"Clear conversation\"\n              >\n                <FontAwesomeIcon icon={faTrash} />\n              </button>\n              <button \n                onClick={() => setIsOpen(false)} \n                className=\"text-gray-500 hover:text-gray-700\"\n                title=\"Close\"\n              >\n                <FontAwesomeIcon icon={faTimes} />\n              </button>\n            </div>\n          </div>\n          \n          {/* Tabs */}\n          <div className=\"flex border-b border-gray-200\">\n            <button\n              className={`flex-1 py-2 px-4 text-sm font-medium ${activeTab === 'chat' ? 'text-intel-blue border-b-2 border-intel-blue' : 'text-gray-500 hover:text-gray-700'}`}\n              onClick={() => setActiveTab('chat')}\n            >\n              <FontAwesomeIcon icon={faComments} className=\"mr-1\" />\n              Chat\n            </button>\n            <button\n              className={`flex-1 py-2 px-4 text-sm font-medium ${activeTab === 'image' ? 'text-intel-blue border-b-2 border-intel-blue' : 'text-gray-500 hover:text-gray-700'}`}\n              onClick={() => setActiveTab('image')}\n            >\n              <FontAwesomeIcon icon={faImage} className=\"mr-1\" />\n              Image\n            </button>\n            <button\n              className={`flex-1 py-2 px-4 text-sm font-medium ${activeTab === 'search' ? 'text-intel-blue border-b-2 border-intel-blue' : 'text-gray-500 hover:text-gray-700'}`}\n              onClick={() => setActiveTab('search')}\n            >\n              <FontAwesomeIcon icon={faSearch} className=\"mr-1\" />\n              Search\n            </button>\n            <button\n              className={`flex-1 py-2 px-4 text-sm font-medium ${activeTab === 'graph' ? 'text-intel-blue border-b-2 border-intel-blue' : 'text-gray-500 hover:text-gray-700'}`}\n              onClick={() => setActiveTab('graph')}\n            >\n              <FontAwesomeIcon icon={faChartSimple} className=\"mr-1\" />\n              Graph\n            </button>\n          </div>\n          \n          {/* Chat Tab Content */}\n          {activeTab === 'chat' && (\n            <div className=\"flex-1 p-4 overflow-y-auto max-h-96 bg-gray-50\">\n              {messages.length === 0 && !isLoading ? (\n                <div className=\"text-center text-gray-500 py-8\">\n                  <FontAwesomeIcon icon={faRobot} size=\"2x\" className=\"mb-2 text-intel-blue\" />\n                  <p>Start a conversation with the AI assistant</p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {messages.map((msg, index) => (\n                    <div key={index} className={`flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`}>\n                      <div className={`${msg.role === 'user' ? 'bg-intel-blue text-white rounded-lg rounded-br-none' : 'bg-gray-200 text-gray-800 rounded-lg rounded-bl-none'} p-3 max-w-3/4 break-words`}>\n                        {/* User or assistant icon */}\n                        <div className=\"flex items-center mb-1\">\n                          <FontAwesomeIcon \n                            icon={msg.role === 'user' ? faUser : faRobot} \n                            className={`mr-1 ${msg.role === 'user' ? 'text-white' : 'text-intel-blue'}`}\n                            size=\"xs\"\n                          />\n                          <span className=\"text-xs font-medium\">\n                            {msg.role === 'user' ? 'You' : 'AI Assistant'}\n                          </span>\n                        </div>\n                        \n                        {/* Message text content */}\n                        <div className=\"whitespace-pre-wrap\">\n                          {msg.content}\n                        </div>\n                        \n                        {/* Generated image */}\n                        {msg.hasImage && msg.imageData && (\n                          <div className=\"mt-2\">\n                            <img \n                              src={`data:image/png;base64,${msg.imageData}`} \n                              alt=\"Generated image\" \n                              className=\"rounded-lg max-w-full h-auto\"\n                            />\n                          </div>\n                        )}\n                        \n                        {/* Search results */}\n                        {msg.hasSearchResults && msg.searchData && (\n                          <div className=\"mt-2\">\n                            {/* Images */}\n                            {msg.searchData.images && msg.searchData.images.length > 0 && (\n                              <div className=\"mb-2\">\n                                <h4 className=\"text-sm font-medium mb-1\">Images:</h4>\n                                <div className=\"grid grid-cols-2 gap-1\">\n                                  {msg.searchData.images.slice(0, 4).map((image, idx) => (\n                                    <div key={idx} className=\"aspect-square overflow-hidden rounded\">\n                                      <img \n                                        src={image.url} \n                                        alt={image.alt || 'Search result'} \n                                        className=\"w-full h-full object-cover\"\n                                      />\n                                    </div>\n                                  ))}\n                                </div>\n                              </div>\n                            )}\n                            \n                            {/* Videos */}\n                            {msg.searchData.videos && msg.searchData.videos.length > 0 && (\n                              <div>\n                                <h4 className=\"text-sm font-medium mb-1\">Videos:</h4>\n                                <div className=\"space-y-1\">\n                                  {msg.searchData.videos.slice(0, 3).map((video, idx) => (\n                                    <a \n                                      key={idx} \n                                      href={video.url} \n                                      target=\"_blank\" \n                                      rel=\"noopener noreferrer\"\n                                      className=\"flex items-center p-1 bg-white bg-opacity-50 rounded hover:bg-opacity-70\"\n                                    >\n                                      <div className=\"w-16 h-9 bg-gray-300 rounded overflow-hidden flex-shrink-0 mr-2\">\n                                        {video.thumbnail && (\n                                          <img \n                                            src={video.thumbnail} \n                                            alt={video.title} \n                                            className=\"w-full h-full object-cover\"\n                                          />\n                                        )}\n                                      </div>\n                                      <div className=\"text-xs overflow-hidden\">\n                                        <div className=\"font-medium truncate\">{video.title}</div>\n                                        <div className=\"text-gray-600 truncate\">{video.channel || 'Educational video'}</div>\n                                      </div>\n                                    </a>\n                                  ))}\n                                </div>\n                              </div>\n                            )}\n                          </div>\n                        )}\n                        \n                        {/* Flowchart graph */}\n                        {msg.hasGraph && msg.graphData && (\n                          <div className=\"mt-2\">\n                            <img \n                              src={`data:image/png;base64,${msg.graphData}`} \n                              alt=\"Flowchart graph\" \n                              className=\"rounded-lg max-w-full h-auto\"\n                            />\n                          </div>\n                        )}\n                        \n                        {/* Audio playback controls */}\n                        {msg.role === 'assistant' && msg.hasAudio && !msg.ttsUnavailable && (\n                          <div className=\"mt-2\">\n                            <button \n                              onClick={() => playAudio(index, msg.content)}\n                              className={`text-xs ${isPlayingAudio && currentAudioMessage === index ? 'text-red-600 hover:text-red-700' : 'text-gray-600 hover:text-gray-700'}`}\n                            >\n                              <FontAwesomeIcon \n                                icon={isPlayingAudio && currentAudioMessage === index ? faVolumeMute : faVolumeUp} \n                                className=\"mr-1\" \n                              />\n                              {isPlayingAudio && currentAudioMessage === index ? 'Stop audio' : 'Listen'}\n                            </button>\n                          </div>\n                        )}\n                        \n                        {/* Message for when TTS is unavailable */}\n                        {msg.role === 'assistant' && msg.ttsUnavailable && (\n                          <div className=\"mt-2\">\n                            <span className=\"text-xs text-gray-500 italic\">\n                              <FontAwesomeIcon icon={faVolumeMute} className=\"mr-1\" />\n                              Audio unavailable\n                            </span>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                  {isLoading && (\n                    <div className=\"flex justify-start\">\n                      <div className=\"bg-gray-200 text-gray-800 rounded-lg rounded-bl-none p-3 max-w-3/4\">\n                        <div className=\"flex items-center space-x-1\">\n                          <div className=\"w-2 h-2 bg-gray-600 rounded-full animate-bounce\"></div>\n                          <div className=\"w-2 h-2 bg-gray-600 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                          <div className=\"w-2 h-2 bg-gray-600 rounded-full animate-bounce\" style={{ animationDelay: '0.4s' }}></div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  <div ref={messagesEndRef} />\n                </div>\n              )}\n            </div>\n          )}\n          \n          {/* Error Message */}\n          {error && (\n            <div className=\"bg-red-100 text-red-800 p-2 text-xs\">\n              {error}\n              <button \n                onClick={() => setError(null)} \n                className=\"ml-2 text-red-800 hover:text-red-900\"\n              >\n                Dismiss\n              </button>\n            </div>\n          )}\n          \n          {/* Camera view */}\n          {isCameraActive && (\n            <div className=\"relative border-t border-gray-200 p-2\">\n              <div className=\"bg-black rounded-lg\" style={{ minHeight: '200px' }}>\n                <video\n                  ref={videoRef}\n                  autoPlay\n                  playsInline\n                  muted\n                  className=\"w-full h-full rounded-lg\"\n                  style={{ maxHeight: '200px', objectFit: 'contain' }}\n                  onLoadedData={() => console.log('Video loaded and ready')}\n                />\n              </div>\n              <div className=\"absolute bottom-4 left-0 right-0 flex justify-center\">\n                <button\n                  onClick={captureImage}\n                  className=\"bg-intel-blue hover:bg-blue-700 text-white p-2 rounded-full shadow\"\n                  title=\"Capture image\"\n                >\n                  <FontAwesomeIcon icon={faCamera} />\n                </button>\n              </div>\n              <canvas ref={canvasRef} className=\"hidden\" />\n            </div>\n          )}\n          \n          {/* Captured image */}\n          {capturedImage && (\n            <div className=\"border-t border-gray-200 p-2\">\n              <div className=\"bg-black rounded-lg overflow-hidden\" style={{ minHeight: '200px' }}>\n                <img\n                  src={capturedImage}\n                  alt=\"Captured\"\n                  className=\"w-full h-full object-contain\"\n                  style={{ maxHeight: '200px' }}\n                />\n              </div>\n              <div className=\"flex justify-center mt-2 space-x-2\">\n                <button\n                  onClick={() => setCapturedImage(null)}\n                  className=\"bg-gray-500 hover:bg-gray-600 text-white px-3 py-1 rounded\"\n                >\n                  Retake\n                </button>\n                <button\n                  onClick={processImage}\n                  className=\"bg-intel-blue hover:bg-blue-700 text-white px-3 py-1 rounded\"\n                  disabled={isLoading}\n                >\n                  {isLoading ? (\n                    <>\n                      <FontAwesomeIcon icon={faSpinner} spin className=\"mr-1\" />\n                      Processing...\n                    </>\n                  ) : (\n                    'Process Image'\n                  )}\n                </button>\n              </div>\n          </div>\n          )}\n          \n          {/* Input area */}\n          <div className=\"border-t border-gray-200 p-2\">\n            {activeTab === 'chat' && (\n              <div className=\"flex items-center\">\n                <div className=\"flex-1 relative\">\n                  <textarea\n                    ref={inputRef}\n                    value={inputMessage}\n                    onChange={(e) => setInputMessage(e.target.value)}\n                    placeholder=\"Type your message...\"\n                    className=\"w-full border border-gray-300 rounded-lg py-2 px-3 focus:outline-none focus:ring-2 focus:ring-intel-blue focus:border-transparent resize-none\"\n                    style={{ minHeight: '44px', maxHeight: '120px' }}\n                    rows=\"1\"\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter' && !e.shiftKey) {\n                        e.preventDefault();\n                        sendMessage();\n                      }\n                    }}\n                    disabled={isLoading || isListening}\n                  />\n                  \n                  {/* Microphone button for speech recognition */}\n                  {speechSupported && (\n                    <button\n                      onClick={toggleListening}\n                      className={`absolute right-2 bottom-2 p-1 rounded-full ${isListening ? 'text-red-500 bg-gray-100' : 'text-gray-500 hover:text-intel-blue'}`}\n                      title={isListening ? 'Stop listening' : 'Start voice input'}\n                      disabled={isLoading}\n                    >\n                      <FontAwesomeIcon icon={isListening ? faStop : faMicrophone} />\n                    </button>\n                  )}\n                </div>\n                \n                {/* Camera toggle button */}\n                <button\n                  onClick={toggleCamera}\n                  className={`ml-2 p-2 rounded-full ${isCameraActive ? 'bg-intel-blue text-white' : 'text-gray-500 hover:bg-gray-300 text-gray-700'}`}\n                  disabled={isLoading}\n                  title={isCameraActive ? 'Close camera' : 'Open camera'}\n                >\n                  <FontAwesomeIcon icon={faCamera} />\n                </button>\n                \n                {/* Send button */}\n                <button\n                  onClick={() => sendMessage()}\n                  className=\"ml-2 bg-intel-blue hover:bg-blue-700 text-white p-2 rounded-full disabled:opacity-50 disabled:cursor-not-allowed\"\n                  disabled={!inputMessage.trim() || isLoading}\n                  title=\"Send message\"\n                >\n                  {isLoading ? (\n                    <FontAwesomeIcon icon={faSpinner} spin />\n                  ) : (\n                    <FontAwesomeIcon icon={faPaperPlane} />\n                  )}\n                </button>\n              </div>\n            )}\n            \n            {activeTab === 'image' && (\n              <div className=\"flex flex-col space-y-2\">\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"text\"\n                    value={imagePrompt}\n                    onChange={(e) => setImagePrompt(e.target.value)}\n                    placeholder=\"Describe the image you want to generate...\"\n                    className=\"flex-1 border border-gray-300 rounded-lg p-2 mr-2 focus:outline-none focus:ring-2 focus:ring-intel-blue\"\n                    disabled={isGeneratingImage}\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter') {\n                        e.preventDefault();\n                        generateImage(imagePrompt);\n                      }\n                    }}\n                  />\n                  <button\n                    onClick={() => generateImage(imagePrompt)}\n                    className=\"bg-intel-blue hover:bg-blue-700 text-white p-2 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n                    disabled={!imagePrompt.trim() || isGeneratingImage}\n                  >\n                    {isGeneratingImage ? (\n                      <FontAwesomeIcon icon={faSpinner} spin />\n                    ) : (\n                      <span>Generate</span>\n                    )}\n                  </button>\n                </div>\n                <p className=\"text-xs text-gray-500\">Generate images from text descriptions using AI</p>\n              </div>\n            )}\n            \n            {activeTab === 'search' && (\n              <div className=\"flex flex-col space-y-2\">\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"text\"\n                    value={searchTopic}\n                    onChange={(e) => setSearchTopic(e.target.value)}\n                    placeholder=\"Enter a topic to search for educational content...\"\n                    className=\"flex-1 border border-gray-300 rounded-lg p-2 mr-2 focus:outline-none focus:ring-2 focus:ring-intel-blue\"\n                    disabled={isSearchingContent}\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter') {\n                        e.preventDefault();\n                        searchEducationalContent(searchTopic);\n                      }\n                    }}\n                  />\n                  <button\n                    onClick={() => searchEducationalContent(searchTopic)}\n                    className=\"bg-intel-blue hover:bg-blue-700 text-white p-2 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n                    disabled={!searchTopic.trim() || isSearchingContent}\n                  >\n                    {isSearchingContent ? (\n                      <FontAwesomeIcon icon={faSpinner} spin />\n                    ) : (\n                      <span>Search</span>\n                    )}\n                  </button>\n                </div>\n                <p className=\"text-xs text-gray-500\">Find educational images and videos on any topic</p>\n              </div>\n            )}\n            \n            {activeTab === 'graph' && (\n              <div className=\"flex flex-col space-y-2\">\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"text\"\n                    value={graphTopic}\n                    onChange={(e) => setGraphTopic(e.target.value)}\n                    placeholder=\"Enter a topic for flowchart generation...\"\n                    className=\"flex-1 border border-gray-300 rounded-lg p-2 mr-2 focus:outline-none focus:ring-2 focus:ring-intel-blue\"\n                    disabled={isGeneratingGraph}\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter') {\n                        e.preventDefault();\n                        generateFlowchartGraph(graphTopic);\n                      }\n                    }}\n                  />\n                  <button\n                    onClick={() => generateFlowchartGraph(graphTopic)}\n                    className=\"bg-intel-blue hover:bg-blue-700 text-white p-2 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n                    disabled={!graphTopic.trim() || isGeneratingGraph}\n                  >\n                    {isGeneratingGraph ? (\n                      <FontAwesomeIcon icon={faSpinner} spin />\n                    ) : (\n                      <span>Generate</span>\n                    )}\n                  </button>\n                </div>\n                <p className=\"text-xs text-gray-500\">Create educational flowcharts and diagrams</p>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      \n      {/* Chat button */}\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"bg-intel-blue hover:bg-blue-700 text-white rounded-full p-3 shadow-lg flex items-center justify-center\"\n        aria-label=\"Open AI Assistant\"\n      >\n        <FontAwesomeIcon icon={faRobot} size=\"lg\" />\n      </button>\n    </div>\n  );\n};\n\nexport default ChatbotButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SACEC,SAAS,EACTC,OAAO,EACPC,SAAS,EACTC,YAAY,EACZC,OAAO,EACPC,QAAQ,EACRC,gBAAgB,EAChBC,YAAY,EACZC,QAAQ,EACRC,MAAM,EACNC,OAAO,EACPC,UAAU,EACVC,YAAY,EACZC,MAAM,EACNC,aAAa,EACbC,UAAU,EACVC,OAAO,QACF,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAAC8B,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgC,YAAY,EAAEC,eAAe,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACoC,KAAK,EAAEC,QAAQ,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACsC,WAAW,EAAEC,cAAc,CAAC,GAAGvC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACwC,WAAW,EAAEC,cAAc,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC0C,eAAe,EAAEC,kBAAkB,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC4C,cAAc,EAAEC,iBAAiB,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC8C,aAAa,EAAEC,gBAAgB,CAAC,GAAG/C,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACgD,cAAc,EAAEC,iBAAiB,CAAC,GAAGjD,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACkD,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGnD,QAAQ,CAAC,IAAI,CAAC;;EAEpE;EACA,MAAM,CAACoD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrD,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACsD,WAAW,EAAEC,cAAc,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACwD,cAAc,EAAEC,iBAAiB,CAAC,GAAGzD,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC0D,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG3D,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAAC4D,WAAW,EAAEC,cAAc,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC8D,aAAa,EAAEC,gBAAgB,CAAC,GAAG/D,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACgE,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjE,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACkE,UAAU,EAAEC,aAAa,CAAC,GAAGnE,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoE,YAAY,EAAEC,eAAe,CAAC,GAAGrE,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACsE,cAAc,EAAEC,iBAAiB,CAAC,GAAGvE,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAMwE,UAAU,GAAG,uBAAuB;;EAE1C;EACA,MAAMC,QAAQ,GAAGvE,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMwE,QAAQ,GAAGxE,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMyE,SAAS,GAAGzE,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM0E,cAAc,GAAG1E,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM2E,cAAc,GAAG3E,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM,CAAC4E,cAAc,EAAEC,iBAAiB,CAAC,GAAG/E,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACgF,SAAS,EAAEC,YAAY,CAAC,GAAGjF,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;;EAEpD;EACA,MAAMkF,aAAa,GAAG,MAAOC,MAAM,IAAK;IACtC,IAAI;MACF9B,oBAAoB,CAAC,IAAI,CAAC;MAC1BhB,QAAQ,CAAC,IAAI,CAAC;;MAEd;MACA,MAAMmC,UAAU,GAAG,uBAAuB;MAE1CY,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,MAAM,CAAC;MAEnD,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGf,UAAU,4BAA4B,EAAE;QACtEgB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,OAAO,EAAEC,SAAS,CAAC,CAAC;UACpBX,MAAM,EAAEA,MAAM;UACdY,KAAK,EAAE,GAAG;UACVC,MAAM,EAAE,GAAG;UACXC,KAAK,EAAE;QACT,CAAC,CAAC;QACFC,IAAI,EAAE;MACR,CAAC,CAAC;MAEF,IAAI,CAACZ,QAAQ,CAACa,EAAE,EAAE;QAChB,IAAIb,QAAQ,CAACc,MAAM,KAAK,GAAG,EAAE;UAC3B,MAAM,IAAIC,KAAK,CAAC,0DAA0D,CAAC;QAC7E,CAAC,MAAM;UACL,MAAM,IAAIA,KAAK,CAAC,iBAAiBf,QAAQ,CAACc,MAAM,EAAE,CAAC;QACrD;MACF;MAEA,MAAME,IAAI,GAAG,MAAMhB,QAAQ,CAACiB,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChB/C,iBAAiB,CAAC6C,IAAI,CAACG,KAAK,CAAC;;QAE7B;QACA,MAAMC,UAAU,GAAG;UACjBC,IAAI,EAAE,WAAW;UACjBC,OAAO,EAAE,kDAAkDzB,MAAM,GAAG;UACpE0B,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAER,IAAI,CAACG;QAClB,CAAC;QAED1E,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE4E,UAAU,CAAC,CAAC;MACxC,CAAC,MAAM;QACL,MAAM,IAAIL,KAAK,CAACC,IAAI,CAACS,OAAO,IAAI,0BAA0B,CAAC;MAC7D;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ3E,QAAQ,CAAC,SAAS,IAAI2E,GAAG,CAACD,OAAO,IAAI,0BAA0B,CAAC,CAAC;MACjE3B,OAAO,CAAChD,KAAK,CAAC,yBAAyB,EAAE4E,GAAG,CAAC;IAC/C,CAAC,SAAS;MACR3D,oBAAoB,CAAC,KAAK,CAAC;MAC3BE,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAM0D,wBAAwB,GAAG,MAAOC,KAAK,IAAK;IAChD,IAAI;MACFvD,qBAAqB,CAAC,IAAI,CAAC;MAC3BtB,QAAQ,CAAC,IAAI,CAAC;;MAEd;MACA,MAAMmC,UAAU,GAAG,uBAAuB;MAE1CY,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAE6B,KAAK,CAAC;MAE9D,MAAM5B,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGf,UAAU,6BAA6B,EAAE;QACvEgB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,OAAO,EAAEC,SAAS,CAAC,CAAC;UACpBoB,KAAK,EAAEA;QACT,CAAC,CAAC;QACFhB,IAAI,EAAE;MACR,CAAC,CAAC;MAEF,IAAI,CAACZ,QAAQ,CAACa,EAAE,EAAE;QAChB,IAAIb,QAAQ,CAACc,MAAM,KAAK,GAAG,EAAE;UAC3B,MAAM,IAAIC,KAAK,CAAC,wDAAwD,CAAC;QAC3E,CAAC,MAAM;UACL,MAAM,IAAIA,KAAK,CAAC,iBAAiBf,QAAQ,CAACc,MAAM,EAAE,CAAC;QACrD;MACF;MAEA,MAAME,IAAI,GAAG,MAAMhB,QAAQ,CAACiB,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBzC,gBAAgB,CAACuC,IAAI,CAAC;;QAEtB;QACA,IAAIM,OAAO,GAAG,8CAA8CM,KAAK,QAAQ;QAEzE,IAAIZ,IAAI,CAACa,MAAM,IAAIb,IAAI,CAACa,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;UACzCR,OAAO,IAAI,MAAMN,IAAI,CAACa,MAAM,CAACC,MAAM,0BAA0B;QAC/D,CAAC,MAAM;UACLR,OAAO,IAAI,4BAA4B;QACzC;QAEA,IAAIN,IAAI,CAACe,MAAM,IAAIf,IAAI,CAACe,MAAM,CAACD,MAAM,GAAG,CAAC,EAAE;UACzCR,OAAO,IAAI,MAAMN,IAAI,CAACe,MAAM,CAACD,MAAM,8BAA8B;UACjEd,IAAI,CAACe,MAAM,CAACC,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;YACpCZ,OAAO,IAAI,GAAGY,KAAK,GAAG,CAAC,KAAKD,KAAK,CAACE,KAAK,IAAI;UAC7C,CAAC,CAAC;QACJ,CAAC,MAAM;UACLb,OAAO,IAAI,6BAA6B;QAC1C;QAEA,MAAMF,UAAU,GAAG;UACjBC,IAAI,EAAE,WAAW;UACjBC,OAAO,EAAEA,OAAO;UAChBc,gBAAgB,EAAE,IAAI;UACtBC,UAAU,EAAErB;QACd,CAAC;QAEDvE,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE4E,UAAU,CAAC,CAAC;MACxC,CAAC,MAAM;QACL,MAAM,IAAIL,KAAK,CAACC,IAAI,CAACS,OAAO,IAAI,sCAAsC,CAAC;MACzE;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ3E,QAAQ,CAAC,SAAS,IAAI2E,GAAG,CAACD,OAAO,IAAI,sCAAsC,CAAC,CAAC;MAC7E3B,OAAO,CAAChD,KAAK,CAAC,sCAAsC,EAAE4E,GAAG,CAAC;IAC5D,CAAC,SAAS;MACRrD,qBAAqB,CAAC,KAAK,CAAC;MAC5BE,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAM+D,sBAAsB,GAAG,MAAOV,KAAK,IAAK;IAC9C,IAAI;MACFjD,oBAAoB,CAAC,IAAI,CAAC;MAC1B5B,QAAQ,CAAC,IAAI,CAAC;;MAEd;MACA,MAAMmC,UAAU,GAAG,uBAAuB;MAE1CY,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAE6B,KAAK,CAAC;MAErD,MAAM5B,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGf,UAAU,6BAA6B,EAAE;QACvEgB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,OAAO,EAAEC,SAAS,CAAC,CAAC;UACpBoB,KAAK,EAAEA;QACT,CAAC,CAAC;QACFhB,IAAI,EAAE;MACR,CAAC,CAAC;MAEF,IAAI,CAACZ,QAAQ,CAACa,EAAE,EAAE;QAChB,IAAIb,QAAQ,CAACc,MAAM,KAAK,GAAG,EAAE;UAC3B,MAAM,IAAIC,KAAK,CAAC,0DAA0D,CAAC;QAC7E,CAAC,MAAM;UACL,MAAM,IAAIA,KAAK,CAAC,iBAAiBf,QAAQ,CAACc,MAAM,EAAE,CAAC;QACrD;MACF;MAEA,MAAME,IAAI,GAAG,MAAMhB,QAAQ,CAACiB,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBzB,iBAAiB,CAACuB,IAAI,CAACG,KAAK,CAAC;;QAE7B;QACA,MAAMC,UAAU,GAAG;UACjBC,IAAI,EAAE,WAAW;UACjBC,OAAO,EAAE,iCAAiCM,KAAK,SAASZ,IAAI,CAACuB,IAAI,IAAI,EAAE,EAAE;UACzEC,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAEzB,IAAI,CAACG;QAClB,CAAC;QAED1E,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE4E,UAAU,CAAC,CAAC;MACxC,CAAC,MAAM;QACL,MAAM,IAAIL,KAAK,CAACC,IAAI,CAACS,OAAO,IAAI,8BAA8B,CAAC;MACjE;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ3E,QAAQ,CAAC,SAAS,IAAI2E,GAAG,CAACD,OAAO,IAAI,8BAA8B,CAAC,CAAC;MACrE3B,OAAO,CAAChD,KAAK,CAAC,6BAA6B,EAAE4E,GAAG,CAAC;IACnD,CAAC,SAAS;MACR/C,oBAAoB,CAAC,KAAK,CAAC;MAC3BE,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;;EAED;;EAEA;EACA,MAAM6D,mBAAmB,GAAIH,IAAI,IAAK;IACpC,IAAI,EAAE,iBAAiB,IAAII,MAAM,CAAC,EAAE;MAClC7C,OAAO,CAAChD,KAAK,CAAC,2CAA2C,CAAC;MAC1D,OAAO,KAAK;IACd;;IAEA;IACA6F,MAAM,CAACC,eAAe,CAACC,MAAM,CAAC,CAAC;IAE/B,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACR,IAAI,CAAC;IAEpDO,SAAS,CAACE,KAAK,GAAG,MAAM;MACtBrF,iBAAiB,CAAC,KAAK,CAAC;MACxBE,sBAAsB,CAAC,IAAI,CAAC;MAC5BiC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC1C,CAAC;IAED+C,SAAS,CAACG,OAAO,GAAIC,KAAK,IAAK;MAC7BpD,OAAO,CAAChD,KAAK,CAAC,yBAAyB,EAAEoG,KAAK,CAAC;MAC/CvF,iBAAiB,CAAC,KAAK,CAAC;MACxBE,sBAAsB,CAAC,IAAI,CAAC;IAC9B,CAAC;IAED8E,MAAM,CAACC,eAAe,CAACO,KAAK,CAACL,SAAS,CAAC;IACvC,OAAO,IAAI;EACb,CAAC;;EAED;EACA,MAAMM,SAAS,GAAGA,CAACC,YAAY,EAAEd,IAAI,KAAK;IACxC,IAAI,CAACI,MAAM,CAACC,eAAe,EAAE;MAC3B9C,OAAO,CAAChD,KAAK,CAAC,gCAAgC,CAAC;MAC/C;IACF;;IAEA;IACA,IAAIc,mBAAmB,KAAKyF,YAAY,EAAE;MACxCC,SAAS,CAAC,CAAC;MACX;IACF;;IAEA;IACA,IAAI5F,cAAc,EAAE;MAClBiF,MAAM,CAACC,eAAe,CAACC,MAAM,CAAC,CAAC;IACjC;;IAEA;IACAlF,iBAAiB,CAAC,IAAI,CAAC;IACvBE,sBAAsB,CAACwF,YAAY,CAAC;;IAEpC;IACA,MAAMP,SAAS,GAAG,IAAIC,wBAAwB,CAACR,IAAI,CAAC;IACpDO,SAAS,CAACS,IAAI,GAAG,OAAO;IACxBT,SAAS,CAACU,IAAI,GAAG,GAAG;IACpBV,SAAS,CAACW,KAAK,GAAG,GAAG;;IAErB;IACAX,SAAS,CAACE,KAAK,GAAG,MAAM;MACtBrF,iBAAiB,CAAC,KAAK,CAAC;MACxBE,sBAAsB,CAAC,IAAI,CAAC;IAC9B,CAAC;IAEDiF,SAAS,CAACG,OAAO,GAAIC,KAAK,IAAK;MAC7BpD,OAAO,CAAChD,KAAK,CAAC,YAAY,EAAEoG,KAAK,CAAC;MAClCvF,iBAAiB,CAAC,KAAK,CAAC;MACxBE,sBAAsB,CAAC,IAAI,CAAC;IAC9B,CAAC;;IAED;IACA8E,MAAM,CAACC,eAAe,CAACO,KAAK,CAACL,SAAS,CAAC;EACzC,CAAC;;EAED;EACA,MAAMQ,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIX,MAAM,CAACC,eAAe,EAAE;MAC1BD,MAAM,CAACC,eAAe,CAACC,MAAM,CAAC,CAAC;MAC/BlF,iBAAiB,CAAC,KAAK,CAAC;MACxBE,sBAAsB,CAAC,IAAI,CAAC;IAC9B;EACF,CAAC;;EAED;EACA,MAAM6F,iBAAiB,GAAGJ,SAAS;;EAEnC;EACA,MAAM9C,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAImD,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IACpD,IAAI,CAACF,MAAM,EAAE;MACXA,MAAM,GAAG,OAAO,GAAGG,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;MAC9DL,YAAY,CAACM,OAAO,CAAC,iBAAiB,EAAEP,MAAM,CAAC;IACjD;IACA,OAAOA,MAAM;EACf,CAAC;;EAED;EACA;EACA,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAA9E,cAAc,CAAC+E,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAED5J,SAAS,CAAC,MAAM;IACdwJ,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAAC3H,QAAQ,CAAC,CAAC;;EAEd;EACA7B,SAAS,CAAC,MAAM;IACd,MAAM6J,kBAAkB,GAAGA,CAAA,KAAM;MAC/B,MAAMC,iBAAiB,GAAG9B,MAAM,CAAC8B,iBAAiB,IAAI9B,MAAM,CAAC+B,uBAAuB;MACpF,IAAID,iBAAiB,EAAE;QACrBpH,kBAAkB,CAAC,IAAI,CAAC;MAC1B;IACF,CAAC;IAEDmH,kBAAkB,CAAC,CAAC;IACpBvH,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM0H,cAAc,GAAIC,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAI,CAACD,CAAC,CAACE,QAAQ,EAAE;MACpCF,CAAC,CAACG,cAAc,CAAC,CAAC;MAClBC,WAAW,CAAC,CAAC;IACf;EACF,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI/H,WAAW,EAAE;MACfgI,aAAa,CAAC,CAAC;IACjB,CAAC,MAAM;MACLC,cAAc,CAAC,CAAC;IAClB;EACF,CAAC;;EAED;EACA,MAAMA,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMV,iBAAiB,GAAG9B,MAAM,CAAC8B,iBAAiB,IAAI9B,MAAM,CAAC+B,uBAAuB;IACpF,IAAI,CAACD,iBAAiB,EAAE;MACtB3E,OAAO,CAAChD,KAAK,CAAC,kCAAkC,CAAC;MACjD;IACF;IAEA,IAAI;MACF,MAAMsI,WAAW,GAAG,IAAIX,iBAAiB,CAAC,CAAC;MAC3CW,WAAW,CAACC,UAAU,GAAG,KAAK;MAC9BD,WAAW,CAACE,cAAc,GAAG,KAAK;MAClCF,WAAW,CAAC7B,IAAI,GAAG,OAAO;MAE1B6B,WAAW,CAACG,OAAO,GAAG,MAAM;QAC1BpI,cAAc,CAAC,IAAI,CAAC;QACpB2C,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MAC3C,CAAC;MAEDqF,WAAW,CAACI,QAAQ,GAAItC,KAAK,IAAK;QAChC,MAAMuC,UAAU,GAAGvC,KAAK,CAACwC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACD,UAAU;QACjD9I,eAAe,CAAC8I,UAAU,CAAC;QAC3B3F,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE0F,UAAU,CAAC;;QAE7C;QACAE,UAAU,CAAC,MAAM;UACfX,WAAW,CAACS,UAAU,CAAC;QACzB,CAAC,EAAE,GAAG,CAAC;MACT,CAAC;MAEDL,WAAW,CAACnC,OAAO,GAAIC,KAAK,IAAK;QAC/BpD,OAAO,CAAChD,KAAK,CAAC,2BAA2B,EAAEoG,KAAK,CAACpG,KAAK,CAAC;QACvDK,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC;MAEDiI,WAAW,CAACpC,KAAK,GAAG,MAAM;QACxB7F,cAAc,CAAC,KAAK,CAAC;QACrB2C,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACzC,CAAC;MAEDR,cAAc,CAAC8E,OAAO,GAAGe,WAAW;MACpCA,WAAW,CAACQ,KAAK,CAAC,CAAC;IACrB,CAAC,CAAC,OAAO9I,KAAK,EAAE;MACdgD,OAAO,CAAChD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC1DK,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;;EAED;EACA,MAAM+H,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI3F,cAAc,CAAC8E,OAAO,EAAE;MAC1B9E,cAAc,CAAC8E,OAAO,CAACwB,IAAI,CAAC,CAAC;MAC7BtG,cAAc,CAAC8E,OAAO,GAAG,IAAI;IAC/B;IACAlH,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;;EAED;EACA,MAAM2I,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIxI,cAAc,EAAE;MAClByI,UAAU,CAAC,CAAC;IACd,CAAC,MAAM;MACLC,WAAW,CAAC,CAAC;IACf;EACF,CAAC;;EAED;EACA,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,WAAW,GAAG;QAClBhE,KAAK,EAAE;UACLiE,UAAU,EAAE,aAAa;UACzBzF,KAAK,EAAE;YAAE0F,KAAK,EAAE;UAAK,CAAC;UACtBzF,MAAM,EAAE;YAAEyF,KAAK,EAAE;UAAI;QACvB;MACF,CAAC;MAED,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAACN,WAAW,CAAC;MAErE,IAAI7G,QAAQ,CAACiF,OAAO,EAAE;QACpBjF,QAAQ,CAACiF,OAAO,CAACmC,SAAS,GAAGJ,MAAM;QACnC7I,iBAAiB,CAAC,IAAI,CAAC;QACvBuC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC/B;IACF,CAAC,CAAC,OAAO2B,GAAG,EAAE;MACZ5B,OAAO,CAAChD,KAAK,CAAC,wBAAwB,EAAE4E,GAAG,CAAC;MAC5C3E,QAAQ,CAAC,2BAA2B,GAAG2E,GAAG,CAACD,OAAO,CAAC;IACrD;EACF,CAAC;;EAED;EACA,MAAMsE,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI3G,QAAQ,CAACiF,OAAO,IAAIjF,QAAQ,CAACiF,OAAO,CAACmC,SAAS,EAAE;MAClD,MAAMC,MAAM,GAAGrH,QAAQ,CAACiF,OAAO,CAACmC,SAAS,CAACE,SAAS,CAAC,CAAC;MACrDD,MAAM,CAACzE,OAAO,CAAC2E,KAAK,IAAIA,KAAK,CAACd,IAAI,CAAC,CAAC,CAAC;MACrCzG,QAAQ,CAACiF,OAAO,CAACmC,SAAS,GAAG,IAAI;IACnC;IACAjJ,iBAAiB,CAAC,KAAK,CAAC;IACxBE,gBAAgB,CAAC,IAAI,CAAC;IACtBqC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC/B,CAAC;;EAED;EACA,MAAM6G,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACxH,QAAQ,CAACiF,OAAO,IAAI,CAAChF,SAAS,CAACgF,OAAO,EAAE;IAE7C,MAAMpC,KAAK,GAAG7C,QAAQ,CAACiF,OAAO;IAC9B,MAAMwC,MAAM,GAAGxH,SAAS,CAACgF,OAAO;;IAEhC;IACAwC,MAAM,CAACpG,KAAK,GAAGwB,KAAK,CAAC6E,UAAU;IAC/BD,MAAM,CAACnG,MAAM,GAAGuB,KAAK,CAAC8E,WAAW;;IAEjC;IACA,MAAMC,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;IACnCD,GAAG,CAACE,SAAS,CAACjF,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE4E,MAAM,CAACpG,KAAK,EAAEoG,MAAM,CAACnG,MAAM,CAAC;;IAEvD;IACA,MAAMyG,YAAY,GAAGN,MAAM,CAACO,SAAS,CAAC,YAAY,CAAC;IACnD3J,gBAAgB,CAAC0J,YAAY,CAAC;;IAE9B;IACApB,UAAU,CAAC,CAAC;IAEZjG,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMsH,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAAC7J,aAAa,EAAE;IAEpB,IAAI;MACFX,YAAY,CAAC,IAAI,CAAC;MAClBoC,iBAAiB,CAAC,mDAAmD,CAAC;;MAEtE;MACA,MAAMqI,UAAU,GAAG9J,aAAa,CAAC+J,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAE9C,MAAMvH,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGf,UAAU,4BAA4B,EAAE;QACtEgB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBa,KAAK,EAAEmG,UAAU;UACjBE,WAAW,EAAE,IAAI,CAAC;QACpB,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACxH,QAAQ,CAACa,EAAE,EAAE;QAChB,MAAM,IAAIE,KAAK,CAAC,mCAAmCf,QAAQ,CAACc,MAAM,EAAE,CAAC;MACvE;MAEA,MAAME,IAAI,GAAG,MAAMhB,QAAQ,CAACiB,IAAI,CAAC,CAAC;;MAElC;MACAtE,eAAe,CAACqE,IAAI,CAACuB,IAAI,CAAC;;MAE1B;MACA,IAAIvB,IAAI,CAACyG,kBAAkB,EAAE;QAC3B,MAAM;UAAEC,gBAAgB;UAAEC;QAAY,CAAC,GAAG3G,IAAI,CAACyG,kBAAkB;QACjE,MAAMG,cAAc,GAAG,CAACF,gBAAgB,GAAG,IAAI,EAAEG,OAAO,CAAC,CAAC,CAAC;QAC3D,MAAMC,kBAAkB,GAAG,sBAAsBF,cAAc,WAAWD,WAAW,IAAI,KAAK,EAAE;QAEhGlL,WAAW,CAAC,CACV,GAAGD,QAAQ,EACX;UACE6E,IAAI,EAAE,WAAW;UACjBC,OAAO,EAAE,+BAA+BN,IAAI,CAACuB,IAAI;AAC7D,IAAIuF,kBAAkB,EAAE;UACZC,qBAAqB,EAAE;QACzB,CAAC,CACF,CAAC;MACJ;;MAEA;MACAtK,gBAAgB,CAAC,IAAI,CAAC;MACtBF,iBAAiB,CAAC,KAAK,CAAC;;MAExB;MACA,IAAI4B,QAAQ,CAACkF,OAAO,EAAE;QACpBlF,QAAQ,CAACkF,OAAO,CAAC2D,KAAK,CAAC,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOlL,KAAK,EAAE;MACdgD,OAAO,CAAChD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CiC,eAAe,CAAC,4CAA4C,CAAC;;MAE7D;MACA,IAAI;QACFE,iBAAiB,CAAC,+BAA+B,CAAC;QAClD,MAAMqI,UAAU,GAAG9J,aAAa,CAAC+J,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAE9C,MAAMvH,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGf,UAAU,4BAA4B,EAAE;UACtEgB,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBa,KAAK,EAAEmG,UAAU;YACjBE,WAAW,EAAE,KAAK,CAAC;UACrB,CAAC;QACH,CAAC,CAAC;QAEF,IAAI,CAACxH,QAAQ,CAACa,EAAE,EAAE;UAChB,MAAM,IAAIE,KAAK,CAAC,mCAAmCf,QAAQ,CAACc,MAAM,EAAE,CAAC;QACvE;QAEA,MAAME,IAAI,GAAG,MAAMhB,QAAQ,CAACiB,IAAI,CAAC,CAAC;QAClCtE,eAAe,CAACqE,IAAI,CAACuB,IAAI,CAAC;QAC1B9E,gBAAgB,CAAC,IAAI,CAAC;QACtBF,iBAAiB,CAAC,KAAK,CAAC;MAC1B,CAAC,CAAC,OAAO0K,aAAa,EAAE;QACtBnI,OAAO,CAAChD,KAAK,CAAC,2BAA2B,EAAEmL,aAAa,CAAC;MAC3D;IACF,CAAC,SAAS;MACRpL,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMmI,WAAW,GAAG,MAAAA,CAAOzC,IAAI,GAAG,IAAI,KAAK;IACzC,MAAM2F,WAAW,GAAG3F,IAAI,IAAI7F,YAAY;IACxC,IAAI,CAACwL,WAAW,CAACC,IAAI,CAAC,CAAC,IAAIvL,SAAS,EAAE;IAEtC,MAAMwL,WAAW,GAAG;MAClB/G,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE4G;IACX,CAAC;IAEDzL,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE4L,WAAW,CAAC,CAAC;IACvCzL,eAAe,CAAC,EAAE,CAAC;IAEnB,MAAM0L,kBAAkB,CAACH,WAAW,CAAC;EACvC,CAAC;;EAED;EACA,MAAMG,kBAAkB,GAAG,MAAOH,WAAW,IAAK;IAChD,IAAI;MACFrL,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;;MAEd;MACAN,WAAW,CAAC6L,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAE;QAAEjH,IAAI,EAAE,WAAW;QAAEkH,QAAQ,EAAE;MAAK,CAAC,CAAC,CAAC;;MAErF;MACA,MAAMrJ,UAAU,GAAG,uBAAuB;MAE1C,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGf,UAAU,mBAAmB,EAAE;QAC7DgB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,OAAO,EAAEC,SAAS,CAAC,CAAC;UACpBiB,OAAO,EAAEyG;QACX,CAAC,CAAC;QACFtH,IAAI,EAAE;MACR,CAAC,CAAC;MAEF,IAAI,CAACZ,QAAQ,CAACa,EAAE,EAAE;QAChB,MAAM,IAAIE,KAAK,CAAC,iBAAiBf,QAAQ,CAACc,MAAM,EAAE,CAAC;MACrD;MAEA,MAAME,IAAI,GAAG,MAAMhB,QAAQ,CAACiB,IAAI,CAAC,CAAC;;MAElC;MACAxE,WAAW,CAAC6L,YAAY,IAAIA,YAAY,CAACE,MAAM,CAACC,GAAG,IAAI,CAACA,GAAG,CAACF,QAAQ,CAAC,CAAC;MAEtE,IAAIvH,IAAI,CAACE,OAAO,EAAE;QAChB,MAAMwH,UAAU,GAAG;UACjBrH,IAAI,EAAE,WAAW;UACjBC,OAAO,EAAEN,IAAI,CAAChB,QAAQ;UACtB2I,QAAQ,EAAE,IAAI;UACdC,cAAc,EAAE5H,IAAI,CAAC6H,eAAe,IAAI;QAC1C,CAAC;QAEDpM,WAAW,CAAC6L,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAEI,UAAU,CAAC,CAAC;MAC5D,CAAC,MAAM;QACL,MAAM,IAAI3H,KAAK,CAACC,IAAI,CAACS,OAAO,IAAI,qCAAqC,CAAC;MACxE;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ;MACAjF,WAAW,CAAC6L,YAAY,IAAIA,YAAY,CAACE,MAAM,CAACC,GAAG,IAAI,CAACA,GAAG,CAACF,QAAQ,CAAC,CAAC;MAEtExL,QAAQ,CAAC,SAAS,GAAG2E,GAAG,CAACD,OAAO,CAAC;MACjC3B,OAAO,CAAChD,KAAK,CAAC,mCAAmC,EAAE4E,GAAG,CAAC;IACzD,CAAC,SAAS;MACR7E,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMiM,iBAAiB,GAAGA,CAAA,KAAM;IAC9BrM,WAAW,CAAC,EAAE,CAAC;IACfM,QAAQ,CAAC,IAAI,CAAC;IACdU,gBAAgB,CAAC,IAAI,CAAC;IACtBU,iBAAiB,CAAC,IAAI,CAAC;IACvBM,gBAAgB,CAAC,IAAI,CAAC;IACtBgB,iBAAiB,CAAC,IAAI,CAAC;IACvBiE,iBAAiB,CAAC,CAAC;EACrB,CAAC;;EAED;EACA,oBACEzH,OAAA;IAAK8M,SAAS,EAAC,qDAAqD;IAAAC,QAAA,GACjE1M,MAAM,iBACLL,OAAA;MAAK8M,SAAS,EAAC,+DAA+D;MAACE,KAAK,EAAE;QAAEvI,MAAM,EAAE;MAAQ,CAAE;MAAAsI,QAAA,gBAExG/M,OAAA;QAAK8M,SAAS,EAAC,gEAAgE;QAAAC,QAAA,gBAC7E/M,OAAA;UAAK8M,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChC/M,OAAA,CAACnB,eAAe;YAACoO,IAAI,EAAEzN,OAAQ;YAACsN,SAAS,EAAC;UAAsB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnErN,OAAA;YAAI8M,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,eACNrN,OAAA;UAAK8M,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7B/M,OAAA;YACEsN,OAAO,EAAEA,CAAA,KAAM9M,WAAW,CAAC,EAAE,CAAE;YAC/BsM,SAAS,EAAC,mCAAmC;YAC7C5G,KAAK,EAAC,oBAAoB;YAAA6G,QAAA,eAE1B/M,OAAA,CAACnB,eAAe;cAACoO,IAAI,EAAEnN;YAAQ;cAAAoN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,eACTrN,OAAA;YACEsN,OAAO,EAAEA,CAAA,KAAMhN,SAAS,CAAC,KAAK,CAAE;YAChCwM,SAAS,EAAC,mCAAmC;YAC7C5G,KAAK,EAAC,OAAO;YAAA6G,QAAA,eAEb/M,OAAA,CAACnB,eAAe;cAACoO,IAAI,EAAElO;YAAQ;cAAAmO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNrN,OAAA;QAAK8M,SAAS,EAAC,+BAA+B;QAAAC,QAAA,gBAC5C/M,OAAA;UACE8M,SAAS,EAAE,wCAAwCrJ,SAAS,KAAK,MAAM,GAAG,8CAA8C,GAAG,mCAAmC,EAAG;UACjK6J,OAAO,EAAEA,CAAA,KAAM5J,YAAY,CAAC,MAAM,CAAE;UAAAqJ,QAAA,gBAEpC/M,OAAA,CAACnB,eAAe;YAACoO,IAAI,EAAEpN,UAAW;YAACiN,SAAS,EAAC;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,QAExD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTrN,OAAA;UACE8M,SAAS,EAAE,wCAAwCrJ,SAAS,KAAK,OAAO,GAAG,8CAA8C,GAAG,mCAAmC,EAAG;UAClK6J,OAAO,EAAEA,CAAA,KAAM5J,YAAY,CAAC,OAAO,CAAE;UAAAqJ,QAAA,gBAErC/M,OAAA,CAACnB,eAAe;YAACoO,IAAI,EAAE/N,OAAQ;YAAC4N,SAAS,EAAC;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,SAErD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTrN,OAAA;UACE8M,SAAS,EAAE,wCAAwCrJ,SAAS,KAAK,QAAQ,GAAG,8CAA8C,GAAG,mCAAmC,EAAG;UACnK6J,OAAO,EAAEA,CAAA,KAAM5J,YAAY,CAAC,QAAQ,CAAE;UAAAqJ,QAAA,gBAEtC/M,OAAA,CAACnB,eAAe;YAACoO,IAAI,EAAE9N,QAAS;YAAC2N,SAAS,EAAC;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,UAEtD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTrN,OAAA;UACE8M,SAAS,EAAE,wCAAwCrJ,SAAS,KAAK,OAAO,GAAG,8CAA8C,GAAG,mCAAmC,EAAG;UAClK6J,OAAO,EAAEA,CAAA,KAAM5J,YAAY,CAAC,OAAO,CAAE;UAAAqJ,QAAA,gBAErC/M,OAAA,CAACnB,eAAe;YAACoO,IAAI,EAAErN,aAAc;YAACkN,SAAS,EAAC;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,SAE3D;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAGL5J,SAAS,KAAK,MAAM,iBACnBzD,OAAA;QAAK8M,SAAS,EAAC,gDAAgD;QAAAC,QAAA,EAC5DxM,QAAQ,CAACsF,MAAM,KAAK,CAAC,IAAI,CAAClF,SAAS,gBAClCX,OAAA;UAAK8M,SAAS,EAAC,gCAAgC;UAAAC,QAAA,gBAC7C/M,OAAA,CAACnB,eAAe;YAACoO,IAAI,EAAEzN,OAAQ;YAAC+N,IAAI,EAAC,IAAI;YAACT,SAAS,EAAC;UAAsB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7ErN,OAAA;YAAA+M,QAAA,EAAG;UAA0C;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,gBAENrN,OAAA;UAAK8M,SAAS,EAAC,WAAW;UAAAC,QAAA,GACvBxM,QAAQ,CAACiN,GAAG,CAAC,CAAChB,GAAG,EAAEvG,KAAK,kBACvBjG,OAAA;YAAiB8M,SAAS,EAAE,QAAQN,GAAG,CAACpH,IAAI,KAAK,MAAM,GAAG,aAAa,GAAG,eAAe,EAAG;YAAA2H,QAAA,eAC1F/M,OAAA;cAAK8M,SAAS,EAAE,GAAGN,GAAG,CAACpH,IAAI,KAAK,MAAM,GAAG,qDAAqD,GAAG,sDAAsD,4BAA6B;cAAA2H,QAAA,gBAElL/M,OAAA;gBAAK8M,SAAS,EAAC,wBAAwB;gBAAAC,QAAA,gBACrC/M,OAAA,CAACnB,eAAe;kBACdoO,IAAI,EAAET,GAAG,CAACpH,IAAI,KAAK,MAAM,GAAG7F,MAAM,GAAGC,OAAQ;kBAC7CsN,SAAS,EAAE,QAAQN,GAAG,CAACpH,IAAI,KAAK,MAAM,GAAG,YAAY,GAAG,iBAAiB,EAAG;kBAC5EmI,IAAI,EAAC;gBAAI;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV,CAAC,eACFrN,OAAA;kBAAM8M,SAAS,EAAC,qBAAqB;kBAAAC,QAAA,EAClCP,GAAG,CAACpH,IAAI,KAAK,MAAM,GAAG,KAAK,GAAG;gBAAc;kBAAA8H,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC,eAGNrN,OAAA;gBAAK8M,SAAS,EAAC,qBAAqB;gBAAAC,QAAA,EACjCP,GAAG,CAACnH;cAAO;gBAAA6H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC,EAGLb,GAAG,CAAClH,QAAQ,IAAIkH,GAAG,CAACjH,SAAS,iBAC5BvF,OAAA;gBAAK8M,SAAS,EAAC,MAAM;gBAAAC,QAAA,eACnB/M,OAAA;kBACEyN,GAAG,EAAE,yBAAyBjB,GAAG,CAACjH,SAAS,EAAG;kBAC9CmI,GAAG,EAAC,iBAAiB;kBACrBZ,SAAS,EAAC;gBAA8B;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CACN,EAGAb,GAAG,CAACrG,gBAAgB,IAAIqG,GAAG,CAACpG,UAAU,iBACrCpG,OAAA;gBAAK8M,SAAS,EAAC,MAAM;gBAAAC,QAAA,GAElBP,GAAG,CAACpG,UAAU,CAACR,MAAM,IAAI4G,GAAG,CAACpG,UAAU,CAACR,MAAM,CAACC,MAAM,GAAG,CAAC,iBACxD7F,OAAA;kBAAK8M,SAAS,EAAC,MAAM;kBAAAC,QAAA,gBACnB/M,OAAA;oBAAI8M,SAAS,EAAC,0BAA0B;oBAAAC,QAAA,EAAC;kBAAO;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACrDrN,OAAA;oBAAK8M,SAAS,EAAC,wBAAwB;oBAAAC,QAAA,EACpCP,GAAG,CAACpG,UAAU,CAACR,MAAM,CAAC+H,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACH,GAAG,CAAC,CAACtI,KAAK,EAAE0I,GAAG,kBAChD5N,OAAA;sBAAe8M,SAAS,EAAC,uCAAuC;sBAAAC,QAAA,eAC9D/M,OAAA;wBACEyN,GAAG,EAAEvI,KAAK,CAAC2I,GAAI;wBACfH,GAAG,EAAExI,KAAK,CAACwI,GAAG,IAAI,eAAgB;wBAClCZ,SAAS,EAAC;sBAA4B;wBAAAI,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACvC;oBAAC,GALMO,GAAG;sBAAAV,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAMR,CACN;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CACN,EAGAb,GAAG,CAACpG,UAAU,CAACN,MAAM,IAAI0G,GAAG,CAACpG,UAAU,CAACN,MAAM,CAACD,MAAM,GAAG,CAAC,iBACxD7F,OAAA;kBAAA+M,QAAA,gBACE/M,OAAA;oBAAI8M,SAAS,EAAC,0BAA0B;oBAAAC,QAAA,EAAC;kBAAO;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACrDrN,OAAA;oBAAK8M,SAAS,EAAC,WAAW;oBAAAC,QAAA,EACvBP,GAAG,CAACpG,UAAU,CAACN,MAAM,CAAC6H,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACH,GAAG,CAAC,CAACxH,KAAK,EAAE4H,GAAG,kBAChD5N,OAAA;sBAEE8N,IAAI,EAAE9H,KAAK,CAAC6H,GAAI;sBAChBE,MAAM,EAAC,QAAQ;sBACfC,GAAG,EAAC,qBAAqB;sBACzBlB,SAAS,EAAC,0EAA0E;sBAAAC,QAAA,gBAEpF/M,OAAA;wBAAK8M,SAAS,EAAC,iEAAiE;wBAAAC,QAAA,EAC7E/G,KAAK,CAACiI,SAAS,iBACdjO,OAAA;0BACEyN,GAAG,EAAEzH,KAAK,CAACiI,SAAU;0BACrBP,GAAG,EAAE1H,KAAK,CAACE,KAAM;0BACjB4G,SAAS,EAAC;wBAA4B;0BAAAI,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACvC;sBACF;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACE,CAAC,eACNrN,OAAA;wBAAK8M,SAAS,EAAC,yBAAyB;wBAAAC,QAAA,gBACtC/M,OAAA;0BAAK8M,SAAS,EAAC,sBAAsB;0BAAAC,QAAA,EAAE/G,KAAK,CAACE;wBAAK;0BAAAgH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC,eACzDrN,OAAA;0BAAK8M,SAAS,EAAC,wBAAwB;0BAAAC,QAAA,EAAE/G,KAAK,CAACkI,OAAO,IAAI;wBAAmB;0BAAAhB,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACjF,CAAC;oBAAA,GAlBDO,GAAG;sBAAAV,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAmBP,CACJ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CACN;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CACN,EAGAb,GAAG,CAACjG,QAAQ,IAAIiG,GAAG,CAAChG,SAAS,iBAC5BxG,OAAA;gBAAK8M,SAAS,EAAC,MAAM;gBAAAC,QAAA,eACnB/M,OAAA;kBACEyN,GAAG,EAAE,yBAAyBjB,GAAG,CAAChG,SAAS,EAAG;kBAC9CkH,GAAG,EAAC,iBAAiB;kBACrBZ,SAAS,EAAC;gBAA8B;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CACN,EAGAb,GAAG,CAACpH,IAAI,KAAK,WAAW,IAAIoH,GAAG,CAACE,QAAQ,IAAI,CAACF,GAAG,CAACG,cAAc,iBAC9D3M,OAAA;gBAAK8M,SAAS,EAAC,MAAM;gBAAAC,QAAA,eACnB/M,OAAA;kBACEsN,OAAO,EAAEA,CAAA,KAAMnG,SAAS,CAAClB,KAAK,EAAEuG,GAAG,CAACnH,OAAO,CAAE;kBAC7CyH,SAAS,EAAE,WAAWrL,cAAc,IAAIE,mBAAmB,KAAKsE,KAAK,GAAG,iCAAiC,GAAG,mCAAmC,EAAG;kBAAA8G,QAAA,gBAElJ/M,OAAA,CAACnB,eAAe;oBACdoO,IAAI,EAAExL,cAAc,IAAIE,mBAAmB,KAAKsE,KAAK,GAAGvG,YAAY,GAAGD,UAAW;oBAClFqN,SAAS,EAAC;kBAAM;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACjB,CAAC,EACD5L,cAAc,IAAIE,mBAAmB,KAAKsE,KAAK,GAAG,YAAY,GAAG,QAAQ;gBAAA;kBAAAiH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CACN,EAGAb,GAAG,CAACpH,IAAI,KAAK,WAAW,IAAIoH,GAAG,CAACG,cAAc,iBAC7C3M,OAAA;gBAAK8M,SAAS,EAAC,MAAM;gBAAAC,QAAA,eACnB/M,OAAA;kBAAM8M,SAAS,EAAC,8BAA8B;kBAAAC,QAAA,gBAC5C/M,OAAA,CAACnB,eAAe;oBAACoO,IAAI,EAAEvN,YAAa;oBAACoN,SAAS,EAAC;kBAAM;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,qBAE1D;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CACN;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC,GAzHEpH,KAAK;YAAAiH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA0HV,CACN,CAAC,EACD1M,SAAS,iBACRX,OAAA;YAAK8M,SAAS,EAAC,oBAAoB;YAAAC,QAAA,eACjC/M,OAAA;cAAK8M,SAAS,EAAC,oEAAoE;cAAAC,QAAA,eACjF/M,OAAA;gBAAK8M,SAAS,EAAC,6BAA6B;gBAAAC,QAAA,gBAC1C/M,OAAA;kBAAK8M,SAAS,EAAC;gBAAiD;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACvErN,OAAA;kBAAK8M,SAAS,EAAC,iDAAiD;kBAACE,KAAK,EAAE;oBAAEmB,cAAc,EAAE;kBAAO;gBAAE;kBAAAjB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC1GrN,OAAA;kBAAK8M,SAAS,EAAC,iDAAiD;kBAACE,KAAK,EAAE;oBAAEmB,cAAc,EAAE;kBAAO;gBAAE;kBAAAjB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,eACDrN,OAAA;YAAKoO,GAAG,EAAE/K;UAAe;YAAA6J,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN,EAGAxM,KAAK,iBACJb,OAAA;QAAK8M,SAAS,EAAC,qCAAqC;QAAAC,QAAA,GACjDlM,KAAK,eACNb,OAAA;UACEsN,OAAO,EAAEA,CAAA,KAAMxM,QAAQ,CAAC,IAAI,CAAE;UAC9BgM,SAAS,EAAC,sCAAsC;UAAAC,QAAA,EACjD;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN,EAGAhM,cAAc,iBACbrB,OAAA;QAAK8M,SAAS,EAAC,uCAAuC;QAAAC,QAAA,gBACpD/M,OAAA;UAAK8M,SAAS,EAAC,qBAAqB;UAACE,KAAK,EAAE;YAAEqB,SAAS,EAAE;UAAQ,CAAE;UAAAtB,QAAA,eACjE/M,OAAA;YACEoO,GAAG,EAAEjL,QAAS;YACdmL,QAAQ;YACRC,WAAW;YACXC,KAAK;YACL1B,SAAS,EAAC,0BAA0B;YACpCE,KAAK,EAAE;cAAEyB,SAAS,EAAE,OAAO;cAAEC,SAAS,EAAE;YAAU,CAAE;YACpDC,YAAY,EAAEA,CAAA,KAAM9K,OAAO,CAACC,GAAG,CAAC,wBAAwB;UAAE;YAAAoJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNrN,OAAA;UAAK8M,SAAS,EAAC,sDAAsD;UAAAC,QAAA,eACnE/M,OAAA;YACEsN,OAAO,EAAE3C,YAAa;YACtBmC,SAAS,EAAC,oEAAoE;YAC9E5G,KAAK,EAAC,eAAe;YAAA6G,QAAA,eAErB/M,OAAA,CAACnB,eAAe;cAACoO,IAAI,EAAE3N;YAAS;cAAA4N,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNrN,OAAA;UAAQoO,GAAG,EAAEhL,SAAU;UAAC0J,SAAS,EAAC;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CACN,EAGA9L,aAAa,iBACZvB,OAAA;QAAK8M,SAAS,EAAC,8BAA8B;QAAAC,QAAA,gBAC3C/M,OAAA;UAAK8M,SAAS,EAAC,qCAAqC;UAACE,KAAK,EAAE;YAAEqB,SAAS,EAAE;UAAQ,CAAE;UAAAtB,QAAA,eACjF/M,OAAA;YACEyN,GAAG,EAAElM,aAAc;YACnBmM,GAAG,EAAC,UAAU;YACdZ,SAAS,EAAC,8BAA8B;YACxCE,KAAK,EAAE;cAAEyB,SAAS,EAAE;YAAQ;UAAE;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNrN,OAAA;UAAK8M,SAAS,EAAC,oCAAoC;UAAAC,QAAA,gBACjD/M,OAAA;YACEsN,OAAO,EAAEA,CAAA,KAAM9L,gBAAgB,CAAC,IAAI,CAAE;YACtCsL,SAAS,EAAC,4DAA4D;YAAAC,QAAA,EACvE;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTrN,OAAA;YACEsN,OAAO,EAAElC,YAAa;YACtB0B,SAAS,EAAC,8DAA8D;YACxE8B,QAAQ,EAAEjO,SAAU;YAAAoM,QAAA,EAEnBpM,SAAS,gBACRX,OAAA,CAAAE,SAAA;cAAA6M,QAAA,gBACE/M,OAAA,CAACnB,eAAe;gBAACoO,IAAI,EAAEjO,SAAU;gBAAC6P,IAAI;gBAAC/B,SAAS,EAAC;cAAM;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,iBAE5D;YAAA,eAAE,CAAC,GAEH;UACD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACJ,eAGDrN,OAAA;QAAK8M,SAAS,EAAC,8BAA8B;QAAAC,QAAA,GAC1CtJ,SAAS,KAAK,MAAM,iBACnBzD,OAAA;UAAK8M,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChC/M,OAAA;YAAK8M,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9B/M,OAAA;cACEoO,GAAG,EAAElL,QAAS;cACd4L,KAAK,EAAErO,YAAa;cACpBsO,QAAQ,EAAGpG,CAAC,IAAKjI,eAAe,CAACiI,CAAC,CAACoF,MAAM,CAACe,KAAK,CAAE;cACjDE,WAAW,EAAC,sBAAsB;cAClClC,SAAS,EAAC,+IAA+I;cACzJE,KAAK,EAAE;gBAAEqB,SAAS,EAAE,MAAM;gBAAEI,SAAS,EAAE;cAAQ,CAAE;cACjDQ,IAAI,EAAC,GAAG;cACRC,SAAS,EAAGvG,CAAC,IAAK;gBAChB,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAI,CAACD,CAAC,CAACE,QAAQ,EAAE;kBACpCF,CAAC,CAACG,cAAc,CAAC,CAAC;kBAClBC,WAAW,CAAC,CAAC;gBACf;cACF,CAAE;cACF6F,QAAQ,EAAEjO,SAAS,IAAIM;YAAY;cAAAiM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC,EAGDlM,eAAe,iBACdnB,OAAA;cACEsN,OAAO,EAAEtE,eAAgB;cACzB8D,SAAS,EAAE,8CAA8C7L,WAAW,GAAG,0BAA0B,GAAG,qCAAqC,EAAG;cAC5IiF,KAAK,EAAEjF,WAAW,GAAG,gBAAgB,GAAG,mBAAoB;cAC5D2N,QAAQ,EAAEjO,SAAU;cAAAoM,QAAA,eAEpB/M,OAAA,CAACnB,eAAe;gBAACoO,IAAI,EAAEhM,WAAW,GAAGtB,MAAM,GAAGN;cAAa;gBAAA6N,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxD,CACT;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAGNrN,OAAA;YACEsN,OAAO,EAAEzD,YAAa;YACtBiD,SAAS,EAAE,yBAAyBzL,cAAc,GAAG,0BAA0B,GAAG,+CAA+C,EAAG;YACpIuN,QAAQ,EAAEjO,SAAU;YACpBuF,KAAK,EAAE7E,cAAc,GAAG,cAAc,GAAG,aAAc;YAAA0L,QAAA,eAEvD/M,OAAA,CAACnB,eAAe;cAACoO,IAAI,EAAE3N;YAAS;cAAA4N,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eAGTrN,OAAA;YACEsN,OAAO,EAAEA,CAAA,KAAMvE,WAAW,CAAC,CAAE;YAC7B+D,SAAS,EAAC,kHAAkH;YAC5H8B,QAAQ,EAAE,CAACnO,YAAY,CAACyL,IAAI,CAAC,CAAC,IAAIvL,SAAU;YAC5CuF,KAAK,EAAC,cAAc;YAAA6G,QAAA,EAEnBpM,SAAS,gBACRX,OAAA,CAACnB,eAAe;cAACoO,IAAI,EAAEjO,SAAU;cAAC6P,IAAI;YAAA;cAAA3B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAEzCrN,OAAA,CAACnB,eAAe;cAACoO,IAAI,EAAEhO;YAAa;cAAAiO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UACvC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN,EAEA5J,SAAS,KAAK,OAAO,iBACpBzD,OAAA;UAAK8M,SAAS,EAAC,yBAAyB;UAAAC,QAAA,gBACtC/M,OAAA;YAAK8M,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAChC/M,OAAA;cACEmP,IAAI,EAAC,MAAM;cACXL,KAAK,EAAE/M,WAAY;cACnBgN,QAAQ,EAAGpG,CAAC,IAAK3G,cAAc,CAAC2G,CAAC,CAACoF,MAAM,CAACe,KAAK,CAAE;cAChDE,WAAW,EAAC,4CAA4C;cACxDlC,SAAS,EAAC,yGAAyG;cACnH8B,QAAQ,EAAE/M,iBAAkB;cAC5BqN,SAAS,EAAGvG,CAAC,IAAK;gBAChB,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;kBACrBD,CAAC,CAACG,cAAc,CAAC,CAAC;kBAClBnF,aAAa,CAAC5B,WAAW,CAAC;gBAC5B;cACF;YAAE;cAAAmL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACFrN,OAAA;cACEsN,OAAO,EAAEA,CAAA,KAAM3J,aAAa,CAAC5B,WAAW,CAAE;cAC1C+K,SAAS,EAAC,2GAA2G;cACrH8B,QAAQ,EAAE,CAAC7M,WAAW,CAACmK,IAAI,CAAC,CAAC,IAAIrK,iBAAkB;cAAAkL,QAAA,EAElDlL,iBAAiB,gBAChB7B,OAAA,CAACnB,eAAe;gBAACoO,IAAI,EAAEjO,SAAU;gBAAC6P,IAAI;cAAA;gBAAA3B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,gBAEzCrN,OAAA;gBAAA+M,QAAA,EAAM;cAAQ;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YACrB;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACNrN,OAAA;YAAG8M,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAA+C;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrF,CACN,EAEA5J,SAAS,KAAK,QAAQ,iBACrBzD,OAAA;UAAK8M,SAAS,EAAC,yBAAyB;UAAAC,QAAA,gBACtC/M,OAAA;YAAK8M,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAChC/M,OAAA;cACEmP,IAAI,EAAC,MAAM;cACXL,KAAK,EAAEzM,WAAY;cACnB0M,QAAQ,EAAGpG,CAAC,IAAKrG,cAAc,CAACqG,CAAC,CAACoF,MAAM,CAACe,KAAK,CAAE;cAChDE,WAAW,EAAC,oDAAoD;cAChElC,SAAS,EAAC,yGAAyG;cACnH8B,QAAQ,EAAEzM,kBAAmB;cAC7B+M,SAAS,EAAGvG,CAAC,IAAK;gBAChB,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;kBACrBD,CAAC,CAACG,cAAc,CAAC,CAAC;kBAClBpD,wBAAwB,CAACrD,WAAW,CAAC;gBACvC;cACF;YAAE;cAAA6K,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACFrN,OAAA;cACEsN,OAAO,EAAEA,CAAA,KAAM5H,wBAAwB,CAACrD,WAAW,CAAE;cACrDyK,SAAS,EAAC,2GAA2G;cACrH8B,QAAQ,EAAE,CAACvM,WAAW,CAAC6J,IAAI,CAAC,CAAC,IAAI/J,kBAAmB;cAAA4K,QAAA,EAEnD5K,kBAAkB,gBACjBnC,OAAA,CAACnB,eAAe;gBAACoO,IAAI,EAAEjO,SAAU;gBAAC6P,IAAI;cAAA;gBAAA3B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,gBAEzCrN,OAAA;gBAAA+M,QAAA,EAAM;cAAM;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YACnB;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACNrN,OAAA;YAAG8M,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAA+C;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrF,CACN,EAEA5J,SAAS,KAAK,OAAO,iBACpBzD,OAAA;UAAK8M,SAAS,EAAC,yBAAyB;UAAAC,QAAA,gBACtC/M,OAAA;YAAK8M,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAChC/M,OAAA;cACEmP,IAAI,EAAC,MAAM;cACXL,KAAK,EAAEnM,UAAW;cAClBoM,QAAQ,EAAGpG,CAAC,IAAK/F,aAAa,CAAC+F,CAAC,CAACoF,MAAM,CAACe,KAAK,CAAE;cAC/CE,WAAW,EAAC,2CAA2C;cACvDlC,SAAS,EAAC,yGAAyG;cACnH8B,QAAQ,EAAEnM,iBAAkB;cAC5ByM,SAAS,EAAGvG,CAAC,IAAK;gBAChB,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;kBACrBD,CAAC,CAACG,cAAc,CAAC,CAAC;kBAClBzC,sBAAsB,CAAC1D,UAAU,CAAC;gBACpC;cACF;YAAE;cAAAuK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACFrN,OAAA;cACEsN,OAAO,EAAEA,CAAA,KAAMjH,sBAAsB,CAAC1D,UAAU,CAAE;cAClDmK,SAAS,EAAC,2GAA2G;cACrH8B,QAAQ,EAAE,CAACjM,UAAU,CAACuJ,IAAI,CAAC,CAAC,IAAIzJ,iBAAkB;cAAAsK,QAAA,EAEjDtK,iBAAiB,gBAChBzC,OAAA,CAACnB,eAAe;gBAACoO,IAAI,EAAEjO,SAAU;gBAAC6P,IAAI;cAAA;gBAAA3B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,gBAEzCrN,OAAA;gBAAA+M,QAAA,EAAM;cAAQ;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YACrB;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACNrN,OAAA;YAAG8M,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAA0C;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChF,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAGDrN,OAAA;MACEsN,OAAO,EAAEA,CAAA,KAAMhN,SAAS,CAAC,CAACD,MAAM,CAAE;MAClCyM,SAAS,EAAC,wGAAwG;MAClH,cAAW,mBAAmB;MAAAC,QAAA,eAE9B/M,OAAA,CAACnB,eAAe;QAACoO,IAAI,EAAEzN,OAAQ;QAAC+N,IAAI,EAAC;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACjN,EAAA,CA1mCID,aAAa;AAAAiP,EAAA,GAAbjP,aAAa;AA4mCnB,eAAeA,aAAa;AAAC,IAAAiP,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}