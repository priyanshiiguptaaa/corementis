{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rkgup\\\\OneDrive\\\\Desktop\\\\corementis\\\\frontend\\\\src\\\\components\\\\student\\\\ChatbotButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRobot, faUser, faPaperPlane, faTimes, faTrash, faMicrophone, faSpinner, faCamera, faVolumeUp, faVolumeMute, faImage, faSearch, faChartSimple, faComments } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotButton = () => {\n  _s();\n  // State variables\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [initialized, setInitialized] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [speechSupported, setSpeechSupported] = useState(false);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [isPlayingAudio, setIsPlayingAudio] = useState(false);\n  const [currentAudioMessage, setCurrentAudioMessage] = useState(null);\n\n  // New state variables for image generation and web scraping\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\n  const [imagePrompt, setImagePrompt] = useState('');\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const [isSearchingContent, setIsSearchingContent] = useState(false);\n  const [searchTopic, setSearchTopic] = useState('');\n  const [searchResults, setSearchResults] = useState(null);\n  const [isGeneratingGraph, setIsGeneratingGraph] = useState(false);\n  const [graphTopic, setGraphTopic] = useState('');\n  const [generatedGraph, setGeneratedGraph] = useState(null);\n  const [activeTab, setActiveTab] = useState('chat'); // 'chat', 'image', 'search', 'graph'\n\n  // Refs\n  const messagesEndRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Generate image from text prompt\n  const generateImage = async prompt => {\n    try {\n      setIsGeneratingImage(true);\n      setError(null);\n\n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      console.log('Generating image for prompt:', prompt);\n      const response = await fetch(`${backendUrl}/api/chatbot/text-to-image`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          prompt: prompt,\n          width: 512,\n          height: 512,\n          steps: 10\n        }),\n        mode: 'cors'\n      });\n      if (!response.ok) {\n        if (response.status === 503) {\n          throw new Error('Image generation service is not available on this server');\n        } else {\n          throw new Error(`Server error: ${response.status}`);\n        }\n      }\n      const data = await response.json();\n      if (data.success) {\n        setGeneratedImage(data.image);\n\n        // Add the generated image to the conversation\n        const newMessage = {\n          role: 'assistant',\n          content: `I've generated an image based on your prompt: \"${prompt}\"`,\n          hasImage: true,\n          imageData: data.image\n        };\n        setMessages([...messages, newMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to generate image');\n      }\n    } catch (err) {\n      setError('Error: ' + (err.message || 'Failed to generate image'));\n      console.error('Error generating image:', err);\n    } finally {\n      setIsGeneratingImage(false);\n      setImagePrompt('');\n    }\n  };\n\n  // Search for educational content\n  const searchEducationalContent = async topic => {\n    try {\n      setIsSearchingContent(true);\n      setError(null);\n\n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      console.log('Searching educational content for topic:', topic);\n      const response = await fetch(`${backendUrl}/api/chatbot/search-content`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          topic: topic\n        }),\n        mode: 'cors'\n      });\n      if (!response.ok) {\n        if (response.status === 503) {\n          throw new Error('Content search service is not available on this server');\n        } else {\n          throw new Error(`Server error: ${response.status}`);\n        }\n      }\n      const data = await response.json();\n      if (data.success) {\n        setSearchResults(data);\n\n        // Add the search results to the conversation\n        let content = `Here are some educational resources about \"${topic}\":\\n\\n`;\n        if (data.images && data.images.length > 0) {\n          content += `ðŸ“¸ ${data.images.length} relevant images found\\n`;\n        } else {\n          content += \"No relevant images found\\n\";\n        }\n        if (data.videos && data.videos.length > 0) {\n          content += `ðŸŽ¬ ${data.videos.length} educational videos found:\\n`;\n          data.videos.forEach((video, index) => {\n            content += `${index + 1}. ${video.title}\\n`;\n          });\n        } else {\n          content += \"No educational videos found\";\n        }\n        const newMessage = {\n          role: 'assistant',\n          content: content,\n          hasSearchResults: true,\n          searchData: data\n        };\n        setMessages([...messages, newMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to search educational content');\n      }\n    } catch (err) {\n      setError('Error: ' + (err.message || 'Failed to search educational content'));\n      console.error('Error searching educational content:', err);\n    } finally {\n      setIsSearchingContent(false);\n      setSearchTopic('');\n    }\n  };\n\n  // Generate flowchart graph\n  const generateFlowchartGraph = async topic => {\n    try {\n      setIsGeneratingGraph(true);\n      setError(null);\n\n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      console.log('Generating flowchart for topic:', topic);\n      const response = await fetch(`${backendUrl}/api/chatbot/generate-graph`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          topic: topic\n        }),\n        mode: 'cors'\n      });\n      if (!response.ok) {\n        if (response.status === 503) {\n          throw new Error('Graph generation service is not available on this server');\n        } else {\n          throw new Error(`Server error: ${response.status}`);\n        }\n      }\n      const data = await response.json();\n      if (data.success) {\n        setGeneratedGraph(data.image);\n\n        // Add the generated graph to the conversation\n        const newMessage = {\n          role: 'assistant',\n          content: `I've created a flowchart for \"${topic}\":\\n\\n${data.text || ''}`,\n          hasGraph: true,\n          graphData: data.image\n        };\n        setMessages([...messages, newMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to generate flowchart');\n      }\n    } catch (err) {\n      setError('Error: ' + (err.message || 'Failed to generate flowchart'));\n      console.error('Error generating flowchart:', err);\n    } finally {\n      setIsGeneratingGraph(false);\n      setGraphTopic('');\n    }\n  };\n\n  // Stop audio playback\n  const stopAudioPlayback = () => {\n    // Cancel any ongoing speech synthesis\n    if ('speechSynthesis' in window) {\n      window.speechSynthesis.cancel();\n    }\n\n    // Reset audio state\n    setIsPlayingAudio(false);\n    setCurrentAudioMessage(null);\n    console.log('Audio playback stopped');\n  };\n\n  // Use browser's built-in speech synthesis\n  const speakWithBrowserTTS = text => {\n    if (!('speechSynthesis' in window)) {\n      console.error('Browser does not support speech synthesis');\n      return false;\n    }\n\n    // Stop any ongoing speech\n    window.speechSynthesis.cancel();\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.onend = () => {\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n      console.log('Speech synthesis finished');\n    };\n    utterance.onerror = event => {\n      console.error('Speech synthesis error:', event);\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    };\n    window.speechSynthesis.speak(utterance);\n    return true;\n  };\n\n  // Play audio for a message\n  const playAudio = (messageId, text) => {\n    // If already playing this message, stop it\n    if (currentAudioMessage === messageId) {\n      stopAudioPlayback();\n      return;\n    }\n\n    // If playing another message, stop it first\n    if (isPlayingAudio) {\n      stopAudioPlayback();\n    }\n\n    // Start playing the new message\n    const success = speakWithBrowserTTS(text);\n    if (success) {\n      setIsPlayingAudio(true);\n      setCurrentAudioMessage(messageId);\n    }\n  };\n\n  // Get or generate a user ID\n  const getUserId = () => {\n    let userId = localStorage.getItem('chatbot_user_id');\n    if (!userId) {\n      userId = 'user_' + Math.random().toString(36).substring(2, 15);\n      localStorage.setItem('chatbot_user_id', userId);\n    }\n    return userId;\n  };\n\n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Initialize speech recognition\n  useEffect(() => {\n    const checkSpeechSupport = () => {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      if (SpeechRecognition) {\n        setSpeechSupported(true);\n      }\n    };\n    checkSpeechSupport();\n    setInitialized(true);\n  }, []);\n\n  // Handle key press in input field\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n\n  // Toggle speech recognition\n  const toggleListening = () => {\n    if (isListening) {\n      stopListening();\n    } else {\n      startListening();\n    }\n  };\n\n  // Start speech recognition\n  const startListening = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      console.error('Speech recognition not supported');\n      return;\n    }\n    try {\n      const recognition = new SpeechRecognition();\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.lang = 'en-US';\n      recognition.onstart = () => {\n        setIsListening(true);\n        console.log('Speech recognition started');\n      };\n      recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setInputMessage(transcript);\n        console.log('Speech recognized:', transcript);\n\n        // Small delay to show the transcript before sending\n        setTimeout(() => {\n          sendMessage(transcript);\n        }, 500);\n      };\n      recognition.onerror = event => {\n        console.error('Speech recognition error:', event.error);\n        setIsListening(false);\n      };\n      recognition.onend = () => {\n        setIsListening(false);\n        console.log('Speech recognition ended');\n      };\n      recognitionRef.current = recognition;\n      recognition.start();\n    } catch (error) {\n      console.error('Error starting speech recognition:', error);\n      setIsListening(false);\n    }\n  };\n\n  // Stop speech recognition\n  const stopListening = () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n      recognitionRef.current = null;\n    }\n    setIsListening(false);\n  };\n\n  // Toggle camera\n  const toggleCamera = () => {\n    if (isCameraActive) {\n      stopCamera();\n    } else {\n      startCamera();\n    }\n  };\n\n  // Start camera\n  const startCamera = async () => {\n    try {\n      const constraints = {\n        video: {\n          facingMode: 'environment',\n          width: {\n            ideal: 1280\n          },\n          height: {\n            ideal: 720\n          }\n        }\n      };\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        setIsCameraActive(true);\n        console.log('Camera started');\n      }\n    } catch (err) {\n      console.error('Error starting camera:', err);\n      setError('Could not access camera: ' + err.message);\n    }\n  };\n\n  // Stop camera\n  const stopCamera = () => {\n    if (videoRef.current && videoRef.current.srcObject) {\n      const tracks = videoRef.current.srcObject.getTracks();\n      tracks.forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n    setIsCameraActive(false);\n    setCapturedImage(null);\n    console.log('Camera stopped');\n  };\n\n  // Capture image from camera\n  const captureImage = () => {\n    if (!videoRef.current || !canvasRef.current) return;\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n\n    // Set canvas dimensions to match video\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    // Draw the current video frame to the canvas\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    // Convert canvas to data URL\n    const imageDataUrl = canvas.toDataURL('image/jpeg');\n    setCapturedImage(imageDataUrl);\n\n    // Stop the camera after capturing\n    stopCamera();\n    console.log('Image captured');\n  };\n\n  // Process captured image (OCR)\n  const processImage = async () => {\n    if (!capturedImage) return;\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      console.log('Processing image with OCR');\n      const response = await fetch(`${backendUrl}/api/chatbot/image-to-text`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          image: capturedImage.split(',')[1] // Remove the data:image/jpeg;base64, part\n        }),\n        mode: 'cors'\n      });\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        // Add the extracted text to the conversation\n        const userMessage = {\n          role: 'user',\n          content: `[Image with text: ${data.text}]`\n        };\n        setMessages([...messages, userMessage]);\n\n        // Reset the captured image\n        setCapturedImage(null);\n\n        // Send the extracted text to the chatbot\n        await sendChatbotRequest(data.text);\n      } else {\n        throw new Error(data.message || 'Failed to extract text from image');\n      }\n    } catch (err) {\n      setError('Error: ' + err.message);\n      console.error('Error processing image:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Send message to chatbot\n  const sendMessage = async (text = null) => {\n    const messageText = text || inputMessage;\n    if (!messageText.trim() || isLoading) return;\n    const userMessage = {\n      role: 'user',\n      content: messageText\n    };\n    setMessages([...messages, userMessage]);\n    setInputMessage('');\n    await sendChatbotRequest(messageText);\n  };\n\n  // Send request to chatbot API\n  const sendChatbotRequest = async messageText => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      // Add typing indicator\n      setMessages(prevMessages => [...prevMessages, {\n        role: 'assistant',\n        isTyping: true\n      }]);\n\n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      const response = await fetch(`${backendUrl}/api/chatbot/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          message: messageText\n        }),\n        mode: 'cors'\n      });\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n      const data = await response.json();\n\n      // Remove typing indicator\n      setMessages(prevMessages => prevMessages.filter(msg => !msg.isTyping));\n      if (data.success) {\n        const botMessage = {\n          role: 'assistant',\n          content: data.response,\n          hasAudio: true,\n          ttsUnavailable: data.tts_unavailable || false\n        };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to get response from chatbot');\n      }\n    } catch (err) {\n      // Remove typing indicator in case of error\n      setMessages(prevMessages => prevMessages.filter(msg => !msg.isTyping));\n      setError('Error: ' + err.message);\n      console.error('Error sending message to chatbot:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Clear conversation\n  const clearConversation = () => {\n    setMessages([]);\n    setError(null);\n    setCapturedImage(null);\n    setGeneratedImage(null);\n    setSearchResults(null);\n    setGeneratedGraph(null);\n    stopAudioPlayback();\n  };\n\n  // Return JSX\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-4 right-4 flex flex-col items-end z-50\",\n    children: [isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-lg mb-2 w-80 md:w-96 flex flex-col\",\n      style: {\n        height: '500px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center p-3 border-b border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faRobot,\n            className: \"text-intel-blue mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium\",\n            children: \"AI Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setMessages([]),\n            className: \"text-gray-500 hover:text-gray-700\",\n            title: \"Clear conversation\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTrash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsOpen(false),\n            className: \"text-gray-500 hover:text-gray-700\",\n            title: \"Close\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex border-b border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `flex-1 py-2 px-4 text-sm font-medium ${activeTab === 'chat' ? 'text-intel-blue border-b-2 border-intel-blue' : 'text-gray-500 hover:text-gray-700'}`,\n          onClick: () => setActiveTab('chat'),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faComments,\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 15\n          }, this), \"Chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `flex-1 py-2 px-4 text-sm font-medium ${activeTab === 'image' ? 'text-intel-blue border-b-2 border-intel-blue' : 'text-gray-500 hover:text-gray-700'}`,\n          onClick: () => setActiveTab('image'),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faImage,\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 15\n          }, this), \"Image\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `flex-1 py-2 px-4 text-sm font-medium ${activeTab === 'search' ? 'text-intel-blue border-b-2 border-intel-blue' : 'text-gray-500 hover:text-gray-700'}`,\n          onClick: () => setActiveTab('search'),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSearch,\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 15\n          }, this), \"Search\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `flex-1 py-2 px-4 text-sm font-medium ${activeTab === 'graph' ? 'text-intel-blue border-b-2 border-intel-blue' : 'text-gray-500 hover:text-gray-700'}`,\n          onClick: () => setActiveTab('graph'),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faChartSimple,\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 15\n          }, this), \"Graph\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 11\n      }, this), activeTab === 'chat' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 overflow-y-auto max-h-96 bg-gray-50\",\n        children: messages.length === 0 && !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-gray-500 py-8\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faRobot,\n            size: \"2x\",\n            className: \"mb-2 text-intel-blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Start a conversation with the AI assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${msg.role === 'user' ? 'bg-intel-blue text-white rounded-lg rounded-br-none' : 'bg-gray-200 text-gray-800 rounded-lg rounded-bl-none'} p-3 max-w-3/4 break-words`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: msg.role === 'user' ? faUser : faRobot,\n                  className: `mr-1 ${msg.role === 'user' ? 'text-white' : 'text-intel-blue'}`,\n                  size: \"xs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 699,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs font-medium\",\n                  children: msg.role === 'user' ? 'You' : 'AI Assistant'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"whitespace-pre-wrap\",\n                children: msg.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 25\n              }, this), msg.hasImage && msg.imageData && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `data:image/png;base64,${msg.imageData}`,\n                  alt: \"Generated image\",\n                  className: \"rounded-lg max-w-full h-auto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 717,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 27\n              }, this), msg.hasSearchResults && msg.searchData && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: [msg.searchData.images && msg.searchData.images.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"text-sm font-medium mb-1\",\n                    children: \"Images:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 731,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"grid grid-cols-2 gap-1\",\n                    children: msg.searchData.images.slice(0, 4).map((image, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"aspect-square overflow-hidden rounded\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: image.url,\n                        alt: image.alt || 'Search result',\n                        className: \"w-full h-full object-cover\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 735,\n                        columnNumber: 39\n                      }, this)\n                    }, idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 734,\n                      columnNumber: 37\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 732,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 730,\n                  columnNumber: 31\n                }, this), msg.searchData.videos && msg.searchData.videos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"text-sm font-medium mb-1\",\n                    children: \"Videos:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 749,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"space-y-1\",\n                    children: msg.searchData.videos.slice(0, 3).map((video, idx) => /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: video.url,\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      className: \"flex items-center p-1 bg-white bg-opacity-50 rounded hover:bg-opacity-70\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"w-16 h-9 bg-gray-300 rounded overflow-hidden flex-shrink-0 mr-2\",\n                        children: video.thumbnail && /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: video.thumbnail,\n                          alt: video.title,\n                          className: \"w-full h-full object-cover\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 761,\n                          columnNumber: 43\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 759,\n                        columnNumber: 39\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-xs overflow-hidden\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"font-medium truncate\",\n                          children: video.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 769,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-gray-600 truncate\",\n                          children: video.channel || 'Educational video'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 770,\n                          columnNumber: 41\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 768,\n                        columnNumber: 39\n                      }, this)]\n                    }, idx, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 752,\n                      columnNumber: 37\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 750,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 748,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 27\n              }, this), msg.hasGraph && msg.graphData && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `data:image/png;base64,${msg.graphData}`,\n                  alt: \"Flowchart graph\",\n                  className: \"rounded-lg max-w-full h-auto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 783,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 27\n              }, this), msg.role === 'assistant' && msg.hasAudio && !msg.ttsUnavailable && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => playAudio(index, msg.content),\n                  className: `text-xs ${isPlayingAudio && currentAudioMessage === index ? 'text-red-600 hover:text-red-700' : 'text-gray-600 hover:text-gray-700'}`,\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: isPlayingAudio && currentAudioMessage === index ? faVolumeMute : faVolumeUp,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 798,\n                    columnNumber: 31\n                  }, this), isPlayingAudio && currentAudioMessage === index ? 'Stop audio' : 'Listen']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 794,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 793,\n                columnNumber: 27\n              }, this), msg.role === 'assistant' && msg.ttsUnavailable && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-gray-500 italic\",\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faVolumeMute,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 811,\n                    columnNumber: 31\n                  }, this), \"Audio unavailable\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 810,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 696,\n              columnNumber: 23\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 21\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-start\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-200 text-gray-800 rounded-lg rounded-bl-none p-3 max-w-3/4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-2 h-2 bg-gray-600 rounded-full animate-bounce\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 823,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-2 h-2 bg-gray-600 rounded-full animate-bounce\",\n                  style: {\n                    animationDelay: '0.2s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 824,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-2 h-2 bg-gray-600 rounded-full animate-bounce\",\n                  style: {\n                    animationDelay: '0.4s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 825,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 822,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 text-red-800 p-2 text-xs\",\n        children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setError(null),\n          className: \"ml-2 text-red-800 hover:text-red-900\",\n          children: \"Dismiss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 13\n      }, this), isCameraActive && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative border-t border-gray-200 p-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-t border-gray-200 p-2\",\n        children: [activeTab === 'chat' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Type your message...\",\n            className: \"flex-1 border border-gray-300 rounded-lg p-2 mr-2 focus:outline-none focus:ring-2 focus:ring-blue-500 resize-none\",\n            rows: \"1\",\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 17\n          }, this), speechSupported && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleListening,\n            className: `p-2 rounded-full mr-2 ${isListening ? 'bg-red-500 text-white' : 'bg-gray-200 hover:bg-gray-300 text-gray-700'}`,\n            disabled: isLoading,\n            title: isListening ? 'Stop listening' : 'Start voice input',\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faMicrophone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 876,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleCamera,\n            className: `p-2 rounded-full mr-2 ${isCameraActive ? 'bg-red-500 text-white' : 'bg-gray-200 hover:bg-gray-300 text-gray-700'}`,\n            disabled: isLoading,\n            title: isCameraActive ? 'Cancel camera' : 'Take picture',\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCamera\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 885,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 879,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendMessage(),\n            className: \"bg-intel-blue hover:bg-blue-700 text-white p-2 rounded-full disabled:opacity-50 disabled:cursor-not-allowed\",\n            disabled: !inputMessage.trim() || isLoading,\n            title: \"Send message\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPaperPlane\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 893,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 15\n        }, this), activeTab === 'image' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: imagePrompt,\n              onChange: e => setImagePrompt(e.target.value),\n              placeholder: \"Describe the image you want to generate...\",\n              className: \"flex-1 border border-gray-300 rounded-lg p-2 mr-2 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n              disabled: isGeneratingImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 901,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => generateImage(imagePrompt),\n              className: \"bg-intel-blue hover:bg-blue-700 text-white p-2 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed\",\n              disabled: !imagePrompt.trim() || isGeneratingImage,\n              children: isGeneratingImage ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faSpinner,\n                spin: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 915,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Generate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 917,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500\",\n            children: \"Generate images from text descriptions using AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 15\n        }, this), activeTab === 'search' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: searchTopic,\n              onChange: e => setSearchTopic(e.target.value),\n              placeholder: \"Enter a topic to search for educational content...\",\n              className: \"flex-1 border border-gray-300 rounded-lg p-2 mr-2 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n              disabled: isSearchingContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => searchEducationalContent(searchTopic),\n              className: \"bg-intel-blue hover:bg-blue-700 text-white p-2 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed\",\n              disabled: !searchTopic.trim() || isSearchingContent,\n              children: isSearchingContent ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faSpinner,\n                spin: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 942,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 944,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 936,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500\",\n            children: \"Find educational images and videos on any topic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 948,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 15\n        }, this), activeTab === 'graph' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: graphTopic,\n              onChange: e => setGraphTopic(e.target.value),\n              placeholder: \"Enter a topic for flowchart generation...\",\n              className: \"flex-1 border border-gray-300 rounded-lg p-2 mr-2 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n              disabled: isGeneratingGraph\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 955,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => generateFlowchartGraph(graphTopic),\n              className: \"bg-intel-blue hover:bg-blue-700 text-white p-2 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed\",\n              disabled: !graphTopic.trim() || isGeneratingGraph,\n              children: isGeneratingGraph ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faSpinner,\n                spin: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 969,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Generate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 971,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 963,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 954,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500\",\n            children: \"Create educational flowcharts and diagrams\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsOpen(!isOpen),\n      className: \"bg-intel-blue hover:bg-blue-700 text-white rounded-full p-3 shadow-lg flex items-center justify-center\",\n      \"aria-label\": \"Open AI Assistant\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faRobot,\n        size: \"lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 988,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 983,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 625,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotButton, \"kr3ggvAQS6kIifSn5u9aHRTurds=\");\n_c = ChatbotButton;\nexport default ChatbotButton;\nvar _c;\n$RefreshReg$(_c, \"ChatbotButton\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","FontAwesomeIcon","faRobot","faUser","faPaperPlane","faTimes","faTrash","faMicrophone","faSpinner","faCamera","faVolumeUp","faVolumeMute","faImage","faSearch","faChartSimple","faComments","jsxDEV","_jsxDEV","ChatbotButton","_s","isOpen","setIsOpen","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","error","setError","initialized","setInitialized","isListening","setIsListening","speechSupported","setSpeechSupported","isCameraActive","setIsCameraActive","capturedImage","setCapturedImage","isPlayingAudio","setIsPlayingAudio","currentAudioMessage","setCurrentAudioMessage","isGeneratingImage","setIsGeneratingImage","imagePrompt","setImagePrompt","generatedImage","setGeneratedImage","isSearchingContent","setIsSearchingContent","searchTopic","setSearchTopic","searchResults","setSearchResults","isGeneratingGraph","setIsGeneratingGraph","graphTopic","setGraphTopic","generatedGraph","setGeneratedGraph","activeTab","setActiveTab","messagesEndRef","recognitionRef","videoRef","canvasRef","generateImage","prompt","backendUrl","console","log","response","fetch","method","headers","body","JSON","stringify","user_id","getUserId","width","height","steps","mode","ok","status","Error","data","json","success","image","newMessage","role","content","hasImage","imageData","message","err","searchEducationalContent","topic","images","length","videos","forEach","video","index","title","hasSearchResults","searchData","generateFlowchartGraph","text","hasGraph","graphData","stopAudioPlayback","window","speechSynthesis","cancel","speakWithBrowserTTS","utterance","SpeechSynthesisUtterance","onend","onerror","event","speak","playAudio","messageId","userId","localStorage","getItem","Math","random","toString","substring","setItem","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","checkSpeechSupport","SpeechRecognition","webkitSpeechRecognition","handleKeyPress","e","key","shiftKey","preventDefault","sendMessage","toggleListening","stopListening","startListening","recognition","continuous","interimResults","lang","onstart","onresult","transcript","results","setTimeout","start","stop","toggleCamera","stopCamera","startCamera","constraints","facingMode","ideal","stream","navigator","mediaDevices","getUserMedia","srcObject","tracks","getTracks","track","captureImage","canvas","videoWidth","videoHeight","ctx","getContext","drawImage","imageDataUrl","toDataURL","processImage","split","userMessage","sendChatbotRequest","messageText","trim","prevMessages","isTyping","filter","msg","botMessage","hasAudio","ttsUnavailable","tts_unavailable","clearConversation","className","children","style","icon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","map","src","alt","slice","idx","url","href","target","rel","thumbnail","channel","animationDelay","ref","value","onChange","onKeyPress","placeholder","rows","disabled","type","spin","_c","$RefreshReg$"],"sources":["C:/Users/rkgup/OneDrive/Desktop/corementis/frontend/src/components/student/ChatbotButton.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { \n  faRobot, \n  faUser, \n  faPaperPlane, \n  faTimes, \n  faTrash, \n  faMicrophone, \n  faSpinner,\n  faCamera,\n  faVolumeUp,\n  faVolumeMute,\n  faImage,\n  faSearch,\n  faChartSimple,\n  faComments\n} from '@fortawesome/free-solid-svg-icons';\n\nconst ChatbotButton = () => {\n  // State variables\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [initialized, setInitialized] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [speechSupported, setSpeechSupported] = useState(false);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [isPlayingAudio, setIsPlayingAudio] = useState(false);\n  const [currentAudioMessage, setCurrentAudioMessage] = useState(null);\n  \n  // New state variables for image generation and web scraping\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\n  const [imagePrompt, setImagePrompt] = useState('');\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const [isSearchingContent, setIsSearchingContent] = useState(false);\n  const [searchTopic, setSearchTopic] = useState('');\n  const [searchResults, setSearchResults] = useState(null);\n  const [isGeneratingGraph, setIsGeneratingGraph] = useState(false);\n  const [graphTopic, setGraphTopic] = useState('');\n  const [generatedGraph, setGeneratedGraph] = useState(null);\n  const [activeTab, setActiveTab] = useState('chat'); // 'chat', 'image', 'search', 'graph'\n  \n  // Refs\n  const messagesEndRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Generate image from text prompt\n  const generateImage = async (prompt) => {\n    try {\n      setIsGeneratingImage(true);\n      setError(null);\n      \n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      \n      console.log('Generating image for prompt:', prompt);\n      \n      const response = await fetch(`${backendUrl}/api/chatbot/text-to-image`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          prompt: prompt,\n          width: 512,\n          height: 512,\n          steps: 10\n        }),\n        mode: 'cors'\n      });\n      \n      if (!response.ok) {\n        if (response.status === 503) {\n          throw new Error('Image generation service is not available on this server');\n        } else {\n          throw new Error(`Server error: ${response.status}`);\n        }\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setGeneratedImage(data.image);\n        \n        // Add the generated image to the conversation\n        const newMessage = {\n          role: 'assistant',\n          content: `I've generated an image based on your prompt: \"${prompt}\"`,\n          hasImage: true,\n          imageData: data.image\n        };\n        \n        setMessages([...messages, newMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to generate image');\n      }\n    } catch (err) {\n      setError('Error: ' + (err.message || 'Failed to generate image'));\n      console.error('Error generating image:', err);\n    } finally {\n      setIsGeneratingImage(false);\n      setImagePrompt('');\n    }\n  };\n  \n  // Search for educational content\n  const searchEducationalContent = async (topic) => {\n    try {\n      setIsSearchingContent(true);\n      setError(null);\n      \n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      \n      console.log('Searching educational content for topic:', topic);\n      \n      const response = await fetch(`${backendUrl}/api/chatbot/search-content`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          topic: topic\n        }),\n        mode: 'cors'\n      });\n      \n      if (!response.ok) {\n        if (response.status === 503) {\n          throw new Error('Content search service is not available on this server');\n        } else {\n          throw new Error(`Server error: ${response.status}`);\n        }\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setSearchResults(data);\n        \n        // Add the search results to the conversation\n        let content = `Here are some educational resources about \"${topic}\":\\n\\n`;\n        \n        if (data.images && data.images.length > 0) {\n          content += `ðŸ“¸ ${data.images.length} relevant images found\\n`;\n        } else {\n          content += \"No relevant images found\\n\";\n        }\n        \n        if (data.videos && data.videos.length > 0) {\n          content += `ðŸŽ¬ ${data.videos.length} educational videos found:\\n`;\n          data.videos.forEach((video, index) => {\n            content += `${index + 1}. ${video.title}\\n`;\n          });\n        } else {\n          content += \"No educational videos found\";\n        }\n        \n        const newMessage = {\n          role: 'assistant',\n          content: content,\n          hasSearchResults: true,\n          searchData: data\n        };\n        \n        setMessages([...messages, newMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to search educational content');\n      }\n    } catch (err) {\n      setError('Error: ' + (err.message || 'Failed to search educational content'));\n      console.error('Error searching educational content:', err);\n    } finally {\n      setIsSearchingContent(false);\n      setSearchTopic('');\n    }\n  };\n  \n  // Generate flowchart graph\n  const generateFlowchartGraph = async (topic) => {\n    try {\n      setIsGeneratingGraph(true);\n      setError(null);\n      \n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      \n      console.log('Generating flowchart for topic:', topic);\n      \n      const response = await fetch(`${backendUrl}/api/chatbot/generate-graph`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          topic: topic\n        }),\n        mode: 'cors'\n      });\n      \n      if (!response.ok) {\n        if (response.status === 503) {\n          throw new Error('Graph generation service is not available on this server');\n        } else {\n          throw new Error(`Server error: ${response.status}`);\n        }\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setGeneratedGraph(data.image);\n        \n        // Add the generated graph to the conversation\n        const newMessage = {\n          role: 'assistant',\n          content: `I've created a flowchart for \"${topic}\":\\n\\n${data.text || ''}`,\n          hasGraph: true,\n          graphData: data.image\n        };\n        \n        setMessages([...messages, newMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to generate flowchart');\n      }\n    } catch (err) {\n      setError('Error: ' + (err.message || 'Failed to generate flowchart'));\n      console.error('Error generating flowchart:', err);\n    } finally {\n      setIsGeneratingGraph(false);\n      setGraphTopic('');\n    }\n  };\n\n  // Stop audio playback\n  const stopAudioPlayback = () => {\n    // Cancel any ongoing speech synthesis\n    if ('speechSynthesis' in window) {\n      window.speechSynthesis.cancel();\n    }\n    \n    // Reset audio state\n    setIsPlayingAudio(false);\n    setCurrentAudioMessage(null);\n    console.log('Audio playback stopped');\n  };\n  \n  // Use browser's built-in speech synthesis\n  const speakWithBrowserTTS = (text) => {\n    if (!('speechSynthesis' in window)) {\n      console.error('Browser does not support speech synthesis');\n      return false;\n    }\n    \n    // Stop any ongoing speech\n    window.speechSynthesis.cancel();\n    \n    const utterance = new SpeechSynthesisUtterance(text);\n    \n    utterance.onend = () => {\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n      console.log('Speech synthesis finished');\n    };\n    \n    utterance.onerror = (event) => {\n      console.error('Speech synthesis error:', event);\n      setIsPlayingAudio(false);\n      setCurrentAudioMessage(null);\n    };\n    \n    window.speechSynthesis.speak(utterance);\n    return true;\n  };\n  \n  // Play audio for a message\n  const playAudio = (messageId, text) => {\n    // If already playing this message, stop it\n    if (currentAudioMessage === messageId) {\n      stopAudioPlayback();\n      return;\n    }\n    \n    // If playing another message, stop it first\n    if (isPlayingAudio) {\n      stopAudioPlayback();\n    }\n    \n    // Start playing the new message\n    const success = speakWithBrowserTTS(text);\n    \n    if (success) {\n      setIsPlayingAudio(true);\n      setCurrentAudioMessage(messageId);\n    }\n  };\n\n  // Get or generate a user ID\n  const getUserId = () => {\n    let userId = localStorage.getItem('chatbot_user_id');\n    if (!userId) {\n      userId = 'user_' + Math.random().toString(36).substring(2, 15);\n      localStorage.setItem('chatbot_user_id', userId);\n    }\n    return userId;\n  };\n\n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Initialize speech recognition\n  useEffect(() => {\n    const checkSpeechSupport = () => {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      if (SpeechRecognition) {\n        setSpeechSupported(true);\n      }\n    };\n    \n    checkSpeechSupport();\n    setInitialized(true);\n  }, []);\n\n  // Handle key press in input field\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n\n  // Toggle speech recognition\n  const toggleListening = () => {\n    if (isListening) {\n      stopListening();\n    } else {\n      startListening();\n    }\n  };\n\n  // Start speech recognition\n  const startListening = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      console.error('Speech recognition not supported');\n      return;\n    }\n    \n    try {\n      const recognition = new SpeechRecognition();\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.lang = 'en-US';\n      \n      recognition.onstart = () => {\n        setIsListening(true);\n        console.log('Speech recognition started');\n      };\n      \n      recognition.onresult = (event) => {\n        const transcript = event.results[0][0].transcript;\n        setInputMessage(transcript);\n        console.log('Speech recognized:', transcript);\n        \n        // Small delay to show the transcript before sending\n        setTimeout(() => {\n          sendMessage(transcript);\n        }, 500);\n      };\n      \n      recognition.onerror = (event) => {\n        console.error('Speech recognition error:', event.error);\n        setIsListening(false);\n      };\n      \n      recognition.onend = () => {\n        setIsListening(false);\n        console.log('Speech recognition ended');\n      };\n      \n      recognitionRef.current = recognition;\n      recognition.start();\n    } catch (error) {\n      console.error('Error starting speech recognition:', error);\n      setIsListening(false);\n    }\n  };\n\n  // Stop speech recognition\n  const stopListening = () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n      recognitionRef.current = null;\n    }\n    setIsListening(false);\n  };\n\n  // Toggle camera\n  const toggleCamera = () => {\n    if (isCameraActive) {\n      stopCamera();\n    } else {\n      startCamera();\n    }\n  };\n\n  // Start camera\n  const startCamera = async () => {\n    try {\n      const constraints = {\n        video: {\n          facingMode: 'environment',\n          width: { ideal: 1280 },\n          height: { ideal: 720 }\n        }\n      };\n      \n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      \n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        setIsCameraActive(true);\n        console.log('Camera started');\n      }\n    } catch (err) {\n      console.error('Error starting camera:', err);\n      setError('Could not access camera: ' + err.message);\n    }\n  };\n\n  // Stop camera\n  const stopCamera = () => {\n    if (videoRef.current && videoRef.current.srcObject) {\n      const tracks = videoRef.current.srcObject.getTracks();\n      tracks.forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n    setIsCameraActive(false);\n    setCapturedImage(null);\n    console.log('Camera stopped');\n  };\n\n  // Capture image from camera\n  const captureImage = () => {\n    if (!videoRef.current || !canvasRef.current) return;\n    \n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    \n    // Set canvas dimensions to match video\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    \n    // Draw the current video frame to the canvas\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n    \n    // Convert canvas to data URL\n    const imageDataUrl = canvas.toDataURL('image/jpeg');\n    setCapturedImage(imageDataUrl);\n    \n    // Stop the camera after capturing\n    stopCamera();\n    \n    console.log('Image captured');\n  };\n\n  // Process captured image (OCR)\n  const processImage = async () => {\n    if (!capturedImage) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      \n      console.log('Processing image with OCR');\n      \n      const response = await fetch(`${backendUrl}/api/chatbot/image-to-text`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          image: capturedImage.split(',')[1] // Remove the data:image/jpeg;base64, part\n        }),\n        mode: 'cors'\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        // Add the extracted text to the conversation\n        const userMessage = {\n          role: 'user',\n          content: `[Image with text: ${data.text}]`\n        };\n        \n        setMessages([...messages, userMessage]);\n        \n        // Reset the captured image\n        setCapturedImage(null);\n        \n        // Send the extracted text to the chatbot\n        await sendChatbotRequest(data.text);\n      } else {\n        throw new Error(data.message || 'Failed to extract text from image');\n      }\n    } catch (err) {\n      setError('Error: ' + err.message);\n      console.error('Error processing image:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Send message to chatbot\n  const sendMessage = async (text = null) => {\n    const messageText = text || inputMessage;\n    if (!messageText.trim() || isLoading) return;\n    \n    const userMessage = {\n      role: 'user',\n      content: messageText\n    };\n    \n    setMessages([...messages, userMessage]);\n    setInputMessage('');\n    \n    await sendChatbotRequest(messageText);\n  };\n\n  // Send request to chatbot API\n  const sendChatbotRequest = async (messageText) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Add typing indicator\n      setMessages(prevMessages => [...prevMessages, { role: 'assistant', isTyping: true }]);\n      \n      // Use the same origin as the current page to avoid CORS issues\n      const backendUrl = 'http://localhost:5001';\n      \n      const response = await fetch(`${backendUrl}/api/chatbot/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          message: messageText\n        }),\n        mode: 'cors'\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      // Remove typing indicator\n      setMessages(prevMessages => prevMessages.filter(msg => !msg.isTyping));\n      \n      if (data.success) {\n        const botMessage = {\n          role: 'assistant',\n          content: data.response,\n          hasAudio: true,\n          ttsUnavailable: data.tts_unavailable || false\n        };\n        \n        setMessages(prevMessages => [...prevMessages, botMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to get response from chatbot');\n      }\n    } catch (err) {\n      // Remove typing indicator in case of error\n      setMessages(prevMessages => prevMessages.filter(msg => !msg.isTyping));\n      \n      setError('Error: ' + err.message);\n      console.error('Error sending message to chatbot:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Clear conversation\n  const clearConversation = () => {\n    setMessages([]);\n    setError(null);\n    setCapturedImage(null);\n    setGeneratedImage(null);\n    setSearchResults(null);\n    setGeneratedGraph(null);\n    stopAudioPlayback();\n  };\n  \n  // Return JSX\n  return (\n    <div className=\"fixed bottom-4 right-4 flex flex-col items-end z-50\">\n      {isOpen && (\n        <div className=\"bg-white rounded-lg shadow-lg mb-2 w-80 md:w-96 flex flex-col\" style={{ height: '500px' }}>\n          {/* Header */}\n          <div className=\"flex justify-between items-center p-3 border-b border-gray-200\">\n            <div className=\"flex items-center\">\n              <FontAwesomeIcon icon={faRobot} className=\"text-intel-blue mr-2\" />\n              <h3 className=\"font-medium\">AI Assistant</h3>\n            </div>\n            <div className=\"flex space-x-2\">\n              <button \n                onClick={() => setMessages([])} \n                className=\"text-gray-500 hover:text-gray-700\"\n                title=\"Clear conversation\"\n              >\n                <FontAwesomeIcon icon={faTrash} />\n              </button>\n              <button \n                onClick={() => setIsOpen(false)} \n                className=\"text-gray-500 hover:text-gray-700\"\n                title=\"Close\"\n              >\n                <FontAwesomeIcon icon={faTimes} />\n              </button>\n            </div>\n          </div>\n          \n          {/* Tabs */}\n          <div className=\"flex border-b border-gray-200\">\n            <button\n              className={`flex-1 py-2 px-4 text-sm font-medium ${activeTab === 'chat' ? 'text-intel-blue border-b-2 border-intel-blue' : 'text-gray-500 hover:text-gray-700'}`}\n              onClick={() => setActiveTab('chat')}\n            >\n              <FontAwesomeIcon icon={faComments} className=\"mr-1\" />\n              Chat\n            </button>\n            <button\n              className={`flex-1 py-2 px-4 text-sm font-medium ${activeTab === 'image' ? 'text-intel-blue border-b-2 border-intel-blue' : 'text-gray-500 hover:text-gray-700'}`}\n              onClick={() => setActiveTab('image')}\n            >\n              <FontAwesomeIcon icon={faImage} className=\"mr-1\" />\n              Image\n            </button>\n            <button\n              className={`flex-1 py-2 px-4 text-sm font-medium ${activeTab === 'search' ? 'text-intel-blue border-b-2 border-intel-blue' : 'text-gray-500 hover:text-gray-700'}`}\n              onClick={() => setActiveTab('search')}\n            >\n              <FontAwesomeIcon icon={faSearch} className=\"mr-1\" />\n              Search\n            </button>\n            <button\n              className={`flex-1 py-2 px-4 text-sm font-medium ${activeTab === 'graph' ? 'text-intel-blue border-b-2 border-intel-blue' : 'text-gray-500 hover:text-gray-700'}`}\n              onClick={() => setActiveTab('graph')}\n            >\n              <FontAwesomeIcon icon={faChartSimple} className=\"mr-1\" />\n              Graph\n            </button>\n          </div>\n          \n          {/* Chat Tab Content */}\n          {activeTab === 'chat' && (\n            <div className=\"flex-1 p-4 overflow-y-auto max-h-96 bg-gray-50\">\n              {messages.length === 0 && !isLoading ? (\n                <div className=\"text-center text-gray-500 py-8\">\n                  <FontAwesomeIcon icon={faRobot} size=\"2x\" className=\"mb-2 text-intel-blue\" />\n                  <p>Start a conversation with the AI assistant</p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {messages.map((msg, index) => (\n                    <div key={index} className={`flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`}>\n                      <div className={`${msg.role === 'user' ? 'bg-intel-blue text-white rounded-lg rounded-br-none' : 'bg-gray-200 text-gray-800 rounded-lg rounded-bl-none'} p-3 max-w-3/4 break-words`}>\n                        {/* User or assistant icon */}\n                        <div className=\"flex items-center mb-1\">\n                          <FontAwesomeIcon \n                            icon={msg.role === 'user' ? faUser : faRobot} \n                            className={`mr-1 ${msg.role === 'user' ? 'text-white' : 'text-intel-blue'}`}\n                            size=\"xs\"\n                          />\n                          <span className=\"text-xs font-medium\">\n                            {msg.role === 'user' ? 'You' : 'AI Assistant'}\n                          </span>\n                        </div>\n                        \n                        {/* Message text content */}\n                        <div className=\"whitespace-pre-wrap\">\n                          {msg.content}\n                        </div>\n                        \n                        {/* Generated image */}\n                        {msg.hasImage && msg.imageData && (\n                          <div className=\"mt-2\">\n                            <img \n                              src={`data:image/png;base64,${msg.imageData}`} \n                              alt=\"Generated image\" \n                              className=\"rounded-lg max-w-full h-auto\"\n                            />\n                          </div>\n                        )}\n                        \n                        {/* Search results */}\n                        {msg.hasSearchResults && msg.searchData && (\n                          <div className=\"mt-2\">\n                            {/* Images */}\n                            {msg.searchData.images && msg.searchData.images.length > 0 && (\n                              <div className=\"mb-2\">\n                                <h4 className=\"text-sm font-medium mb-1\">Images:</h4>\n                                <div className=\"grid grid-cols-2 gap-1\">\n                                  {msg.searchData.images.slice(0, 4).map((image, idx) => (\n                                    <div key={idx} className=\"aspect-square overflow-hidden rounded\">\n                                      <img \n                                        src={image.url} \n                                        alt={image.alt || 'Search result'} \n                                        className=\"w-full h-full object-cover\"\n                                      />\n                                    </div>\n                                  ))}\n                                </div>\n                              </div>\n                            )}\n                            \n                            {/* Videos */}\n                            {msg.searchData.videos && msg.searchData.videos.length > 0 && (\n                              <div>\n                                <h4 className=\"text-sm font-medium mb-1\">Videos:</h4>\n                                <div className=\"space-y-1\">\n                                  {msg.searchData.videos.slice(0, 3).map((video, idx) => (\n                                    <a \n                                      key={idx} \n                                      href={video.url} \n                                      target=\"_blank\" \n                                      rel=\"noopener noreferrer\"\n                                      className=\"flex items-center p-1 bg-white bg-opacity-50 rounded hover:bg-opacity-70\"\n                                    >\n                                      <div className=\"w-16 h-9 bg-gray-300 rounded overflow-hidden flex-shrink-0 mr-2\">\n                                        {video.thumbnail && (\n                                          <img \n                                            src={video.thumbnail} \n                                            alt={video.title} \n                                            className=\"w-full h-full object-cover\"\n                                          />\n                                        )}\n                                      </div>\n                                      <div className=\"text-xs overflow-hidden\">\n                                        <div className=\"font-medium truncate\">{video.title}</div>\n                                        <div className=\"text-gray-600 truncate\">{video.channel || 'Educational video'}</div>\n                                      </div>\n                                    </a>\n                                  ))}\n                                </div>\n                              </div>\n                            )}\n                          </div>\n                        )}\n                        \n                        {/* Flowchart graph */}\n                        {msg.hasGraph && msg.graphData && (\n                          <div className=\"mt-2\">\n                            <img \n                              src={`data:image/png;base64,${msg.graphData}`} \n                              alt=\"Flowchart graph\" \n                              className=\"rounded-lg max-w-full h-auto\"\n                            />\n                          </div>\n                        )}\n                        \n                        {/* Audio playback controls */}\n                        {msg.role === 'assistant' && msg.hasAudio && !msg.ttsUnavailable && (\n                          <div className=\"mt-2\">\n                            <button \n                              onClick={() => playAudio(index, msg.content)}\n                              className={`text-xs ${isPlayingAudio && currentAudioMessage === index ? 'text-red-600 hover:text-red-700' : 'text-gray-600 hover:text-gray-700'}`}\n                            >\n                              <FontAwesomeIcon \n                                icon={isPlayingAudio && currentAudioMessage === index ? faVolumeMute : faVolumeUp} \n                                className=\"mr-1\" \n                              />\n                              {isPlayingAudio && currentAudioMessage === index ? 'Stop audio' : 'Listen'}\n                            </button>\n                          </div>\n                        )}\n                        \n                        {/* Message for when TTS is unavailable */}\n                        {msg.role === 'assistant' && msg.ttsUnavailable && (\n                          <div className=\"mt-2\">\n                            <span className=\"text-xs text-gray-500 italic\">\n                              <FontAwesomeIcon icon={faVolumeMute} className=\"mr-1\" />\n                              Audio unavailable\n                            </span>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                  {isLoading && (\n                    <div className=\"flex justify-start\">\n                      <div className=\"bg-gray-200 text-gray-800 rounded-lg rounded-bl-none p-3 max-w-3/4\">\n                        <div className=\"flex items-center space-x-1\">\n                          <div className=\"w-2 h-2 bg-gray-600 rounded-full animate-bounce\"></div>\n                          <div className=\"w-2 h-2 bg-gray-600 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                          <div className=\"w-2 h-2 bg-gray-600 rounded-full animate-bounce\" style={{ animationDelay: '0.4s' }}></div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  <div ref={messagesEndRef} />\n                </div>\n              )}\n            </div>\n          )}\n          \n          {/* Error Message */}\n          {error && (\n            <div className=\"bg-red-100 text-red-800 p-2 text-xs\">\n              {error}\n              <button \n                onClick={() => setError(null)} \n                className=\"ml-2 text-red-800 hover:text-red-900\"\n              >\n                Dismiss\n              </button>\n            </div>\n          )}\n          \n          {/* Camera view */}\n          {isCameraActive && (\n            <div className=\"relative border-t border-gray-200 p-2\">\n              {/* Camera content */}\n            </div>\n          )}\n          \n          {/* Input area */}\n          <div className=\"border-t border-gray-200 p-2\">\n            {activeTab === 'chat' && (\n              <div className=\"flex items-center\">\n                <textarea\n                  value={inputMessage}\n                  onChange={(e) => setInputMessage(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  placeholder=\"Type your message...\"\n                  className=\"flex-1 border border-gray-300 rounded-lg p-2 mr-2 focus:outline-none focus:ring-2 focus:ring-blue-500 resize-none\"\n                  rows=\"1\"\n                  disabled={isLoading}\n                />\n                {speechSupported && (\n                  <button\n                    onClick={toggleListening}\n                    className={`p-2 rounded-full mr-2 ${isListening ? 'bg-red-500 text-white' : 'bg-gray-200 hover:bg-gray-300 text-gray-700'}`}\n                    disabled={isLoading}\n                    title={isListening ? 'Stop listening' : 'Start voice input'}\n                  >\n                    <FontAwesomeIcon icon={faMicrophone} />\n                  </button>\n                )}\n                <button\n                  onClick={toggleCamera}\n                  className={`p-2 rounded-full mr-2 ${isCameraActive ? 'bg-red-500 text-white' : 'bg-gray-200 hover:bg-gray-300 text-gray-700'}`}\n                  disabled={isLoading}\n                  title={isCameraActive ? 'Cancel camera' : 'Take picture'}\n                >\n                  <FontAwesomeIcon icon={faCamera} />\n                </button>\n                <button\n                  onClick={() => sendMessage()}\n                  className=\"bg-intel-blue hover:bg-blue-700 text-white p-2 rounded-full disabled:opacity-50 disabled:cursor-not-allowed\"\n                  disabled={!inputMessage.trim() || isLoading}\n                  title=\"Send message\"\n                >\n                  <FontAwesomeIcon icon={faPaperPlane} />\n                </button>\n              </div>\n            )}\n            \n            {activeTab === 'image' && (\n              <div className=\"flex flex-col space-y-2\">\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"text\"\n                    value={imagePrompt}\n                    onChange={(e) => setImagePrompt(e.target.value)}\n                    placeholder=\"Describe the image you want to generate...\"\n                    className=\"flex-1 border border-gray-300 rounded-lg p-2 mr-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    disabled={isGeneratingImage}\n                  />\n                  <button\n                    onClick={() => generateImage(imagePrompt)}\n                    className=\"bg-intel-blue hover:bg-blue-700 text-white p-2 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n                    disabled={!imagePrompt.trim() || isGeneratingImage}\n                  >\n                    {isGeneratingImage ? (\n                      <FontAwesomeIcon icon={faSpinner} spin />\n                    ) : (\n                      <span>Generate</span>\n                    )}\n                  </button>\n                </div>\n                <p className=\"text-xs text-gray-500\">Generate images from text descriptions using AI</p>\n              </div>\n            )}\n            \n            {activeTab === 'search' && (\n              <div className=\"flex flex-col space-y-2\">\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"text\"\n                    value={searchTopic}\n                    onChange={(e) => setSearchTopic(e.target.value)}\n                    placeholder=\"Enter a topic to search for educational content...\"\n                    className=\"flex-1 border border-gray-300 rounded-lg p-2 mr-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    disabled={isSearchingContent}\n                  />\n                  <button\n                    onClick={() => searchEducationalContent(searchTopic)}\n                    className=\"bg-intel-blue hover:bg-blue-700 text-white p-2 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n                    disabled={!searchTopic.trim() || isSearchingContent}\n                  >\n                    {isSearchingContent ? (\n                      <FontAwesomeIcon icon={faSpinner} spin />\n                    ) : (\n                      <span>Search</span>\n                    )}\n                  </button>\n                </div>\n                <p className=\"text-xs text-gray-500\">Find educational images and videos on any topic</p>\n              </div>\n            )}\n            \n            {activeTab === 'graph' && (\n              <div className=\"flex flex-col space-y-2\">\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"text\"\n                    value={graphTopic}\n                    onChange={(e) => setGraphTopic(e.target.value)}\n                    placeholder=\"Enter a topic for flowchart generation...\"\n                    className=\"flex-1 border border-gray-300 rounded-lg p-2 mr-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    disabled={isGeneratingGraph}\n                  />\n                  <button\n                    onClick={() => generateFlowchartGraph(graphTopic)}\n                    className=\"bg-intel-blue hover:bg-blue-700 text-white p-2 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n                    disabled={!graphTopic.trim() || isGeneratingGraph}\n                  >\n                    {isGeneratingGraph ? (\n                      <FontAwesomeIcon icon={faSpinner} spin />\n                    ) : (\n                      <span>Generate</span>\n                    )}\n                  </button>\n                </div>\n                <p className=\"text-xs text-gray-500\">Create educational flowcharts and diagrams</p>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      \n      {/* Chat button */}\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"bg-intel-blue hover:bg-blue-700 text-white rounded-full p-3 shadow-lg flex items-center justify-center\"\n        aria-label=\"Open AI Assistant\"\n      >\n        <FontAwesomeIcon icon={faRobot} size=\"lg\" />\n      </button>\n    </div>\n  );\n};\n\nexport default ChatbotButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}