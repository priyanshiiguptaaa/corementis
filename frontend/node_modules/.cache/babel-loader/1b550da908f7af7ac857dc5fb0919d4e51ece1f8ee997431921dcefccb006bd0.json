{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rkgup\\\\OneDrive\\\\Desktop\\\\corementis\\\\frontend\\\\src\\\\components\\\\student\\\\ChatbotButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComments, faPaperPlane, faTimes, faRobot, faUser, faTrash, faMicrophone, faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotButton = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [initialized, setInitialized] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [speechSupported, setSpeechSupported] = useState(false);\n  const messagesEndRef = useRef(null);\n  const recognitionRef = useRef(null);\n\n  // Generate a user ID or get from localStorage\n  const getUserId = () => {\n    let userId = localStorage.getItem('corementis_user_id');\n    if (!userId) {\n      userId = 'user_' + Math.random().toString(36).substring(2, 15);\n      localStorage.setItem('corementis_user_id', userId);\n    }\n    return userId;\n  };\n\n  // Initialize speech recognition\n  useEffect(() => {\n    // Always set speech supported to true since we're using Whisper API\n    setSpeechSupported(true);\n\n    // Set up MediaRecorder for audio capture\n    return () => {\n      if (recognitionRef.current && recognitionRef.current.state === 'recording') {\n        recognitionRef.current.stop();\n      }\n    };\n  }, []);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Initialize chatbot when first opened\n  useEffect(() => {\n    if (isOpen && !initialized) {\n      initializeChatbot();\n    }\n  }, [isOpen, initialized]);\n  const initializeChatbot = async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5001/api/chatbot/initialize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          course_context: 'Computer Vision and Machine Learning'\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setInitialized(true);\n        // If there's existing conversation, fetch it\n        if (data.conversation_length > 1) {\n          fetchHistory();\n        } else {\n          // Add welcome message\n          setMessages([{\n            role: 'assistant',\n            content: 'Hello! I\\'m your CoreMentis AI assistant. How can I help you with your studies today?'\n          }]);\n        }\n      } else {\n        setError('Failed to initialize chatbot: ' + data.message);\n      }\n    } catch (err) {\n      setError('Error connecting to chatbot service: ' + err.message);\n      console.error('Error initializing chatbot:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchHistory = async () => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/chatbot/history?user_id=${getUserId()}`);\n      const data = await response.json();\n      if (data.success) {\n        setMessages(data.history);\n      }\n    } catch (err) {\n      console.error('Error fetching chat history:', err);\n    }\n  };\n  const toggleListening = async () => {\n    if (isListening) {\n      // Stop recording\n      if (recognitionRef.current && recognitionRef.current.state === 'recording') {\n        recognitionRef.current.stop();\n      }\n      return;\n    }\n    try {\n      setError(null);\n      setIsListening(true);\n\n      // Request microphone access\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n\n      // Set up media recorder\n      const mediaRecorder = new MediaRecorder(stream);\n      recognitionRef.current = mediaRecorder;\n      const audioChunks = [];\n      mediaRecorder.addEventListener('dataavailable', event => {\n        audioChunks.push(event.data);\n      });\n      mediaRecorder.addEventListener('stop', async () => {\n        // Create audio blob\n        const audioBlob = new Blob(audioChunks, {\n          type: 'audio/webm'\n        });\n\n        // Convert to base64\n        const reader = new FileReader();\n        reader.readAsDataURL(audioBlob);\n        reader.onloadend = async () => {\n          const base64Audio = reader.result;\n          try {\n            // Send to Whisper API\n            const response = await fetch('http://localhost:5001/api/chatbot/speech-to-text', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                audio: base64Audio\n              })\n            });\n            const data = await response.json();\n            if (data.success) {\n              // Set the transcribed text in the input field\n              setInputMessage(data.text);\n\n              // Auto-send after voice input is complete\n              setTimeout(() => {\n                sendMessage(data.text);\n              }, 500);\n            } else {\n              setError('Failed to transcribe speech: ' + data.message);\n            }\n          } catch (err) {\n            setError('Error sending audio to server: ' + err.message);\n            console.error('Error sending audio to server:', err);\n          } finally {\n            setIsListening(false);\n          }\n        };\n      });\n\n      // Start recording\n      mediaRecorder.start();\n\n      // Stop recording after 10 seconds if not stopped manually\n      setTimeout(() => {\n        if (mediaRecorder.state === 'recording') {\n          mediaRecorder.stop();\n        }\n      }, 10000);\n    } catch (err) {\n      setError('Error accessing microphone: ' + err.message);\n      console.error('Error accessing microphone:', err);\n      setIsListening(false);\n    }\n  };\n  const sendMessage = async voiceInput => {\n    const messageToSend = voiceInput || inputMessage.trim();\n    if (!messageToSend) return;\n    if (!voiceInput) {\n      setInputMessage('');\n    }\n\n    // Add user message to UI immediately\n    setMessages(prev => [...prev, {\n      role: 'user',\n      content: messageToSend\n    }]);\n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5001/api/chatbot/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          message: messageToSend\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: data.response\n        }]);\n      } else {\n        setError('Failed to get response: ' + data.message);\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: 'Sorry, I encountered an error. Please try again later.'\n        }]);\n      }\n    } catch (err) {\n      setError('Error sending message: ' + err.message);\n      console.error('Error sending message:', err);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again later.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const clearConversation = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/chatbot/clear', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          course_context: 'Computer Vision and Machine Learning'\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setMessages([{\n          role: 'assistant',\n          content: 'Conversation history cleared. How can I help you today?'\n        }]);\n      } else {\n        setError('Failed to clear conversation: ' + data.message);\n      }\n    } catch (err) {\n      setError('Error clearing conversation: ' + err.message);\n      console.error('Error clearing conversation:', err);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-6 right-6 z-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsOpen(!isOpen),\n      className: \"bg-intel-blue hover:bg-intel-dark-blue text-white rounded-full w-14 h-14 flex items-center justify-center shadow-lg transition-all duration-300 hover:scale-110\",\n      \"aria-label\": \"Open AI Assistant\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faComments,\n        size: \"lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-20 right-0 w-80 sm:w-96 bg-white rounded-lg shadow-xl overflow-hidden flex flex-col border border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-intel-blue text-white p-4 flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faRobot,\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium\",\n            children: \"CoreMentis AI Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearConversation,\n            className: \"text-white hover:text-gray-200 transition-colors\",\n            title: \"Clear conversation\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTrash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsOpen(false),\n            className: \"text-white hover:text-gray-200 transition-colors\",\n            title: \"Close chatbot\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 overflow-y-auto max-h-96 bg-gray-50\",\n        children: messages.length === 0 && !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-gray-500 py-8\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faRobot,\n            size: \"2x\",\n            className: \"mb-2 text-intel-blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Start a conversation with the AI assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `max-w-3/4 rounded-lg p-3 ${msg.role === 'user' ? 'bg-intel-blue text-white rounded-br-none' : 'bg-gray-200 text-gray-800 rounded-bl-none'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: msg.role === 'user' ? faUser : faRobot,\n                  className: \"mr-2\",\n                  size: \"xs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs font-semibold\",\n                  children: msg.role === 'user' ? 'You' : 'AI Assistant'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"whitespace-pre-wrap text-sm\",\n                children: msg.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 19\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-start\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-200 text-gray-800 rounded-lg rounded-bl-none p-3 max-w-3/4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-2 h-2 bg-gray-600 rounded-full animate-bounce\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-2 h-2 bg-gray-600 rounded-full animate-bounce\",\n                  style: {\n                    animationDelay: '0.2s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-2 h-2 bg-gray-600 rounded-full animate-bounce\",\n                  style: {\n                    animationDelay: '0.4s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 text-red-800 p-2 text-xs\",\n        children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setError(null),\n          className: \"ml-2 text-red-800 hover:text-red-900\",\n          children: \"Dismiss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-t border-gray-200 p-3 bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Ask me anything...\",\n            className: \"flex-1 border border-gray-300 rounded-l-lg p-2 focus:outline-none focus:ring-2 focus:ring-intel-blue focus:border-transparent resize-none max-h-20\",\n            rows: \"1\",\n            disabled: isListening\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this), speechSupported && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleListening,\n            disabled: isLoading,\n            className: `p-2 ${isListening ? 'bg-red-500 hover:bg-red-600' : 'bg-green-500 hover:bg-green-600'} text-white`,\n            title: isListening ? 'Stop listening' : 'Start voice input',\n            children: isListening ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSpinner,\n              spin: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faMicrophone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendMessage(),\n            disabled: isLoading || !inputMessage.trim(),\n            className: `bg-intel-blue text-white p-2 rounded-r-lg h-full ${!inputMessage.trim() || isLoading ? 'opacity-50 cursor-not-allowed' : 'hover:bg-intel-dark-blue'}`,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPaperPlane\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500 mt-1 text-center\",\n          children: speechSupported ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Type or \", isListening ? 'speaking...' : 'click the microphone to speak', \" \\u2022 Powered by Groq LLM API\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Powered by Groq LLM API\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotButton, \"pEOnnvcnwizOftTkHBKNKATTsiE=\");\n_c = ChatbotButton;\nexport default ChatbotButton;\nvar _c;\n$RefreshReg$(_c, \"ChatbotButton\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FontAwesomeIcon","faComments","faPaperPlane","faTimes","faRobot","faUser","faTrash","faMicrophone","faSpinner","jsxDEV","_jsxDEV","ChatbotButton","_s","isOpen","setIsOpen","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","error","setError","initialized","setInitialized","isListening","setIsListening","speechSupported","setSpeechSupported","messagesEndRef","recognitionRef","getUserId","userId","localStorage","getItem","Math","random","toString","substring","setItem","current","state","stop","scrollToBottom","_messagesEndRef$curre","scrollIntoView","behavior","initializeChatbot","response","fetch","method","headers","body","JSON","stringify","user_id","course_context","data","json","success","conversation_length","fetchHistory","role","content","message","err","console","history","toggleListening","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","audioChunks","addEventListener","event","push","audioBlob","Blob","type","reader","FileReader","readAsDataURL","onloadend","base64Audio","result","text","setTimeout","sendMessage","start","voiceInput","messageToSend","trim","prev","clearConversation","handleKeyPress","e","key","shiftKey","preventDefault","className","children","onClick","icon","size","fileName","_jsxFileName","lineNumber","columnNumber","title","length","map","msg","index","style","animationDelay","ref","value","onChange","target","onKeyPress","placeholder","rows","disabled","spin","_c","$RefreshReg$"],"sources":["C:/Users/rkgup/OneDrive/Desktop/corementis/frontend/src/components/student/ChatbotButton.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComments, faPaperPlane, faTimes, faRobot, faUser, faTrash, faMicrophone, faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nconst ChatbotButton = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [initialized, setInitialized] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [speechSupported, setSpeechSupported] = useState(false);\n  const messagesEndRef = useRef(null);\n  const recognitionRef = useRef(null);\n  \n  // Generate a user ID or get from localStorage\n  const getUserId = () => {\n    let userId = localStorage.getItem('corementis_user_id');\n    if (!userId) {\n      userId = 'user_' + Math.random().toString(36).substring(2, 15);\n      localStorage.setItem('corementis_user_id', userId);\n    }\n    return userId;\n  };\n  \n  // Initialize speech recognition\n  useEffect(() => {\n    // Always set speech supported to true since we're using Whisper API\n    setSpeechSupported(true);\n    \n    // Set up MediaRecorder for audio capture\n    return () => {\n      if (recognitionRef.current && recognitionRef.current.state === 'recording') {\n        recognitionRef.current.stop();\n      }\n    };\n  }, []);\n  \n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n  \n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  \n  // Initialize chatbot when first opened\n  useEffect(() => {\n    if (isOpen && !initialized) {\n      initializeChatbot();\n    }\n  }, [isOpen, initialized]);\n  \n  const initializeChatbot = async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5001/api/chatbot/initialize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          course_context: 'Computer Vision and Machine Learning'\n        }),\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setInitialized(true);\n        // If there's existing conversation, fetch it\n        if (data.conversation_length > 1) {\n          fetchHistory();\n        } else {\n          // Add welcome message\n          setMessages([\n            {\n              role: 'assistant',\n              content: 'Hello! I\\'m your CoreMentis AI assistant. How can I help you with your studies today?'\n            }\n          ]);\n        }\n      } else {\n        setError('Failed to initialize chatbot: ' + data.message);\n      }\n    } catch (err) {\n      setError('Error connecting to chatbot service: ' + err.message);\n      console.error('Error initializing chatbot:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const fetchHistory = async () => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/chatbot/history?user_id=${getUserId()}`);\n      const data = await response.json();\n      \n      if (data.success) {\n        setMessages(data.history);\n      }\n    } catch (err) {\n      console.error('Error fetching chat history:', err);\n    }\n  };\n  \n  const toggleListening = async () => {\n    if (isListening) {\n      // Stop recording\n      if (recognitionRef.current && recognitionRef.current.state === 'recording') {\n        recognitionRef.current.stop();\n      }\n      return;\n    }\n    \n    try {\n      setError(null);\n      setIsListening(true);\n      \n      // Request microphone access\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      \n      // Set up media recorder\n      const mediaRecorder = new MediaRecorder(stream);\n      recognitionRef.current = mediaRecorder;\n      \n      const audioChunks = [];\n      \n      mediaRecorder.addEventListener('dataavailable', (event) => {\n        audioChunks.push(event.data);\n      });\n      \n      mediaRecorder.addEventListener('stop', async () => {\n        // Create audio blob\n        const audioBlob = new Blob(audioChunks, { type: 'audio/webm' });\n        \n        // Convert to base64\n        const reader = new FileReader();\n        reader.readAsDataURL(audioBlob);\n        reader.onloadend = async () => {\n          const base64Audio = reader.result;\n          \n          try {\n            // Send to Whisper API\n            const response = await fetch('http://localhost:5001/api/chatbot/speech-to-text', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                audio: base64Audio\n              }),\n            });\n            \n            const data = await response.json();\n            \n            if (data.success) {\n              // Set the transcribed text in the input field\n              setInputMessage(data.text);\n              \n              // Auto-send after voice input is complete\n              setTimeout(() => {\n                sendMessage(data.text);\n              }, 500);\n            } else {\n              setError('Failed to transcribe speech: ' + data.message);\n            }\n          } catch (err) {\n            setError('Error sending audio to server: ' + err.message);\n            console.error('Error sending audio to server:', err);\n          } finally {\n            setIsListening(false);\n          }\n        };\n      });\n      \n      // Start recording\n      mediaRecorder.start();\n      \n      // Stop recording after 10 seconds if not stopped manually\n      setTimeout(() => {\n        if (mediaRecorder.state === 'recording') {\n          mediaRecorder.stop();\n        }\n      }, 10000);\n      \n    } catch (err) {\n      setError('Error accessing microphone: ' + err.message);\n      console.error('Error accessing microphone:', err);\n      setIsListening(false);\n    }\n  };\n  \n  const sendMessage = async (voiceInput) => {\n    const messageToSend = voiceInput || inputMessage.trim();\n    if (!messageToSend) return;\n    \n    if (!voiceInput) {\n      setInputMessage('');\n    }\n    \n    // Add user message to UI immediately\n    setMessages(prev => [...prev, { role: 'user', content: messageToSend }]);\n    \n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5001/api/chatbot/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          message: messageToSend\n        }),\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setMessages(prev => [...prev, { role: 'assistant', content: data.response }]);\n      } else {\n        setError('Failed to get response: ' + data.message);\n        setMessages(prev => [...prev, { role: 'assistant', content: 'Sorry, I encountered an error. Please try again later.' }]);\n      }\n    } catch (err) {\n      setError('Error sending message: ' + err.message);\n      console.error('Error sending message:', err);\n      setMessages(prev => [...prev, { role: 'assistant', content: 'Sorry, I encountered an error. Please try again later.' }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const clearConversation = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/chatbot/clear', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: getUserId(),\n          course_context: 'Computer Vision and Machine Learning'\n        }),\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setMessages([\n          {\n            role: 'assistant',\n            content: 'Conversation history cleared. How can I help you today?'\n          }\n        ]);\n      } else {\n        setError('Failed to clear conversation: ' + data.message);\n      }\n    } catch (err) {\n      setError('Error clearing conversation: ' + err.message);\n      console.error('Error clearing conversation:', err);\n    }\n  };\n  \n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  \n  return (\n    <div className=\"fixed bottom-6 right-6 z-50\">\n      {/* Chatbot Button */}\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"bg-intel-blue hover:bg-intel-dark-blue text-white rounded-full w-14 h-14 flex items-center justify-center shadow-lg transition-all duration-300 hover:scale-110\"\n        aria-label=\"Open AI Assistant\"\n      >\n        <FontAwesomeIcon icon={faComments} size=\"lg\" />\n      </button>\n      \n      {/* Chatbot Panel */}\n      {isOpen && (\n        <div className=\"absolute bottom-20 right-0 w-80 sm:w-96 bg-white rounded-lg shadow-xl overflow-hidden flex flex-col border border-gray-200\">\n          {/* Header */}\n          <div className=\"bg-intel-blue text-white p-4 flex justify-between items-center\">\n            <div className=\"flex items-center\">\n              <FontAwesomeIcon icon={faRobot} className=\"mr-2\" />\n              <h3 className=\"font-medium\">CoreMentis AI Assistant</h3>\n            </div>\n            <div className=\"flex space-x-2\">\n              <button \n                onClick={clearConversation}\n                className=\"text-white hover:text-gray-200 transition-colors\"\n                title=\"Clear conversation\"\n              >\n                <FontAwesomeIcon icon={faTrash} />\n              </button>\n              <button \n                onClick={() => setIsOpen(false)}\n                className=\"text-white hover:text-gray-200 transition-colors\"\n                title=\"Close chatbot\"\n              >\n                <FontAwesomeIcon icon={faTimes} />\n              </button>\n            </div>\n          </div>\n          \n          {/* Messages Container */}\n          <div className=\"flex-1 p-4 overflow-y-auto max-h-96 bg-gray-50\">\n            {messages.length === 0 && !isLoading ? (\n              <div className=\"text-center text-gray-500 py-8\">\n                <FontAwesomeIcon icon={faRobot} size=\"2x\" className=\"mb-2 text-intel-blue\" />\n                <p>Start a conversation with the AI assistant</p>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {messages.map((msg, index) => (\n                  <div \n                    key={index} \n                    className={`flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`}\n                  >\n                    <div \n                      className={`max-w-3/4 rounded-lg p-3 ${msg.role === 'user' \n                        ? 'bg-intel-blue text-white rounded-br-none' \n                        : 'bg-gray-200 text-gray-800 rounded-bl-none'}`}\n                    >\n                      <div className=\"flex items-center mb-1\">\n                        <FontAwesomeIcon \n                          icon={msg.role === 'user' ? faUser : faRobot} \n                          className=\"mr-2\" \n                          size=\"xs\"\n                        />\n                        <span className=\"text-xs font-semibold\">\n                          {msg.role === 'user' ? 'You' : 'AI Assistant'}\n                        </span>\n                      </div>\n                      <p className=\"whitespace-pre-wrap text-sm\">{msg.content}</p>\n                    </div>\n                  </div>\n                ))}\n                {isLoading && (\n                  <div className=\"flex justify-start\">\n                    <div className=\"bg-gray-200 text-gray-800 rounded-lg rounded-bl-none p-3 max-w-3/4\">\n                      <div className=\"flex items-center space-x-1\">\n                        <div className=\"w-2 h-2 bg-gray-600 rounded-full animate-bounce\"></div>\n                        <div className=\"w-2 h-2 bg-gray-600 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                        <div className=\"w-2 h-2 bg-gray-600 rounded-full animate-bounce\" style={{ animationDelay: '0.4s' }}></div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                <div ref={messagesEndRef} />\n              </div>\n            )}\n          </div>\n          \n          {/* Error Message */}\n          {error && (\n            <div className=\"bg-red-100 text-red-800 p-2 text-xs\">\n              {error}\n              <button \n                onClick={() => setError(null)} \n                className=\"ml-2 text-red-800 hover:text-red-900\"\n              >\n                Dismiss\n              </button>\n            </div>\n          )}\n          \n          {/* Input Area */}\n          <div className=\"border-t border-gray-200 p-3 bg-white\">\n            <div className=\"flex items-center\">\n              <textarea\n                value={inputMessage}\n                onChange={(e) => setInputMessage(e.target.value)}\n                onKeyPress={handleKeyPress}\n                placeholder=\"Ask me anything...\"\n                className=\"flex-1 border border-gray-300 rounded-l-lg p-2 focus:outline-none focus:ring-2 focus:ring-intel-blue focus:border-transparent resize-none max-h-20\"\n                rows=\"1\"\n                disabled={isListening}\n              />\n              {speechSupported && (\n                <button\n                  onClick={toggleListening}\n                  disabled={isLoading}\n                  className={`p-2 ${isListening ? 'bg-red-500 hover:bg-red-600' : 'bg-green-500 hover:bg-green-600'} text-white`}\n                  title={isListening ? 'Stop listening' : 'Start voice input'}\n                >\n                  {isListening ? (\n                    <FontAwesomeIcon icon={faSpinner} spin />\n                  ) : (\n                    <FontAwesomeIcon icon={faMicrophone} />\n                  )}\n                </button>\n              )}\n              <button\n                onClick={() => sendMessage()}\n                disabled={isLoading || !inputMessage.trim()}\n                className={`bg-intel-blue text-white p-2 rounded-r-lg h-full ${(!inputMessage.trim() || isLoading) ? 'opacity-50 cursor-not-allowed' : 'hover:bg-intel-dark-blue'}`}\n              >\n                <FontAwesomeIcon icon={faPaperPlane} />\n              </button>\n            </div>\n            <div className=\"text-xs text-gray-500 mt-1 text-center\">\n              {speechSupported ? (\n                <span>Type or {isListening ? 'speaking...' : 'click the microphone to speak'} • Powered by Groq LLM API</span>\n              ) : (\n                <span>Powered by Groq LLM API</span>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatbotButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,UAAU,EAAEC,YAAY,EAAEC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAEC,OAAO,EAAEC,YAAY,EAAEC,SAAS,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzI,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC8B,eAAe,EAAEC,kBAAkB,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMgC,cAAc,GAAG9B,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM+B,cAAc,GAAG/B,MAAM,CAAC,IAAI,CAAC;;EAEnC;EACA,MAAMgC,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC;IACvD,IAAI,CAACF,MAAM,EAAE;MACXA,MAAM,GAAG,OAAO,GAAGG,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;MAC9DL,YAAY,CAACM,OAAO,CAAC,oBAAoB,EAAEP,MAAM,CAAC;IACpD;IACA,OAAOA,MAAM;EACf,CAAC;;EAED;EACAlC,SAAS,CAAC,MAAM;IACd;IACA8B,kBAAkB,CAAC,IAAI,CAAC;;IAExB;IACA,OAAO,MAAM;MACX,IAAIE,cAAc,CAACU,OAAO,IAAIV,cAAc,CAACU,OAAO,CAACC,KAAK,KAAK,WAAW,EAAE;QAC1EX,cAAc,CAACU,OAAO,CAACE,IAAI,CAAC,CAAC;MAC/B;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAAf,cAAc,CAACW,OAAO,cAAAI,qBAAA,uBAAtBA,qBAAA,CAAwBC,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAEDhD,SAAS,CAAC,MAAM;IACd6C,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAAC5B,QAAQ,CAAC,CAAC;;EAEd;EACAjB,SAAS,CAAC,MAAM;IACd,IAAIe,MAAM,IAAI,CAACU,WAAW,EAAE;MAC1BwB,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAAClC,MAAM,EAAEU,WAAW,CAAC,CAAC;EAEzB,MAAMwB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF3B,YAAY,CAAC,IAAI,CAAC;MAClB,MAAM4B,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;QAC3EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,OAAO,EAAExB,SAAS,CAAC,CAAC;UACpByB,cAAc,EAAE;QAClB,CAAC;MACH,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBnC,cAAc,CAAC,IAAI,CAAC;QACpB;QACA,IAAIiC,IAAI,CAACG,mBAAmB,GAAG,CAAC,EAAE;UAChCC,YAAY,CAAC,CAAC;QAChB,CAAC,MAAM;UACL;UACA7C,WAAW,CAAC,CACV;YACE8C,IAAI,EAAE,WAAW;YACjBC,OAAO,EAAE;UACX,CAAC,CACF,CAAC;QACJ;MACF,CAAC,MAAM;QACLzC,QAAQ,CAAC,gCAAgC,GAAGmC,IAAI,CAACO,OAAO,CAAC;MAC3D;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ3C,QAAQ,CAAC,uCAAuC,GAAG2C,GAAG,CAACD,OAAO,CAAC;MAC/DE,OAAO,CAAC7C,KAAK,CAAC,6BAA6B,EAAE4C,GAAG,CAAC;IACnD,CAAC,SAAS;MACR7C,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMyC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,qDAAqDlB,SAAS,CAAC,CAAC,EAAE,CAAC;MAChG,MAAM0B,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChB3C,WAAW,CAACyC,IAAI,CAACU,OAAO,CAAC;MAC3B;IACF,CAAC,CAAC,OAAOF,GAAG,EAAE;MACZC,OAAO,CAAC7C,KAAK,CAAC,8BAA8B,EAAE4C,GAAG,CAAC;IACpD;EACF,CAAC;EAED,MAAMG,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI3C,WAAW,EAAE;MACf;MACA,IAAIK,cAAc,CAACU,OAAO,IAAIV,cAAc,CAACU,OAAO,CAACC,KAAK,KAAK,WAAW,EAAE;QAC1EX,cAAc,CAACU,OAAO,CAACE,IAAI,CAAC,CAAC;MAC/B;MACA;IACF;IAEA,IAAI;MACFpB,QAAQ,CAAC,IAAI,CAAC;MACdI,cAAc,CAAC,IAAI,CAAC;;MAEpB;MACA,MAAM2C,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;;MAEzE;MACA,MAAMC,aAAa,GAAG,IAAIC,aAAa,CAACN,MAAM,CAAC;MAC/CvC,cAAc,CAACU,OAAO,GAAGkC,aAAa;MAEtC,MAAME,WAAW,GAAG,EAAE;MAEtBF,aAAa,CAACG,gBAAgB,CAAC,eAAe,EAAGC,KAAK,IAAK;QACzDF,WAAW,CAACG,IAAI,CAACD,KAAK,CAACrB,IAAI,CAAC;MAC9B,CAAC,CAAC;MAEFiB,aAAa,CAACG,gBAAgB,CAAC,MAAM,EAAE,YAAY;QACjD;QACA,MAAMG,SAAS,GAAG,IAAIC,IAAI,CAACL,WAAW,EAAE;UAAEM,IAAI,EAAE;QAAa,CAAC,CAAC;;QAE/D;QACA,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,aAAa,CAACL,SAAS,CAAC;QAC/BG,MAAM,CAACG,SAAS,GAAG,YAAY;UAC7B,MAAMC,WAAW,GAAGJ,MAAM,CAACK,MAAM;UAEjC,IAAI;YACF;YACA,MAAMxC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kDAAkD,EAAE;cAC/EC,MAAM,EAAE,MAAM;cACdC,OAAO,EAAE;gBACP,cAAc,EAAE;cAClB,CAAC;cACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;gBACnBmB,KAAK,EAAEc;cACT,CAAC;YACH,CAAC,CAAC;YAEF,MAAM9B,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;YAElC,IAAID,IAAI,CAACE,OAAO,EAAE;cAChB;cACAzC,eAAe,CAACuC,IAAI,CAACgC,IAAI,CAAC;;cAE1B;cACAC,UAAU,CAAC,MAAM;gBACfC,WAAW,CAAClC,IAAI,CAACgC,IAAI,CAAC;cACxB,CAAC,EAAE,GAAG,CAAC;YACT,CAAC,MAAM;cACLnE,QAAQ,CAAC,+BAA+B,GAAGmC,IAAI,CAACO,OAAO,CAAC;YAC1D;UACF,CAAC,CAAC,OAAOC,GAAG,EAAE;YACZ3C,QAAQ,CAAC,iCAAiC,GAAG2C,GAAG,CAACD,OAAO,CAAC;YACzDE,OAAO,CAAC7C,KAAK,CAAC,gCAAgC,EAAE4C,GAAG,CAAC;UACtD,CAAC,SAAS;YACRvC,cAAc,CAAC,KAAK,CAAC;UACvB;QACF,CAAC;MACH,CAAC,CAAC;;MAEF;MACAgD,aAAa,CAACkB,KAAK,CAAC,CAAC;;MAErB;MACAF,UAAU,CAAC,MAAM;QACf,IAAIhB,aAAa,CAACjC,KAAK,KAAK,WAAW,EAAE;UACvCiC,aAAa,CAAChC,IAAI,CAAC,CAAC;QACtB;MACF,CAAC,EAAE,KAAK,CAAC;IAEX,CAAC,CAAC,OAAOuB,GAAG,EAAE;MACZ3C,QAAQ,CAAC,8BAA8B,GAAG2C,GAAG,CAACD,OAAO,CAAC;MACtDE,OAAO,CAAC7C,KAAK,CAAC,6BAA6B,EAAE4C,GAAG,CAAC;MACjDvC,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAMiE,WAAW,GAAG,MAAOE,UAAU,IAAK;IACxC,MAAMC,aAAa,GAAGD,UAAU,IAAI5E,YAAY,CAAC8E,IAAI,CAAC,CAAC;IACvD,IAAI,CAACD,aAAa,EAAE;IAEpB,IAAI,CAACD,UAAU,EAAE;MACf3E,eAAe,CAAC,EAAE,CAAC;IACrB;;IAEA;IACAF,WAAW,CAACgF,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAElC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAE+B;IAAc,CAAC,CAAC,CAAC;IAExE,IAAI;MACF1E,YAAY,CAAC,IAAI,CAAC;MAClB,MAAM4B,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;QACxEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,OAAO,EAAExB,SAAS,CAAC,CAAC;UACpBiC,OAAO,EAAE8B;QACX,CAAC;MACH,CAAC,CAAC;MAEF,MAAMrC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChB3C,WAAW,CAACgF,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;UAAElC,IAAI,EAAE,WAAW;UAAEC,OAAO,EAAEN,IAAI,CAACT;QAAS,CAAC,CAAC,CAAC;MAC/E,CAAC,MAAM;QACL1B,QAAQ,CAAC,0BAA0B,GAAGmC,IAAI,CAACO,OAAO,CAAC;QACnDhD,WAAW,CAACgF,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;UAAElC,IAAI,EAAE,WAAW;UAAEC,OAAO,EAAE;QAAyD,CAAC,CAAC,CAAC;MAC1H;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZ3C,QAAQ,CAAC,yBAAyB,GAAG2C,GAAG,CAACD,OAAO,CAAC;MACjDE,OAAO,CAAC7C,KAAK,CAAC,wBAAwB,EAAE4C,GAAG,CAAC;MAC5CjD,WAAW,CAACgF,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAElC,IAAI,EAAE,WAAW;QAAEC,OAAO,EAAE;MAAyD,CAAC,CAAC,CAAC;IAC1H,CAAC,SAAS;MACR3C,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAM6E,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMjD,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,OAAO,EAAExB,SAAS,CAAC,CAAC;UACpByB,cAAc,EAAE;QAClB,CAAC;MACH,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChB3C,WAAW,CAAC,CACV;UACE8C,IAAI,EAAE,WAAW;UACjBC,OAAO,EAAE;QACX,CAAC,CACF,CAAC;MACJ,CAAC,MAAM;QACLzC,QAAQ,CAAC,gCAAgC,GAAGmC,IAAI,CAACO,OAAO,CAAC;MAC3D;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ3C,QAAQ,CAAC,+BAA+B,GAAG2C,GAAG,CAACD,OAAO,CAAC;MACvDE,OAAO,CAAC7C,KAAK,CAAC,8BAA8B,EAAE4C,GAAG,CAAC;IACpD;EACF,CAAC;EAED,MAAMiC,cAAc,GAAIC,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAI,CAACD,CAAC,CAACE,QAAQ,EAAE;MACpCF,CAAC,CAACG,cAAc,CAAC,CAAC;MAClBX,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EAED,oBACEjF,OAAA;IAAK6F,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAE1C9F,OAAA;MACE+F,OAAO,EAAEA,CAAA,KAAM3F,SAAS,CAAC,CAACD,MAAM,CAAE;MAClC0F,SAAS,EAAC,iKAAiK;MAC3K,cAAW,mBAAmB;MAAAC,QAAA,eAE9B9F,OAAA,CAACV,eAAe;QAAC0G,IAAI,EAAEzG,UAAW;QAAC0G,IAAI,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EAGRlG,MAAM,iBACLH,OAAA;MAAK6F,SAAS,EAAC,4HAA4H;MAAAC,QAAA,gBAEzI9F,OAAA;QAAK6F,SAAS,EAAC,gEAAgE;QAAAC,QAAA,gBAC7E9F,OAAA;UAAK6F,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChC9F,OAAA,CAACV,eAAe;YAAC0G,IAAI,EAAEtG,OAAQ;YAACmG,SAAS,EAAC;UAAM;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnDrG,OAAA;YAAI6F,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAuB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD,CAAC,eACNrG,OAAA;UAAK6F,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7B9F,OAAA;YACE+F,OAAO,EAAER,iBAAkB;YAC3BM,SAAS,EAAC,kDAAkD;YAC5DS,KAAK,EAAC,oBAAoB;YAAAR,QAAA,eAE1B9F,OAAA,CAACV,eAAe;cAAC0G,IAAI,EAAEpG;YAAQ;cAAAsG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,eACTrG,OAAA;YACE+F,OAAO,EAAEA,CAAA,KAAM3F,SAAS,CAAC,KAAK,CAAE;YAChCyF,SAAS,EAAC,kDAAkD;YAC5DS,KAAK,EAAC,eAAe;YAAAR,QAAA,eAErB9F,OAAA,CAACV,eAAe;cAAC0G,IAAI,EAAEvG;YAAQ;cAAAyG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNrG,OAAA;QAAK6F,SAAS,EAAC,gDAAgD;QAAAC,QAAA,EAC5DzF,QAAQ,CAACkG,MAAM,KAAK,CAAC,IAAI,CAAC9F,SAAS,gBAClCT,OAAA;UAAK6F,SAAS,EAAC,gCAAgC;UAAAC,QAAA,gBAC7C9F,OAAA,CAACV,eAAe;YAAC0G,IAAI,EAAEtG,OAAQ;YAACuG,IAAI,EAAC,IAAI;YAACJ,SAAS,EAAC;UAAsB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7ErG,OAAA;YAAA8F,QAAA,EAAG;UAA0C;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,gBAENrG,OAAA;UAAK6F,SAAS,EAAC,WAAW;UAAAC,QAAA,GACvBzF,QAAQ,CAACmG,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvB1G,OAAA;YAEE6F,SAAS,EAAE,QAAQY,GAAG,CAACrD,IAAI,KAAK,MAAM,GAAG,aAAa,GAAG,eAAe,EAAG;YAAA0C,QAAA,eAE3E9F,OAAA;cACE6F,SAAS,EAAE,4BAA4BY,GAAG,CAACrD,IAAI,KAAK,MAAM,GACtD,0CAA0C,GAC1C,2CAA2C,EAAG;cAAA0C,QAAA,gBAElD9F,OAAA;gBAAK6F,SAAS,EAAC,wBAAwB;gBAAAC,QAAA,gBACrC9F,OAAA,CAACV,eAAe;kBACd0G,IAAI,EAAES,GAAG,CAACrD,IAAI,KAAK,MAAM,GAAGzD,MAAM,GAAGD,OAAQ;kBAC7CmG,SAAS,EAAC,MAAM;kBAChBI,IAAI,EAAC;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV,CAAC,eACFrG,OAAA;kBAAM6F,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,EACpCW,GAAG,CAACrD,IAAI,KAAK,MAAM,GAAG,KAAK,GAAG;gBAAc;kBAAA8C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC,eACNrG,OAAA;gBAAG6F,SAAS,EAAC,6BAA6B;gBAAAC,QAAA,EAAEW,GAAG,CAACpD;cAAO;gBAAA6C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzD;UAAC,GAnBDK,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAoBP,CACN,CAAC,EACD5F,SAAS,iBACRT,OAAA;YAAK6F,SAAS,EAAC,oBAAoB;YAAAC,QAAA,eACjC9F,OAAA;cAAK6F,SAAS,EAAC,oEAAoE;cAAAC,QAAA,eACjF9F,OAAA;gBAAK6F,SAAS,EAAC,6BAA6B;gBAAAC,QAAA,gBAC1C9F,OAAA;kBAAK6F,SAAS,EAAC;gBAAiD;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACvErG,OAAA;kBAAK6F,SAAS,EAAC,iDAAiD;kBAACc,KAAK,EAAE;oBAAEC,cAAc,EAAE;kBAAO;gBAAE;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC1GrG,OAAA;kBAAK6F,SAAS,EAAC,iDAAiD;kBAACc,KAAK,EAAE;oBAAEC,cAAc,EAAE;kBAAO;gBAAE;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,eACDrG,OAAA;YAAK6G,GAAG,EAAE1F;UAAe;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAGL1F,KAAK,iBACJX,OAAA;QAAK6F,SAAS,EAAC,qCAAqC;QAAAC,QAAA,GACjDnF,KAAK,eACNX,OAAA;UACE+F,OAAO,EAAEA,CAAA,KAAMnF,QAAQ,CAAC,IAAI,CAAE;UAC9BiF,SAAS,EAAC,sCAAsC;UAAAC,QAAA,EACjD;QAED;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN,eAGDrG,OAAA;QAAK6F,SAAS,EAAC,uCAAuC;QAAAC,QAAA,gBACpD9F,OAAA;UAAK6F,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChC9F,OAAA;YACE8G,KAAK,EAAEvG,YAAa;YACpBwG,QAAQ,EAAGtB,CAAC,IAAKjF,eAAe,CAACiF,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;YACjDG,UAAU,EAAEzB,cAAe;YAC3B0B,WAAW,EAAC,oBAAoB;YAChCrB,SAAS,EAAC,oJAAoJ;YAC9JsB,IAAI,EAAC,GAAG;YACRC,QAAQ,EAAErG;UAAY;YAAAmF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC,EACDpF,eAAe,iBACdjB,OAAA;YACE+F,OAAO,EAAErC,eAAgB;YACzB0D,QAAQ,EAAE3G,SAAU;YACpBoF,SAAS,EAAE,OAAO9E,WAAW,GAAG,6BAA6B,GAAG,iCAAiC,aAAc;YAC/GuF,KAAK,EAAEvF,WAAW,GAAG,gBAAgB,GAAG,mBAAoB;YAAA+E,QAAA,EAE3D/E,WAAW,gBACVf,OAAA,CAACV,eAAe;cAAC0G,IAAI,EAAElG,SAAU;cAACuH,IAAI;YAAA;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAEzCrG,OAAA,CAACV,eAAe;cAAC0G,IAAI,EAAEnG;YAAa;cAAAqG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UACvC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CACT,eACDrG,OAAA;YACE+F,OAAO,EAAEA,CAAA,KAAMd,WAAW,CAAC,CAAE;YAC7BmC,QAAQ,EAAE3G,SAAS,IAAI,CAACF,YAAY,CAAC8E,IAAI,CAAC,CAAE;YAC5CQ,SAAS,EAAE,oDAAqD,CAACtF,YAAY,CAAC8E,IAAI,CAAC,CAAC,IAAI5E,SAAS,GAAI,+BAA+B,GAAG,0BAA0B,EAAG;YAAAqF,QAAA,eAEpK9F,OAAA,CAACV,eAAe;cAAC0G,IAAI,EAAExG;YAAa;cAAA0G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNrG,OAAA;UAAK6F,SAAS,EAAC,wCAAwC;UAAAC,QAAA,EACpD7E,eAAe,gBACdjB,OAAA;YAAA8F,QAAA,GAAM,UAAQ,EAAC/E,WAAW,GAAG,aAAa,GAAG,+BAA+B,EAAC,iCAA0B;UAAA;YAAAmF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,gBAE9GrG,OAAA;YAAA8F,QAAA,EAAM;UAAuB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QACpC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnG,EAAA,CAhaID,aAAa;AAAAqH,EAAA,GAAbrH,aAAa;AAkanB,eAAeA,aAAa;AAAC,IAAAqH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}