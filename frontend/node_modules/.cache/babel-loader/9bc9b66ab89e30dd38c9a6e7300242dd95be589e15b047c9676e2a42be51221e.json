{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rkgup\\\\OneDrive\\\\Desktop\\\\corementis\\\\frontend\\\\src\\\\components\\\\student\\\\classroom\\\\VideoGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VideoGrid = ({\n  localStream,\n  screenStream,\n  isScreenSharing,\n  participants,\n  videoRef // Added videoRef for engagement analysis\n}) => {\n  _s();\n  // Always create local refs, but use the provided videoRef when connecting the stream\n  const internalVideoRef = useRef(null);\n  const screenShareRef = useRef(null);\n\n  // Sample participants data if none provided\n  const defaultParticipants = [{\n    id: 1,\n    name: 'Dr. Smith',\n    role: 'Teacher',\n    isPresenting: !isScreenSharing,\n    hasCamera: true,\n    hasMic: true\n  }, {\n    id: 2,\n    name: 'John Smith',\n    role: 'Student',\n    isPresenting: false,\n    hasCamera: true,\n    hasMic: true\n  }, {\n    id: 3,\n    name: 'Emily Johnson',\n    role: 'Student',\n    isPresenting: false,\n    hasCamera: true,\n    hasMic: false\n  }, {\n    id: 4,\n    name: 'Michael Brown',\n    role: 'Student',\n    isPresenting: false,\n    hasCamera: false,\n    hasMic: true\n  }, {\n    id: 5,\n    name: 'Sarah Davis',\n    role: 'Student',\n    isPresenting: false,\n    hasCamera: true,\n    hasMic: true\n  }];\n  const displayParticipants = participants || defaultParticipants;\n\n  // Connect local video stream to video element\n  useEffect(() => {\n    if (localStream) {\n      // Connect to both the internal ref and the provided ref if available\n      if (internalVideoRef.current) {\n        internalVideoRef.current.srcObject = localStream;\n      }\n      if (videoRef && videoRef.current) {\n        videoRef.current.srcObject = localStream;\n      }\n    }\n  }, [localStream, videoRef]);\n\n  // Connect screen share stream to video element\n  useEffect(() => {\n    if (screenShareRef.current && screenStream) {\n      screenShareRef.current.srcObject = screenStream;\n    }\n  }, [screenStream]);\n\n  // Find the main presenter (either screen share or teacher)\n  const mainPresenter = isScreenSharing ? {\n    name: 'Screen Share',\n    isScreenShare: true\n  } : displayParticipants.find(p => p.isPresenting);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 bg-black rounded-lg overflow-hidden mb-4 relative\",\n      children: isScreenSharing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: screenShareRef,\n          className: \"w-full h-full object-contain\",\n          autoPlay: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-4 left-4 bg-black bg-opacity-50 px-2 py-1 rounded text-sm\",\n          children: \"Screen Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : mainPresenter ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://i.pravatar.cc/1000?img=${mainPresenter.id || 1}`,\n          alt: \"Presenter\",\n          className: \"w-full h-full object-contain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-4 left-4 bg-black bg-opacity-50 px-2 py-1 rounded text-sm\",\n          children: [mainPresenter.name, \" (Presenting)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-full flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: \"No one is presenting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-2 h-32\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative bg-gray-800 rounded overflow-hidden\",\n        children: [localStream ? /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoRef,\n          autoPlay: true,\n          muted: true,\n          playsInline: true,\n          className: \"w-full h-full object-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full h-full flex items-center justify-center bg-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-2xl font-bold\",\n            children: \"You\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute bottom-0 left-0 right-0 bg-black bg-opacity-50 px-2 py-1 text-xs flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"You\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), !(localStream !== null && localStream !== void 0 && localStream.getAudioTracks().some(track => track.enabled)) && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDD07\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 77\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), displayParticipants.filter(p => p.role !== 'Teacher' || !p.isPresenting) // Don't show teacher if they're the main presenter\n      .slice(0, 4) // Limit to 4 other participants\n      .map(participant => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative bg-gray-800 rounded overflow-hidden\",\n        children: [participant.hasCamera ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://i.pravatar.cc/150?img=${participant.id}`,\n          alt: participant.name,\n          className: \"w-full h-full object-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full h-full flex items-center justify-center bg-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-2xl font-bold\",\n            children: participant.name.charAt(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute bottom-0 left-0 right-0 bg-black bg-opacity-50 px-2 py-1 text-xs flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: participant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), !participant.hasMic && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDD07\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this)]\n      }, participant.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)), displayParticipants.length > 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative bg-gray-800 rounded overflow-hidden flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-lg font-bold\",\n          children: [\"+\", displayParticipants.length - 5, \" more\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoGrid, \"J1EZRSG3lR8kWcF7wf12kjR0cBc=\");\n_c = VideoGrid;\nexport default VideoGrid;\nvar _c;\n$RefreshReg$(_c, \"VideoGrid\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoGrid","localStream","screenStream","isScreenSharing","participants","videoRef","_s","internalVideoRef","screenShareRef","defaultParticipants","id","name","role","isPresenting","hasCamera","hasMic","displayParticipants","current","srcObject","mainPresenter","isScreenShare","find","p","className","children","ref","autoPlay","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","localVideoRef","muted","getAudioTracks","some","track","enabled","filter","slice","map","participant","charAt","length","_c","$RefreshReg$"],"sources":["C:/Users/rkgup/OneDrive/Desktop/corementis/frontend/src/components/student/classroom/VideoGrid.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst VideoGrid = ({ \n  localStream, \n  screenStream, \n  isScreenSharing, \n  participants,\n  videoRef // Added videoRef for engagement analysis\n}) => {\n  // Always create local refs, but use the provided videoRef when connecting the stream\n  const internalVideoRef = useRef(null);\n  const screenShareRef = useRef(null);\n  \n  // Sample participants data if none provided\n  const defaultParticipants = [\n    { id: 1, name: 'Dr. Smith', role: 'Teacher', isPresenting: !isScreenSharing, hasCamera: true, hasMic: true },\n    { id: 2, name: 'John Smith', role: 'Student', isPresenting: false, hasCamera: true, hasMic: true },\n    { id: 3, name: 'Emily Johnson', role: 'Student', isPresenting: false, hasCamera: true, hasMic: false },\n    { id: 4, name: 'Michael Brown', role: 'Student', isPresenting: false, hasCamera: false, hasMic: true },\n    { id: 5, name: 'Sarah Davis', role: 'Student', isPresenting: false, hasCamera: true, hasMic: true },\n  ];\n  \n  const displayParticipants = participants || defaultParticipants;\n  \n  // Connect local video stream to video element\n  useEffect(() => {\n    if (localStream) {\n      // Connect to both the internal ref and the provided ref if available\n      if (internalVideoRef.current) {\n        internalVideoRef.current.srcObject = localStream;\n      }\n      if (videoRef && videoRef.current) {\n        videoRef.current.srcObject = localStream;\n      }\n    }\n  }, [localStream, videoRef]);\n  \n  // Connect screen share stream to video element\n  useEffect(() => {\n    if (screenShareRef.current && screenStream) {\n      screenShareRef.current.srcObject = screenStream;\n    }\n  }, [screenStream]);\n  \n  // Find the main presenter (either screen share or teacher)\n  const mainPresenter = isScreenSharing \n    ? { name: 'Screen Share', isScreenShare: true }\n    : displayParticipants.find(p => p.isPresenting);\n  \n  return (\n    <div className=\"flex flex-col h-full\">\n      {/* Main presentation area */}\n      <div className=\"flex-1 bg-black rounded-lg overflow-hidden mb-4 relative\">\n        {isScreenSharing ? (\n          <>\n            <video \n              ref={screenShareRef} \n              className=\"w-full h-full object-contain\" \n              autoPlay \n              playsInline\n            />\n            <div className=\"absolute top-4 left-4 bg-black bg-opacity-50 px-2 py-1 rounded text-sm\">\n              Screen Share\n            </div>\n          </>\n        ) : mainPresenter ? (\n          <>\n            <img \n              src={`https://i.pravatar.cc/1000?img=${mainPresenter.id || 1}`} \n              alt=\"Presenter\" \n              className=\"w-full h-full object-contain\"\n            />\n            <div className=\"absolute top-4 left-4 bg-black bg-opacity-50 px-2 py-1 rounded text-sm\">\n              {mainPresenter.name} (Presenting)\n            </div>\n          </>\n        ) : (\n          <div className=\"w-full h-full flex items-center justify-center\">\n            <p className=\"text-gray-400\">No one is presenting</p>\n          </div>\n        )}\n      </div>\n      \n      {/* Participants video grid */}\n      <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-2 h-32\">\n        {/* Local video */}\n        <div className=\"relative bg-gray-800 rounded overflow-hidden\">\n          {localStream ? (\n            <video\n              ref={localVideoRef}\n              autoPlay\n              muted\n              playsInline\n              className=\"w-full h-full object-cover\"\n            />\n          ) : (\n            <div className=\"w-full h-full flex items-center justify-center bg-gray-700\">\n              <span className=\"text-2xl font-bold\">You</span>\n            </div>\n          )}\n          <div className=\"absolute bottom-0 left-0 right-0 bg-black bg-opacity-50 px-2 py-1 text-xs flex justify-between items-center\">\n            <span>You</span>\n            {!localStream?.getAudioTracks().some(track => track.enabled) && <span>🔇</span>}\n          </div>\n        </div>\n        \n        {/* Other participants */}\n        {displayParticipants\n          .filter(p => p.role !== 'Teacher' || !p.isPresenting) // Don't show teacher if they're the main presenter\n          .slice(0, 4) // Limit to 4 other participants\n          .map((participant) => (\n            <div key={participant.id} className=\"relative bg-gray-800 rounded overflow-hidden\">\n              {participant.hasCamera ? (\n                <img \n                  src={`https://i.pravatar.cc/150?img=${participant.id}`}\n                  alt={participant.name}\n                  className=\"w-full h-full object-cover\"\n                />\n              ) : (\n                <div className=\"w-full h-full flex items-center justify-center bg-gray-700\">\n                  <span className=\"text-2xl font-bold\">{participant.name.charAt(0)}</span>\n                </div>\n              )}\n              <div className=\"absolute bottom-0 left-0 right-0 bg-black bg-opacity-50 px-2 py-1 text-xs flex justify-between items-center\">\n                <span>{participant.name}</span>\n                {!participant.hasMic && <span>🔇</span>}\n              </div>\n            </div>\n          ))}\n          \n        {/* Show how many more participants there are if not all are displayed */}\n        {displayParticipants.length > 5 && (\n          <div className=\"relative bg-gray-800 rounded overflow-hidden flex items-center justify-center\">\n            <span className=\"text-lg font-bold\">+{displayParticipants.length - 5} more</span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default VideoGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}