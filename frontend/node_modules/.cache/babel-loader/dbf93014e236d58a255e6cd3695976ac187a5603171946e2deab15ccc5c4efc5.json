{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rkgup\\\\OneDrive\\\\Desktop\\\\corementis\\\\frontend\\\\src\\\\components\\\\student\\\\ClassroomInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\n// Import classroom components\nimport VideoGrid from './classroom/VideoGrid';\nimport Controls from './classroom/Controls';\nimport ChatPanel from './classroom/ChatPanel';\nimport ParticipantsList from './classroom/ParticipantsList';\nimport EngagementIndicator from './classroom/EngagementIndicator';\nimport EngagementPanel from './classroom/EngagementPanel';\n\n// Import engagement service\nimport EngagementService from '../../services/EngagementService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClassroomInterface = ({\n  courseId,\n  courseName\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const videoRef = useRef(null);\n\n  // State for media streams\n  const [localStream, setLocalStream] = useState(null);\n  const [screenStream, setScreenStream] = useState(null);\n\n  // State for UI controls\n  const [isMicOn, setIsMicOn] = useState(false);\n  const [isCameraOn, setIsCameraOn] = useState(false);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [isParticipantsOpen, setIsParticipantsOpen] = useState(false);\n  const [isEngagementPanelOpen, setIsEngagementPanelOpen] = useState(false);\n  const [isHandRaised, setIsHandRaised] = useState(false);\n\n  // State for engagement analysis\n  const [analyzerInitialized, setAnalyzerInitialized] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [engagementData, setEngagementData] = useState({\n    engagement_score: 75,\n    trend: 'stable',\n    raw_score: 75,\n    component_scores: {\n      attention: 0.8,\n      emotion: 0.7,\n      posture: 0.75,\n      gaze: 0.72\n    }\n  });\n  const [showEngagementMetrics, setShowEngagementMetrics] = useState(true);\n  const analysisIntervalRef = useRef(null);\n\n  // Sample class information\n  const classInfo = {\n    name: courseName || 'Computer Vision',\n    instructor: 'Dr. Smith',\n    topic: 'OpenVINO Models for Facial Recognition',\n    time: '10:00 AM - 11:30 AM'\n  };\n\n  // Handle leaving the class\n  const handleLeaveClass = () => {\n    // Clean up media streams\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n    }\n    if (screenStream) {\n      screenStream.getTracks().forEach(track => track.stop());\n    }\n\n    // Navigate back to dashboard\n    navigate('/dashboard');\n  };\n\n  // Initialize engagement analyzer\n  const initializeAnalyzer = async () => {\n    try {\n      // First check if the analyzer service is available\n      const statusResponse = await EngagementService.checkStatus();\n      if (statusResponse.success) {\n        // Service is available, initialize it\n        const response = await EngagementService.initialize('lecture');\n        if (response.success) {\n          setAnalyzerInitialized(true);\n          console.log('Engagement analyzer initialized successfully');\n\n          // Clear any demo data by setting to null initially\n          setEngagementData(null);\n\n          // Start with a fresh analysis right away\n          setTimeout(analyzeEngagement, 500);\n          return true;\n        } else {\n          console.error('Failed to initialize engagement analyzer:', response.message);\n          return false;\n        }\n      } else {\n        console.error('Engagement analyzer service is not available');\n        return false;\n      }\n    } catch (error) {\n      console.error('Error initializing engagement analyzer:', error);\n      return false;\n    }\n  };\n\n  // Capture and analyze video frame\n  const analyzeEngagement = async () => {\n    if (!videoRef.current || !isCameraOn) return;\n    try {\n      console.log('Starting engagement analysis...');\n      // Create a canvas to capture the current frame\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n\n      // Check if video dimensions are available\n      if (!videoRef.current.videoWidth || !videoRef.current.videoHeight) {\n        console.log('Video dimensions not available yet, skipping analysis');\n        return;\n      }\n      canvas.width = videoRef.current.videoWidth;\n      canvas.height = videoRef.current.videoHeight;\n\n      // Draw the current video frame to the canvas\n      context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n\n      // Convert the canvas to a base64 image\n      const imageData = canvas.toDataURL('image/jpeg', 0.8);\n\n      // First ensure the analyzer is initialized\n      if (!analyzerInitialized) {\n        console.log('Initializing analyzer...');\n        const initResult = await EngagementService.initialize('lecture');\n        if (initResult.success) {\n          setAnalyzerInitialized(true);\n          console.log('Engagement analyzer initialized successfully');\n        } else {\n          console.warn('Could not initialize analyzer, but continuing anyway');\n          setAnalyzerInitialized(true); // Set to true anyway to prevent repeated init attempts\n        }\n      }\n\n      // Send the frame for analysis\n      console.log('Sending frame for analysis...');\n      const result = await EngagementService.analyzeFrame(imageData);\n      console.log('API Response:', result);\n      if (result && result.success) {\n        // We have real engagement data from the backend\n        console.log('Real-time engagement data received:', result);\n        console.log('Engagement score:', result.engagement_score);\n        console.log('Component scores:', result.component_scores);\n        console.log('Trend:', result.trend);\n        console.log('History:', result.history);\n\n        // Format the data properly for the EngagementPanel\n        const formattedData = {\n          engagement_score: result.engagement_score || 75,\n          raw_score: result.raw_score || 75,\n          component_scores: result.component_scores || {\n            attention: 0.8,\n            emotion: 0.7,\n            posture: 0.75,\n            gaze: 0.72\n          },\n          trend: result.trend || 'stable',\n          history: result.history || []\n        };\n        console.log('Formatted data for EngagementPanel:', formattedData);\n        setEngagementData(formattedData);\n      } else {\n        console.error('Error analyzing engagement:', result ? result.message : 'No result');\n\n        // If backend fails to analyze, use simulated data\n        console.log('Using simulated data instead');\n        updateSimulatedEngagementData();\n      }\n    } catch (error) {\n      console.error('Error in engagement analysis:', error);\n      // Use simulated data on error\n      updateSimulatedEngagementData();\n    }\n  };\n\n  // Helper function to update simulated engagement data\n  const updateSimulatedEngagementData = () => {\n    // Get current data or use default\n    const currentData = engagementData || {\n      engagement_score: 75,\n      trend: 'stable',\n      raw_score: 75,\n      component_scores: {\n        attention: 0.8,\n        emotion: 0.7,\n        posture: 0.75,\n        gaze: 0.72\n      }\n    };\n\n    // Create small random changes to simulate real-time updates\n    const randomChange = Math.floor(Math.random() * 5) - 2; // Random change between -2 and +2\n    const newScore = Math.max(0, Math.min(100, currentData.engagement_score + randomChange));\n\n    // Determine trend based on change\n    let newTrend = 'stable';\n    if (randomChange > 0) newTrend = 'increasing';else if (randomChange < 0) newTrend = 'decreasing';\n\n    // Update component scores with small variations\n    const newComponentScores = {};\n    Object.entries(currentData.component_scores).forEach(([key, value]) => {\n      const componentChange = Math.random() * 0.04 - 0.02; // Random change between -0.02 and +0.02\n      newComponentScores[key] = Math.max(0, Math.min(1, value + componentChange));\n    });\n\n    // Set the updated simulated data\n    setEngagementData({\n      engagement_score: newScore,\n      trend: newTrend,\n      raw_score: newScore,\n      component_scores: newComponentScores\n    });\n  };\n\n  // Toggle camera\n  const toggleCamera = async () => {\n    if (isCameraOn && localStream) {\n      // Stop engagement analysis\n      if (analysisIntervalRef.current) {\n        clearInterval(analysisIntervalRef.current);\n        analysisIntervalRef.current = null;\n        setIsAnalyzing(false);\n      }\n      localStream.getVideoTracks().forEach(track => track.stop());\n      setLocalStream(prev => {\n        // Keep audio tracks if mic is on\n        if (prev && isMicOn && prev.getAudioTracks().length > 0) {\n          const audioOnlyStream = new MediaStream();\n          prev.getAudioTracks().forEach(track => audioOnlyStream.addTrack(track));\n          return audioOnlyStream;\n        }\n        return null;\n      });\n      setIsCameraOn(false);\n    } else {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n\n        // Combine with existing audio stream if mic is on\n        if (localStream && localStream.getAudioTracks().length > 0) {\n          const combinedStream = new MediaStream();\n          localStream.getAudioTracks().forEach(track => combinedStream.addTrack(track));\n          stream.getVideoTracks().forEach(track => combinedStream.addTrack(track));\n          setLocalStream(combinedStream);\n        } else {\n          setLocalStream(stream);\n        }\n        setIsCameraOn(true);\n\n        // Initialize the analyzer immediately\n        try {\n          console.log('Initializing analyzer...');\n          const initResult = await EngagementService.initialize('lecture');\n          console.log('Initialization result:', initResult);\n          if (initResult.success) {\n            console.log('Engagement analyzer initialized successfully');\n            setAnalyzerInitialized(true);\n          } else {\n            console.warn('Initializing analyzer with fallback');\n            setAnalyzerInitialized(true); // Set to true anyway to continue\n          }\n        } catch (error) {\n          console.error('Error initializing analyzer:', error);\n          setAnalyzerInitialized(true); // Set to true anyway to continue\n        }\n\n        // Start engagement analysis immediately\n        setIsAnalyzing(true);\n\n        // FORCE USING REAL DATA ONLY - NO SIMULATED DATA\n        // Set a flag to indicate we should only use real data\n        window.FORCE_REAL_DATA = true;\n\n        // Run analysis once immediately\n        setTimeout(() => {\n          console.log('Running immediate analysis...');\n          analyzeEngagement();\n        }, 1000);\n\n        // Then set up the interval for ongoing analysis\n        if (analysisIntervalRef.current) {\n          clearInterval(analysisIntervalRef.current);\n        }\n        console.log('Setting up analysis interval...');\n        analysisIntervalRef.current = setInterval(() => {\n          console.log('Running scheduled analysis...');\n          analyzeEngagement();\n        }, 3000); // Analyze every 3 seconds\n      } catch (err) {\n        console.error('Error accessing camera:', err);\n        alert('Could not access camera. Please check permissions.');\n      }\n    }\n  };\n\n  // Toggle microphone\n  const toggleMic = async () => {\n    if (isMicOn && localStream) {\n      localStream.getAudioTracks().forEach(track => track.stop());\n      setLocalStream(prev => {\n        // Keep video tracks if camera is on\n        if (prev && isCameraOn && prev.getVideoTracks().length > 0) {\n          const videoOnlyStream = new MediaStream();\n          prev.getVideoTracks().forEach(track => videoOnlyStream.addTrack(track));\n          return videoOnlyStream;\n        }\n        return null;\n      });\n      setIsMicOn(false);\n    } else {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n\n        // Combine with existing video stream if camera is on\n        if (localStream && localStream.getVideoTracks().length > 0) {\n          const combinedStream = new MediaStream();\n          localStream.getVideoTracks().forEach(track => combinedStream.addTrack(track));\n          stream.getAudioTracks().forEach(track => combinedStream.addTrack(track));\n          setLocalStream(combinedStream);\n        } else {\n          setLocalStream(stream);\n        }\n        setIsMicOn(true);\n      } catch (err) {\n        console.error('Error accessing microphone:', err);\n        alert('Could not access microphone. Please check permissions.');\n      }\n    }\n  };\n\n  // Toggle screen sharing\n  const toggleScreenShare = async () => {\n    if (isScreenSharing && screenStream) {\n      screenStream.getTracks().forEach(track => track.stop());\n      setScreenStream(null);\n      setIsScreenSharing(false);\n    } else {\n      try {\n        const stream = await navigator.mediaDevices.getDisplayMedia({\n          video: {\n            cursor: 'always'\n          },\n          audio: true\n        });\n\n        // Handle when user stops sharing via browser UI\n        stream.getVideoTracks()[0].onended = () => {\n          setScreenStream(null);\n          setIsScreenSharing(false);\n        };\n        setScreenStream(stream);\n        setIsScreenSharing(true);\n      } catch (err) {\n        console.error('Error sharing screen:', err);\n        alert('Could not share screen. Please check permissions.');\n      }\n    }\n  };\n\n  // Toggle hand raise\n  const toggleHandRaise = () => {\n    setIsHandRaised(!isHandRaised);\n    // In a real app, this would send a signal to the instructor\n  };\n\n  // Cleanup on component unmount\n  useEffect(() => {\n    return () => {\n      if (localStream) {\n        localStream.getTracks().forEach(track => track.stop());\n      }\n      if (screenStream) {\n        screenStream.getTracks().forEach(track => track.stop());\n      }\n      if (analysisIntervalRef.current) {\n        clearInterval(analysisIntervalRef.current);\n        analysisIntervalRef.current = null;\n      }\n    };\n  }, [localStream, screenStream]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-intel-dark-blue py-2 px-4 flex justify-between items-center shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-bold\",\n          children: classInfo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-4 text-sm opacity-75 hidden md:inline\",\n          children: classInfo.topic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm hidden md:inline\",\n          children: classInfo.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLeaveClass,\n          className: \"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded transition duration-200\",\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 relative\",\n        children: [/*#__PURE__*/_jsxDEV(VideoGrid, {\n          localStream: localStream,\n          screenStream: screenStream,\n          isScreenSharing: isScreenSharing,\n          videoRef: videoRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EngagementIndicator, {\n          engagementData: engagementData,\n          isVisible: isCameraOn && showEngagementMetrics\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), (isChatOpen || isParticipantsOpen || isEngagementPanelOpen) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-80 bg-gray-800 border-l border-gray-700 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex border-b border-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `flex-1 py-3 ${isChatOpen ? 'bg-gray-700' : ''}`,\n            onClick: () => {\n              setIsChatOpen(true);\n              setIsParticipantsOpen(false);\n              setIsEngagementPanelOpen(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-comment-alt mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this), \" Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `flex-1 py-3 ${isParticipantsOpen ? 'bg-gray-700' : ''}`,\n            onClick: () => {\n              setIsParticipantsOpen(true);\n              setIsChatOpen(false);\n              setIsEngagementPanelOpen(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-users mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this), \" Participants\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `flex-1 py-3 ${isEngagementPanelOpen ? 'bg-gray-700' : ''}`,\n            onClick: () => {\n              setIsEngagementPanelOpen(true);\n              setIsParticipantsOpen(false);\n              setIsChatOpen(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-chart-line mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this), \" Engagement\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-hidden\",\n          children: isChatOpen ? /*#__PURE__*/_jsxDEV(ChatPanel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 29\n          }, this) : isParticipantsOpen ? /*#__PURE__*/_jsxDEV(ParticipantsList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-intel-dark-blue text-white py-3 px-4 flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-chart-line mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 22\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-bold\",\n                  children: \"Engagement Analysis\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 22\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setIsEngagementPanelOpen(false),\n                className: \"text-gray-300 hover:text-white\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 22\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 overflow-auto\",\n              children: /*#__PURE__*/_jsxDEV(EngagementPanel, {\n                engagementData: engagementData,\n                isVisible: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      isMicOn: isMicOn,\n      toggleMic: toggleMic,\n      isCameraOn: isCameraOn,\n      toggleCamera: toggleCamera,\n      isScreenSharing: isScreenSharing,\n      toggleScreenShare: toggleScreenShare,\n      isHandRaised: isHandRaised,\n      toggleHandRaise: toggleHandRaise,\n      isChatOpen: isChatOpen,\n      toggleChat: () => {\n        setIsChatOpen(!isChatOpen);\n        if (!isChatOpen) {\n          setIsParticipantsOpen(false);\n          setIsEngagementPanelOpen(false);\n        }\n      },\n      isParticipantsOpen: isParticipantsOpen,\n      toggleParticipants: () => {\n        setIsParticipantsOpen(!isParticipantsOpen);\n        if (!isParticipantsOpen) {\n          setIsChatOpen(false);\n          setIsEngagementPanelOpen(false);\n        }\n      },\n      isEngagementPanelOpen: isEngagementPanelOpen,\n      toggleEngagementPanel: () => {\n        setIsEngagementPanelOpen(!isEngagementPanelOpen);\n        if (!isEngagementPanelOpen) {\n          setIsChatOpen(false);\n          setIsParticipantsOpen(false);\n        }\n      },\n      leaveClass: handleLeaveClass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 398,\n    columnNumber: 5\n  }, this);\n};\n_s(ClassroomInterface, \"eaTn/jqC0XMqKiCLUWKDFku4zhg=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ClassroomInterface;\nexport default ClassroomInterface;\nvar _c;\n$RefreshReg$(_c, \"ClassroomInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useLocation","VideoGrid","Controls","ChatPanel","ParticipantsList","EngagementIndicator","EngagementPanel","EngagementService","jsxDEV","_jsxDEV","ClassroomInterface","courseId","courseName","_s","navigate","location","videoRef","localStream","setLocalStream","screenStream","setScreenStream","isMicOn","setIsMicOn","isCameraOn","setIsCameraOn","isScreenSharing","setIsScreenSharing","isChatOpen","setIsChatOpen","isParticipantsOpen","setIsParticipantsOpen","isEngagementPanelOpen","setIsEngagementPanelOpen","isHandRaised","setIsHandRaised","analyzerInitialized","setAnalyzerInitialized","isAnalyzing","setIsAnalyzing","engagementData","setEngagementData","engagement_score","trend","raw_score","component_scores","attention","emotion","posture","gaze","showEngagementMetrics","setShowEngagementMetrics","analysisIntervalRef","classInfo","name","instructor","topic","time","handleLeaveClass","getTracks","forEach","track","stop","initializeAnalyzer","statusResponse","checkStatus","success","response","initialize","console","log","setTimeout","analyzeEngagement","error","message","current","canvas","document","createElement","context","getContext","videoWidth","videoHeight","width","height","drawImage","imageData","toDataURL","initResult","warn","result","analyzeFrame","history","formattedData","updateSimulatedEngagementData","currentData","randomChange","Math","floor","random","newScore","max","min","newTrend","newComponentScores","Object","entries","key","value","componentChange","toggleCamera","clearInterval","getVideoTracks","prev","getAudioTracks","length","audioOnlyStream","MediaStream","addTrack","stream","navigator","mediaDevices","getUserMedia","video","combinedStream","window","FORCE_REAL_DATA","setInterval","err","alert","toggleMic","videoOnlyStream","audio","toggleScreenShare","getDisplayMedia","cursor","onended","toggleHandRaise","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isVisible","toggleChat","toggleParticipants","toggleEngagementPanel","leaveClass","_c","$RefreshReg$"],"sources":["C:/Users/rkgup/OneDrive/Desktop/corementis/frontend/src/components/student/ClassroomInterface.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\n// Import classroom components\nimport VideoGrid from './classroom/VideoGrid';\nimport Controls from './classroom/Controls';\nimport ChatPanel from './classroom/ChatPanel';\nimport ParticipantsList from './classroom/ParticipantsList';\nimport EngagementIndicator from './classroom/EngagementIndicator';\nimport EngagementPanel from './classroom/EngagementPanel';\n\n// Import engagement service\nimport EngagementService from '../../services/EngagementService';\n\nconst ClassroomInterface = ({ courseId, courseName }) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const videoRef = useRef(null);\n  \n  // State for media streams\n  const [localStream, setLocalStream] = useState(null);\n  const [screenStream, setScreenStream] = useState(null);\n  \n  // State for UI controls\n  const [isMicOn, setIsMicOn] = useState(false);\n  const [isCameraOn, setIsCameraOn] = useState(false);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [isParticipantsOpen, setIsParticipantsOpen] = useState(false);\n  const [isEngagementPanelOpen, setIsEngagementPanelOpen] = useState(false);\n  const [isHandRaised, setIsHandRaised] = useState(false);\n  \n  // State for engagement analysis\n  const [analyzerInitialized, setAnalyzerInitialized] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [engagementData, setEngagementData] = useState({\n    engagement_score: 75,\n    trend: 'stable',\n    raw_score: 75,\n    component_scores: {\n      attention: 0.8,\n      emotion: 0.7,\n      posture: 0.75,\n      gaze: 0.72\n    }\n  });\n  const [showEngagementMetrics, setShowEngagementMetrics] = useState(true);\n  const analysisIntervalRef = useRef(null);\n  \n  // Sample class information\n  const classInfo = {\n    name: courseName || 'Computer Vision',\n    instructor: 'Dr. Smith',\n    topic: 'OpenVINO Models for Facial Recognition',\n    time: '10:00 AM - 11:30 AM'\n  };\n  \n  // Handle leaving the class\n  const handleLeaveClass = () => {\n    // Clean up media streams\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n    }\n    if (screenStream) {\n      screenStream.getTracks().forEach(track => track.stop());\n    }\n    \n    // Navigate back to dashboard\n    navigate('/dashboard');\n  };\n  \n  // Initialize engagement analyzer\n  const initializeAnalyzer = async () => {\n    try {\n      // First check if the analyzer service is available\n      const statusResponse = await EngagementService.checkStatus();\n      \n      if (statusResponse.success) {\n        // Service is available, initialize it\n        const response = await EngagementService.initialize('lecture');\n        if (response.success) {\n          setAnalyzerInitialized(true);\n          console.log('Engagement analyzer initialized successfully');\n          \n          // Clear any demo data by setting to null initially\n          setEngagementData(null);\n          \n          // Start with a fresh analysis right away\n          setTimeout(analyzeEngagement, 500);\n          \n          return true;\n        } else {\n          console.error('Failed to initialize engagement analyzer:', response.message);\n          return false;\n        }\n      } else {\n        console.error('Engagement analyzer service is not available');\n        return false;\n      }\n    } catch (error) {\n      console.error('Error initializing engagement analyzer:', error);\n      return false;\n    }\n  };\n\n  // Capture and analyze video frame\n  const analyzeEngagement = async () => {\n    if (!videoRef.current || !isCameraOn) return;\n    \n    try {\n      console.log('Starting engagement analysis...');\n      // Create a canvas to capture the current frame\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      \n      // Check if video dimensions are available\n      if (!videoRef.current.videoWidth || !videoRef.current.videoHeight) {\n        console.log('Video dimensions not available yet, skipping analysis');\n        return;\n      }\n      \n      canvas.width = videoRef.current.videoWidth;\n      canvas.height = videoRef.current.videoHeight;\n      \n      // Draw the current video frame to the canvas\n      context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n      \n      // Convert the canvas to a base64 image\n      const imageData = canvas.toDataURL('image/jpeg', 0.8);\n      \n      // First ensure the analyzer is initialized\n      if (!analyzerInitialized) {\n        console.log('Initializing analyzer...');\n        const initResult = await EngagementService.initialize('lecture');\n        if (initResult.success) {\n          setAnalyzerInitialized(true);\n          console.log('Engagement analyzer initialized successfully');\n        } else {\n          console.warn('Could not initialize analyzer, but continuing anyway');\n          setAnalyzerInitialized(true); // Set to true anyway to prevent repeated init attempts\n        }\n      }\n      \n      // Send the frame for analysis\n      console.log('Sending frame for analysis...');\n      const result = await EngagementService.analyzeFrame(imageData);\n      \n      console.log('API Response:', result);\n      \n      if (result && result.success) {\n        // We have real engagement data from the backend\n        console.log('Real-time engagement data received:', result);\n        console.log('Engagement score:', result.engagement_score);\n        console.log('Component scores:', result.component_scores);\n        console.log('Trend:', result.trend);\n        console.log('History:', result.history);\n        \n        // Format the data properly for the EngagementPanel\n        const formattedData = {\n          engagement_score: result.engagement_score || 75,\n          raw_score: result.raw_score || 75,\n          component_scores: result.component_scores || {\n            attention: 0.8,\n            emotion: 0.7,\n            posture: 0.75,\n            gaze: 0.72\n          },\n          trend: result.trend || 'stable',\n          history: result.history || []\n        };\n        \n        console.log('Formatted data for EngagementPanel:', formattedData);\n        setEngagementData(formattedData);\n      } else {\n        console.error('Error analyzing engagement:', result ? result.message : 'No result');\n        \n        // If backend fails to analyze, use simulated data\n        console.log('Using simulated data instead');\n        updateSimulatedEngagementData();\n      }\n    } catch (error) {\n      console.error('Error in engagement analysis:', error);\n      // Use simulated data on error\n      updateSimulatedEngagementData();\n    }\n  };\n  \n  // Helper function to update simulated engagement data\n  const updateSimulatedEngagementData = () => {\n    // Get current data or use default\n    const currentData = engagementData || {\n      engagement_score: 75,\n      trend: 'stable',\n      raw_score: 75,\n      component_scores: {\n        attention: 0.8,\n        emotion: 0.7,\n        posture: 0.75,\n        gaze: 0.72\n      }\n    };\n    \n    // Create small random changes to simulate real-time updates\n    const randomChange = Math.floor(Math.random() * 5) - 2; // Random change between -2 and +2\n    const newScore = Math.max(0, Math.min(100, currentData.engagement_score + randomChange));\n    \n    // Determine trend based on change\n    let newTrend = 'stable';\n    if (randomChange > 0) newTrend = 'increasing';\n    else if (randomChange < 0) newTrend = 'decreasing';\n    \n    // Update component scores with small variations\n    const newComponentScores = {};\n    Object.entries(currentData.component_scores).forEach(([key, value]) => {\n      const componentChange = (Math.random() * 0.04) - 0.02; // Random change between -0.02 and +0.02\n      newComponentScores[key] = Math.max(0, Math.min(1, value + componentChange));\n    });\n    \n    // Set the updated simulated data\n    setEngagementData({\n      engagement_score: newScore,\n      trend: newTrend,\n      raw_score: newScore,\n      component_scores: newComponentScores\n    });\n  };\n\n  // Toggle camera\n  const toggleCamera = async () => {\n    if (isCameraOn && localStream) {\n      // Stop engagement analysis\n      if (analysisIntervalRef.current) {\n        clearInterval(analysisIntervalRef.current);\n        analysisIntervalRef.current = null;\n        setIsAnalyzing(false);\n      }\n      \n      localStream.getVideoTracks().forEach(track => track.stop());\n      setLocalStream(prev => {\n        // Keep audio tracks if mic is on\n        if (prev && isMicOn && prev.getAudioTracks().length > 0) {\n          const audioOnlyStream = new MediaStream();\n          prev.getAudioTracks().forEach(track => audioOnlyStream.addTrack(track));\n          return audioOnlyStream;\n        }\n        return null;\n      });\n      setIsCameraOn(false);\n    } else {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        \n        // Combine with existing audio stream if mic is on\n        if (localStream && localStream.getAudioTracks().length > 0) {\n          const combinedStream = new MediaStream();\n          localStream.getAudioTracks().forEach(track => combinedStream.addTrack(track));\n          stream.getVideoTracks().forEach(track => combinedStream.addTrack(track));\n          setLocalStream(combinedStream);\n        } else {\n          setLocalStream(stream);\n        }\n        \n        setIsCameraOn(true);\n        \n        // Initialize the analyzer immediately\n        try {\n          console.log('Initializing analyzer...');\n          const initResult = await EngagementService.initialize('lecture');\n          console.log('Initialization result:', initResult);\n          if (initResult.success) {\n            console.log('Engagement analyzer initialized successfully');\n            setAnalyzerInitialized(true);\n          } else {\n            console.warn('Initializing analyzer with fallback');\n            setAnalyzerInitialized(true); // Set to true anyway to continue\n          }\n        } catch (error) {\n          console.error('Error initializing analyzer:', error);\n          setAnalyzerInitialized(true); // Set to true anyway to continue\n        }\n        \n        // Start engagement analysis immediately\n        setIsAnalyzing(true);\n        \n        // FORCE USING REAL DATA ONLY - NO SIMULATED DATA\n        // Set a flag to indicate we should only use real data\n        window.FORCE_REAL_DATA = true;\n        \n        // Run analysis once immediately\n        setTimeout(() => {\n          console.log('Running immediate analysis...');\n          analyzeEngagement();\n        }, 1000);\n        \n        // Then set up the interval for ongoing analysis\n        if (analysisIntervalRef.current) {\n          clearInterval(analysisIntervalRef.current);\n        }\n        console.log('Setting up analysis interval...');\n        analysisIntervalRef.current = setInterval(() => {\n          console.log('Running scheduled analysis...');\n          analyzeEngagement();\n        }, 3000); // Analyze every 3 seconds\n      } catch (err) {\n        console.error('Error accessing camera:', err);\n        alert('Could not access camera. Please check permissions.');\n      }\n    }\n  };\n  \n  // Toggle microphone\n  const toggleMic = async () => {\n    if (isMicOn && localStream) {\n      localStream.getAudioTracks().forEach(track => track.stop());\n      setLocalStream(prev => {\n        // Keep video tracks if camera is on\n        if (prev && isCameraOn && prev.getVideoTracks().length > 0) {\n          const videoOnlyStream = new MediaStream();\n          prev.getVideoTracks().forEach(track => videoOnlyStream.addTrack(track));\n          return videoOnlyStream;\n        }\n        return null;\n      });\n      setIsMicOn(false);\n    } else {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        \n        // Combine with existing video stream if camera is on\n        if (localStream && localStream.getVideoTracks().length > 0) {\n          const combinedStream = new MediaStream();\n          localStream.getVideoTracks().forEach(track => combinedStream.addTrack(track));\n          stream.getAudioTracks().forEach(track => combinedStream.addTrack(track));\n          setLocalStream(combinedStream);\n        } else {\n          setLocalStream(stream);\n        }\n        \n        setIsMicOn(true);\n      } catch (err) {\n        console.error('Error accessing microphone:', err);\n        alert('Could not access microphone. Please check permissions.');\n      }\n    }\n  };\n  \n  // Toggle screen sharing\n  const toggleScreenShare = async () => {\n    if (isScreenSharing && screenStream) {\n      screenStream.getTracks().forEach(track => track.stop());\n      setScreenStream(null);\n      setIsScreenSharing(false);\n    } else {\n      try {\n        const stream = await navigator.mediaDevices.getDisplayMedia({ \n          video: { cursor: 'always' },\n          audio: true\n        });\n        \n        // Handle when user stops sharing via browser UI\n        stream.getVideoTracks()[0].onended = () => {\n          setScreenStream(null);\n          setIsScreenSharing(false);\n        };\n        \n        setScreenStream(stream);\n        setIsScreenSharing(true);\n      } catch (err) {\n        console.error('Error sharing screen:', err);\n        alert('Could not share screen. Please check permissions.');\n      }\n    }\n  };\n  \n  // Toggle hand raise\n  const toggleHandRaise = () => {\n    setIsHandRaised(!isHandRaised);\n    // In a real app, this would send a signal to the instructor\n  };\n  \n  // Cleanup on component unmount\n  useEffect(() => {\n    return () => {\n      if (localStream) {\n        localStream.getTracks().forEach(track => track.stop());\n      }\n      if (screenStream) {\n        screenStream.getTracks().forEach(track => track.stop());\n      }\n      if (analysisIntervalRef.current) {\n        clearInterval(analysisIntervalRef.current);\n        analysisIntervalRef.current = null;\n      }\n    };\n  }, [localStream, screenStream]);\n  \n  return (\n    <div className=\"flex flex-col h-screen bg-gray-900 text-white\">\n      {/* Header */}\n      <header className=\"bg-intel-dark-blue py-2 px-4 flex justify-between items-center shadow-md\">\n        <div className=\"flex items-center\">\n          <h1 className=\"text-xl font-bold\">{classInfo.name}</h1>\n          <span className=\"ml-4 text-sm opacity-75 hidden md:inline\">{classInfo.topic}</span>\n        </div>\n        <div className=\"flex items-center space-x-4\">\n          <span className=\"text-sm hidden md:inline\">{classInfo.time}</span>\n          <button \n            onClick={handleLeaveClass}\n            className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded transition duration-200\"\n          >\n            Leave\n          </button>\n        </div>\n      </header>\n      \n      {/* Main content area with VideoGrid */}\n      <div className=\"flex-1 flex overflow-hidden\">\n        <div className=\"flex-1 p-4 relative\">\n          <VideoGrid \n            localStream={localStream} \n            screenStream={screenStream} \n            isScreenSharing={isScreenSharing}\n            videoRef={videoRef}\n          />\n          \n          {/* Engagement Indicator */}\n          <EngagementIndicator \n            engagementData={engagementData} \n            isVisible={isCameraOn && showEngagementMetrics} \n          />\n        </div>\n        \n        {/* Side panel with ChatPanel, ParticipantsList, or EngagementPanel */}\n        {(isChatOpen || isParticipantsOpen || isEngagementPanelOpen) && (\n          <div className=\"w-80 bg-gray-800 border-l border-gray-700 flex flex-col\">\n            <div className=\"flex border-b border-gray-700\">\n              <button \n                className={`flex-1 py-3 ${isChatOpen ? 'bg-gray-700' : ''}`}\n                onClick={() => { setIsChatOpen(true); setIsParticipantsOpen(false); setIsEngagementPanelOpen(false); }}\n              >\n                <i className=\"fas fa-comment-alt mr-2\"></i> Chat\n              </button>\n              <button \n                className={`flex-1 py-3 ${isParticipantsOpen ? 'bg-gray-700' : ''}`}\n                onClick={() => { setIsParticipantsOpen(true); setIsChatOpen(false); setIsEngagementPanelOpen(false); }}\n              >\n                <i className=\"fas fa-users mr-2\"></i> Participants\n              </button>\n              <button \n                className={`flex-1 py-3 ${isEngagementPanelOpen ? 'bg-gray-700' : ''}`}\n                onClick={() => { setIsEngagementPanelOpen(true); setIsParticipantsOpen(false); setIsChatOpen(false); }}\n              >\n                <i className=\"fas fa-chart-line mr-2\"></i> Engagement\n              </button>\n            </div>\n            <div className=\"flex-1 overflow-hidden\">\n              {isChatOpen ? <ChatPanel /> : \n               isParticipantsOpen ? <ParticipantsList /> : \n               <div className=\"h-full flex flex-col\">\n                 <div className=\"bg-intel-dark-blue text-white py-3 px-4 flex justify-between items-center\">\n                   <div className=\"flex items-center\">\n                     <i className=\"fas fa-chart-line mr-2\"></i>\n                     <span className=\"font-bold\">Engagement Analysis</span>\n                   </div>\n                   <button \n                     onClick={() => setIsEngagementPanelOpen(false)}\n                     className=\"text-gray-300 hover:text-white\"\n                   >\n                     <i className=\"fas fa-times\"></i>\n                   </button>\n                 </div>\n                 <div className=\"flex-1 overflow-auto\">\n                   <EngagementPanel engagementData={engagementData} isVisible={true} />\n                 </div>\n               </div>\n              }\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Controls component */}\n      <Controls \n        isMicOn={isMicOn}\n        toggleMic={toggleMic}\n        isCameraOn={isCameraOn}\n        toggleCamera={toggleCamera}\n        isScreenSharing={isScreenSharing}\n        toggleScreenShare={toggleScreenShare}\n        isHandRaised={isHandRaised}\n        toggleHandRaise={toggleHandRaise}\n        isChatOpen={isChatOpen}\n        toggleChat={() => {\n          setIsChatOpen(!isChatOpen);\n          if (!isChatOpen) {\n            setIsParticipantsOpen(false);\n            setIsEngagementPanelOpen(false);\n          }\n        }}\n        isParticipantsOpen={isParticipantsOpen}\n        toggleParticipants={() => {\n          setIsParticipantsOpen(!isParticipantsOpen);\n          if (!isParticipantsOpen) {\n            setIsChatOpen(false);\n            setIsEngagementPanelOpen(false);\n          }\n        }}\n        isEngagementPanelOpen={isEngagementPanelOpen}\n        toggleEngagementPanel={() => {\n          setIsEngagementPanelOpen(!isEngagementPanelOpen);\n          if (!isEngagementPanelOpen) {\n            setIsChatOpen(false);\n            setIsParticipantsOpen(false);\n          }\n        }}\n        leaveClass={handleLeaveClass}\n      />\n    </div>\n  );\n};\n\nexport default ClassroomInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}