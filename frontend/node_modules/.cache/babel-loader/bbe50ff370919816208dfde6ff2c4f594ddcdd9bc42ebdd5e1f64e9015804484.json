{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rkgup\\\\OneDrive\\\\Desktop\\\\corementis\\\\frontend\\\\src\\\\components\\\\student\\\\ClassroomInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\n// Import classroom components\nimport VideoGrid from './classroom/VideoGrid';\nimport Controls from './classroom/Controls';\nimport ChatPanel from './classroom/ChatPanel';\nimport ParticipantsList from './classroom/ParticipantsList';\nimport EngagementIndicator from './classroom/EngagementIndicator';\n\n// Import engagement service\nimport EngagementService from '../../services/EngagementService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClassroomInterface = ({\n  courseId,\n  courseName\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const videoRef = useRef(null);\n\n  // State for media streams\n  const [localStream, setLocalStream] = useState(null);\n  const [screenStream, setScreenStream] = useState(null);\n\n  // State for UI controls\n  const [isMicOn, setIsMicOn] = useState(false);\n  const [isCameraOn, setIsCameraOn] = useState(false);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [isParticipantsOpen, setIsParticipantsOpen] = useState(false);\n  const [isHandRaised, setIsHandRaised] = useState(false);\n\n  // State for engagement analysis\n  const [engagementData, setEngagementData] = useState(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [showEngagementMetrics, setShowEngagementMetrics] = useState(true);\n  const [analyzerInitialized, setAnalyzerInitialized] = useState(false);\n\n  // Reference for the analysis interval\n  const analysisIntervalRef = useRef(null);\n\n  // Sample class information\n  const classInfo = {\n    name: courseName || 'Computer Vision',\n    instructor: 'Dr. Smith',\n    topic: 'OpenVINO Models for Facial Recognition',\n    time: '10:00 AM - 11:30 AM'\n  };\n\n  // Handle leaving the class\n  const handleLeaveClass = () => {\n    // Clean up media streams\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n    }\n    if (screenStream) {\n      screenStream.getTracks().forEach(track => track.stop());\n    }\n\n    // Navigate back to dashboard\n    navigate('/dashboard');\n  };\n\n  // Initialize engagement analyzer\n  const initializeAnalyzer = async () => {\n    try {\n      const response = await EngagementService.initialize('lecture');\n      if (response.success) {\n        setAnalyzerInitialized(true);\n        console.log('Engagement analyzer initialized successfully');\n      } else {\n        console.error('Failed to initialize engagement analyzer:', response.message);\n      }\n    } catch (error) {\n      console.error('Error initializing engagement analyzer:', error);\n    }\n  };\n\n  // Capture and analyze video frame\n  const analyzeEngagement = async () => {\n    if (!videoRef.current || !isCameraOn || !analyzerInitialized) return;\n    try {\n      // Create a canvas to capture the current frame\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      canvas.width = videoRef.current.videoWidth;\n      canvas.height = videoRef.current.videoHeight;\n\n      // Draw the current video frame to the canvas\n      context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n\n      // Convert the canvas to a base64 image\n      const imageData = canvas.toDataURL('image/jpeg', 0.8);\n\n      // Send the image to the engagement analyzer\n      const result = await EngagementService.analyzeFrame(imageData);\n      if (result.success) {\n        setEngagementData(result);\n      } else {\n        console.error('Error analyzing engagement:', result.message);\n      }\n    } catch (error) {\n      console.error('Error in engagement analysis:', error);\n    }\n  };\n\n  // Toggle camera\n  const toggleCamera = async () => {\n    if (isCameraOn && localStream) {\n      // Stop engagement analysis\n      if (analysisIntervalRef.current) {\n        clearInterval(analysisIntervalRef.current);\n        analysisIntervalRef.current = null;\n        setIsAnalyzing(false);\n      }\n      localStream.getVideoTracks().forEach(track => track.stop());\n      setLocalStream(prev => {\n        // Keep audio tracks if mic is on\n        if (prev && isMicOn && prev.getAudioTracks().length > 0) {\n          const audioOnlyStream = new MediaStream();\n          prev.getAudioTracks().forEach(track => audioOnlyStream.addTrack(track));\n          return audioOnlyStream;\n        }\n        return null;\n      });\n      setIsCameraOn(false);\n    } else {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n\n        // Combine with existing audio stream if mic is on\n        if (localStream && localStream.getAudioTracks().length > 0) {\n          const combinedStream = new MediaStream();\n          localStream.getAudioTracks().forEach(track => combinedStream.addTrack(track));\n          stream.getVideoTracks().forEach(track => combinedStream.addTrack(track));\n          setLocalStream(combinedStream);\n        } else {\n          setLocalStream(stream);\n        }\n        setIsCameraOn(true);\n\n        // Initialize analyzer if not already initialized\n        if (!analyzerInitialized) {\n          await initializeAnalyzer();\n        }\n\n        // Start engagement analysis\n        if (!analysisIntervalRef.current) {\n          setIsAnalyzing(true);\n          analysisIntervalRef.current = setInterval(analyzeEngagement, 3000); // Analyze every 3 seconds\n        }\n      } catch (err) {\n        console.error('Error accessing camera:', err);\n        alert('Could not access camera. Please check permissions.');\n      }\n    }\n  };\n\n  // Toggle microphone\n  const toggleMic = async () => {\n    if (isMicOn && localStream) {\n      localStream.getAudioTracks().forEach(track => track.stop());\n      setLocalStream(prev => {\n        // Keep video tracks if camera is on\n        if (prev && isCameraOn && prev.getVideoTracks().length > 0) {\n          const videoOnlyStream = new MediaStream();\n          prev.getVideoTracks().forEach(track => videoOnlyStream.addTrack(track));\n          return videoOnlyStream;\n        }\n        return null;\n      });\n      setIsMicOn(false);\n    } else {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n\n        // Combine with existing video stream if camera is on\n        if (localStream && localStream.getVideoTracks().length > 0) {\n          const combinedStream = new MediaStream();\n          localStream.getVideoTracks().forEach(track => combinedStream.addTrack(track));\n          stream.getAudioTracks().forEach(track => combinedStream.addTrack(track));\n          setLocalStream(combinedStream);\n        } else {\n          setLocalStream(stream);\n        }\n        setIsMicOn(true);\n      } catch (err) {\n        console.error('Error accessing microphone:', err);\n        alert('Could not access microphone. Please check permissions.');\n      }\n    }\n  };\n\n  // Toggle screen sharing\n  const toggleScreenShare = async () => {\n    if (isScreenSharing && screenStream) {\n      screenStream.getTracks().forEach(track => track.stop());\n      setScreenStream(null);\n      setIsScreenSharing(false);\n    } else {\n      try {\n        const stream = await navigator.mediaDevices.getDisplayMedia({\n          video: {\n            cursor: 'always'\n          },\n          audio: true\n        });\n\n        // Handle when user stops sharing via browser UI\n        stream.getVideoTracks()[0].onended = () => {\n          setScreenStream(null);\n          setIsScreenSharing(false);\n        };\n        setScreenStream(stream);\n        setIsScreenSharing(true);\n      } catch (err) {\n        console.error('Error sharing screen:', err);\n        alert('Could not share screen. Please check permissions.');\n      }\n    }\n  };\n\n  // Toggle hand raise\n  const toggleHandRaise = () => {\n    setIsHandRaised(!isHandRaised);\n    // In a real app, this would send a signal to the instructor\n  };\n\n  // Cleanup on component unmount\n  useEffect(() => {\n    return () => {\n      if (localStream) {\n        localStream.getTracks().forEach(track => track.stop());\n      }\n      if (screenStream) {\n        screenStream.getTracks().forEach(track => track.stop());\n      }\n      if (analysisIntervalRef.current) {\n        clearInterval(analysisIntervalRef.current);\n        analysisIntervalRef.current = null;\n      }\n    };\n  }, [localStream, screenStream]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-intel-dark-blue py-2 px-4 flex justify-between items-center shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-bold\",\n          children: classInfo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-4 text-sm opacity-75 hidden md:inline\",\n          children: classInfo.topic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm hidden md:inline\",\n          children: classInfo.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLeaveClass,\n          className: \"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded transition duration-200\",\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4\",\n        children: /*#__PURE__*/_jsxDEV(VideoGrid, {\n          localStream: localStream,\n          screenStream: screenStream,\n          isScreenSharing: isScreenSharing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), (isChatOpen || isParticipantsOpen) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-80 bg-gray-800 border-l border-gray-700 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex border-b border-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `flex-1 py-3 ${isChatOpen ? 'bg-gray-700' : ''}`,\n            onClick: () => {\n              setIsChatOpen(true);\n              setIsParticipantsOpen(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-comment-alt mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), \" Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `flex-1 py-3 ${isParticipantsOpen ? 'bg-gray-700' : ''}`,\n            onClick: () => {\n              setIsParticipantsOpen(true);\n              setIsChatOpen(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-users mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), \" Participants\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-hidden\",\n          children: isChatOpen ? /*#__PURE__*/_jsxDEV(ChatPanel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(ParticipantsList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      isMicOn: isMicOn,\n      toggleMic: toggleMic,\n      isCameraOn: isCameraOn,\n      toggleCamera: toggleCamera,\n      isScreenSharing: isScreenSharing,\n      toggleScreenShare: toggleScreenShare,\n      isHandRaised: isHandRaised,\n      toggleHandRaise: toggleHandRaise,\n      isChatOpen: isChatOpen,\n      toggleChat: () => setIsChatOpen(!isChatOpen),\n      isParticipantsOpen: isParticipantsOpen,\n      toggleParticipants: () => setIsParticipantsOpen(!isParticipantsOpen)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n};\n_s(ClassroomInterface, \"cYaNgOfuZG+c7C8FO+46Nmor1Gw=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ClassroomInterface;\nexport default ClassroomInterface;\nvar _c;\n$RefreshReg$(_c, \"ClassroomInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useLocation","VideoGrid","Controls","ChatPanel","ParticipantsList","EngagementIndicator","EngagementService","jsxDEV","_jsxDEV","ClassroomInterface","courseId","courseName","_s","navigate","location","videoRef","localStream","setLocalStream","screenStream","setScreenStream","isMicOn","setIsMicOn","isCameraOn","setIsCameraOn","isScreenSharing","setIsScreenSharing","isChatOpen","setIsChatOpen","isParticipantsOpen","setIsParticipantsOpen","isHandRaised","setIsHandRaised","engagementData","setEngagementData","isAnalyzing","setIsAnalyzing","showEngagementMetrics","setShowEngagementMetrics","analyzerInitialized","setAnalyzerInitialized","analysisIntervalRef","classInfo","name","instructor","topic","time","handleLeaveClass","getTracks","forEach","track","stop","initializeAnalyzer","response","initialize","success","console","log","error","message","analyzeEngagement","current","canvas","document","createElement","context","getContext","width","videoWidth","height","videoHeight","drawImage","imageData","toDataURL","result","analyzeFrame","toggleCamera","clearInterval","getVideoTracks","prev","getAudioTracks","length","audioOnlyStream","MediaStream","addTrack","stream","navigator","mediaDevices","getUserMedia","video","combinedStream","setInterval","err","alert","toggleMic","videoOnlyStream","audio","toggleScreenShare","getDisplayMedia","cursor","onended","toggleHandRaise","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toggleChat","toggleParticipants","_c","$RefreshReg$"],"sources":["C:/Users/rkgup/OneDrive/Desktop/corementis/frontend/src/components/student/ClassroomInterface.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\n// Import classroom components\nimport VideoGrid from './classroom/VideoGrid';\nimport Controls from './classroom/Controls';\nimport ChatPanel from './classroom/ChatPanel';\nimport ParticipantsList from './classroom/ParticipantsList';\nimport EngagementIndicator from './classroom/EngagementIndicator';\n\n// Import engagement service\nimport EngagementService from '../../services/EngagementService';\n\nconst ClassroomInterface = ({ courseId, courseName }) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const videoRef = useRef(null);\n  \n  // State for media streams\n  const [localStream, setLocalStream] = useState(null);\n  const [screenStream, setScreenStream] = useState(null);\n  \n  // State for UI controls\n  const [isMicOn, setIsMicOn] = useState(false);\n  const [isCameraOn, setIsCameraOn] = useState(false);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [isParticipantsOpen, setIsParticipantsOpen] = useState(false);\n  const [isHandRaised, setIsHandRaised] = useState(false);\n  \n  // State for engagement analysis\n  const [engagementData, setEngagementData] = useState(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [showEngagementMetrics, setShowEngagementMetrics] = useState(true);\n  const [analyzerInitialized, setAnalyzerInitialized] = useState(false);\n  \n  // Reference for the analysis interval\n  const analysisIntervalRef = useRef(null);\n  \n  // Sample class information\n  const classInfo = {\n    name: courseName || 'Computer Vision',\n    instructor: 'Dr. Smith',\n    topic: 'OpenVINO Models for Facial Recognition',\n    time: '10:00 AM - 11:30 AM'\n  };\n  \n  // Handle leaving the class\n  const handleLeaveClass = () => {\n    // Clean up media streams\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n    }\n    if (screenStream) {\n      screenStream.getTracks().forEach(track => track.stop());\n    }\n    \n    // Navigate back to dashboard\n    navigate('/dashboard');\n  };\n  \n  // Initialize engagement analyzer\n  const initializeAnalyzer = async () => {\n    try {\n      const response = await EngagementService.initialize('lecture');\n      if (response.success) {\n        setAnalyzerInitialized(true);\n        console.log('Engagement analyzer initialized successfully');\n      } else {\n        console.error('Failed to initialize engagement analyzer:', response.message);\n      }\n    } catch (error) {\n      console.error('Error initializing engagement analyzer:', error);\n    }\n  };\n\n  // Capture and analyze video frame\n  const analyzeEngagement = async () => {\n    if (!videoRef.current || !isCameraOn || !analyzerInitialized) return;\n    \n    try {\n      // Create a canvas to capture the current frame\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      canvas.width = videoRef.current.videoWidth;\n      canvas.height = videoRef.current.videoHeight;\n      \n      // Draw the current video frame to the canvas\n      context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n      \n      // Convert the canvas to a base64 image\n      const imageData = canvas.toDataURL('image/jpeg', 0.8);\n      \n      // Send the image to the engagement analyzer\n      const result = await EngagementService.analyzeFrame(imageData);\n      \n      if (result.success) {\n        setEngagementData(result);\n      } else {\n        console.error('Error analyzing engagement:', result.message);\n      }\n    } catch (error) {\n      console.error('Error in engagement analysis:', error);\n    }\n  };\n\n  // Toggle camera\n  const toggleCamera = async () => {\n    if (isCameraOn && localStream) {\n      // Stop engagement analysis\n      if (analysisIntervalRef.current) {\n        clearInterval(analysisIntervalRef.current);\n        analysisIntervalRef.current = null;\n        setIsAnalyzing(false);\n      }\n      \n      localStream.getVideoTracks().forEach(track => track.stop());\n      setLocalStream(prev => {\n        // Keep audio tracks if mic is on\n        if (prev && isMicOn && prev.getAudioTracks().length > 0) {\n          const audioOnlyStream = new MediaStream();\n          prev.getAudioTracks().forEach(track => audioOnlyStream.addTrack(track));\n          return audioOnlyStream;\n        }\n        return null;\n      });\n      setIsCameraOn(false);\n    } else {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        \n        // Combine with existing audio stream if mic is on\n        if (localStream && localStream.getAudioTracks().length > 0) {\n          const combinedStream = new MediaStream();\n          localStream.getAudioTracks().forEach(track => combinedStream.addTrack(track));\n          stream.getVideoTracks().forEach(track => combinedStream.addTrack(track));\n          setLocalStream(combinedStream);\n        } else {\n          setLocalStream(stream);\n        }\n        \n        setIsCameraOn(true);\n        \n        // Initialize analyzer if not already initialized\n        if (!analyzerInitialized) {\n          await initializeAnalyzer();\n        }\n        \n        // Start engagement analysis\n        if (!analysisIntervalRef.current) {\n          setIsAnalyzing(true);\n          analysisIntervalRef.current = setInterval(analyzeEngagement, 3000); // Analyze every 3 seconds\n        }\n      } catch (err) {\n        console.error('Error accessing camera:', err);\n        alert('Could not access camera. Please check permissions.');\n      }\n    }\n  };\n  \n  // Toggle microphone\n  const toggleMic = async () => {\n    if (isMicOn && localStream) {\n      localStream.getAudioTracks().forEach(track => track.stop());\n      setLocalStream(prev => {\n        // Keep video tracks if camera is on\n        if (prev && isCameraOn && prev.getVideoTracks().length > 0) {\n          const videoOnlyStream = new MediaStream();\n          prev.getVideoTracks().forEach(track => videoOnlyStream.addTrack(track));\n          return videoOnlyStream;\n        }\n        return null;\n      });\n      setIsMicOn(false);\n    } else {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        \n        // Combine with existing video stream if camera is on\n        if (localStream && localStream.getVideoTracks().length > 0) {\n          const combinedStream = new MediaStream();\n          localStream.getVideoTracks().forEach(track => combinedStream.addTrack(track));\n          stream.getAudioTracks().forEach(track => combinedStream.addTrack(track));\n          setLocalStream(combinedStream);\n        } else {\n          setLocalStream(stream);\n        }\n        \n        setIsMicOn(true);\n      } catch (err) {\n        console.error('Error accessing microphone:', err);\n        alert('Could not access microphone. Please check permissions.');\n      }\n    }\n  };\n  \n  // Toggle screen sharing\n  const toggleScreenShare = async () => {\n    if (isScreenSharing && screenStream) {\n      screenStream.getTracks().forEach(track => track.stop());\n      setScreenStream(null);\n      setIsScreenSharing(false);\n    } else {\n      try {\n        const stream = await navigator.mediaDevices.getDisplayMedia({ \n          video: { cursor: 'always' },\n          audio: true\n        });\n        \n        // Handle when user stops sharing via browser UI\n        stream.getVideoTracks()[0].onended = () => {\n          setScreenStream(null);\n          setIsScreenSharing(false);\n        };\n        \n        setScreenStream(stream);\n        setIsScreenSharing(true);\n      } catch (err) {\n        console.error('Error sharing screen:', err);\n        alert('Could not share screen. Please check permissions.');\n      }\n    }\n  };\n  \n  // Toggle hand raise\n  const toggleHandRaise = () => {\n    setIsHandRaised(!isHandRaised);\n    // In a real app, this would send a signal to the instructor\n  };\n  \n  // Cleanup on component unmount\n  useEffect(() => {\n    return () => {\n      if (localStream) {\n        localStream.getTracks().forEach(track => track.stop());\n      }\n      if (screenStream) {\n        screenStream.getTracks().forEach(track => track.stop());\n      }\n      if (analysisIntervalRef.current) {\n        clearInterval(analysisIntervalRef.current);\n        analysisIntervalRef.current = null;\n      }\n    };\n  }, [localStream, screenStream]);\n  \n  return (\n    <div className=\"flex flex-col h-screen bg-gray-900 text-white\">\n      {/* Header */}\n      <header className=\"bg-intel-dark-blue py-2 px-4 flex justify-between items-center shadow-md\">\n        <div className=\"flex items-center\">\n          <h1 className=\"text-xl font-bold\">{classInfo.name}</h1>\n          <span className=\"ml-4 text-sm opacity-75 hidden md:inline\">{classInfo.topic}</span>\n        </div>\n        <div className=\"flex items-center space-x-4\">\n          <span className=\"text-sm hidden md:inline\">{classInfo.time}</span>\n          <button \n            onClick={handleLeaveClass}\n            className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded transition duration-200\"\n          >\n            Leave\n          </button>\n        </div>\n      </header>\n      \n      {/* Main content area with VideoGrid */}\n      <div className=\"flex-1 flex overflow-hidden\">\n        <div className=\"flex-1 p-4\">\n          <VideoGrid \n            localStream={localStream} \n            screenStream={screenStream} \n            isScreenSharing={isScreenSharing} \n          />\n        </div>\n        \n        {/* Side panel with ChatPanel or ParticipantsList */}\n        {(isChatOpen || isParticipantsOpen) && (\n          <div className=\"w-80 bg-gray-800 border-l border-gray-700 flex flex-col\">\n            <div className=\"flex border-b border-gray-700\">\n              <button \n                className={`flex-1 py-3 ${isChatOpen ? 'bg-gray-700' : ''}`}\n                onClick={() => { setIsChatOpen(true); setIsParticipantsOpen(false); }}\n              >\n                <i className=\"fas fa-comment-alt mr-2\"></i> Chat\n              </button>\n              <button \n                className={`flex-1 py-3 ${isParticipantsOpen ? 'bg-gray-700' : ''}`}\n                onClick={() => { setIsParticipantsOpen(true); setIsChatOpen(false); }}\n              >\n                <i className=\"fas fa-users mr-2\"></i> Participants\n              </button>\n            </div>\n            <div className=\"flex-1 overflow-hidden\">\n              {isChatOpen ? <ChatPanel /> : <ParticipantsList />}\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Controls component */}\n      <Controls \n        isMicOn={isMicOn}\n        toggleMic={toggleMic}\n        isCameraOn={isCameraOn}\n        toggleCamera={toggleCamera}\n        isScreenSharing={isScreenSharing}\n        toggleScreenShare={toggleScreenShare}\n        isHandRaised={isHandRaised}\n        toggleHandRaise={toggleHandRaise}\n        isChatOpen={isChatOpen}\n        toggleChat={() => setIsChatOpen(!isChatOpen)}\n        isParticipantsOpen={isParticipantsOpen}\n        toggleParticipants={() => setIsParticipantsOpen(!isParticipantsOpen)}\n      />\n    </div>\n  );\n};\n\nexport default ClassroomInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}